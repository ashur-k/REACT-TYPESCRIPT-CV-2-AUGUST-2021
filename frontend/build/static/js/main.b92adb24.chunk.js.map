{"version":3,"sources":["redux/constants/blogConstants.ts","components/Footer/Footer.tsx","utils/types.ts","helperFunctions/getIcon.tsx","components/Button/Button.tsx","hooks/useTypedSelector.ts","components/Header/Header.tsx","components/Timeline/Timeline.tsx","assets/images/ash.jpg","components/Profile/Profile.tsx","redux/actions/blogActions.ts","components/BlogNavbarItem/BlogNavbarItems.tsx","components/BlogNavbar/BlogNavbar.tsx","components/BlogCards/BlogCards.tsx","pages/Blog/Blog.tsx","components/SiteTitle/SiteTitle.tsx","components/GitHubApi/GitApi.tsx","pages/GitPage/GitPage.tsx","redux/constants/projectConstants.ts","redux/actions/projectActions.ts","redux/constants/resumeConstants.ts","components/ProjectNavbarItem/ProjectNavbarItem.tsx","components/ProjectNabar/ProjectNavbar.tsx","components/ProjectDialog/ProjectDialog.tsx","pages/Portfolio/Portfolio.tsx","redux/actions/resumeActions.ts","redux/constants/userConstants.ts","components/WorkExpreience/WorkExpreience.tsx","components/Education/Education.tsx","components/Card/CardComponent.tsx","components/Skills/Skills.tsx","components/SkillsCapabilities/SkillsCapabilities.tsx","components/Contact/Contact.tsx","pages/Resume/Resume.tsx","redux/actions/userActions.ts","redux/constants/blogDetailConstants.ts","pages/Login/Login.tsx","redux/actions/blogDetailActions.ts","components/BlogDescription/BlogDescription.tsx","components/BlogRequirements/BlogRequirements.tsx","components/BlogSteps/BlogSteps.tsx","pages/BlogDetail/BlogDetail.tsx","App.tsx","reportWebVitals.ts","redux/reducers/projectReducers.ts","redux/reducers/resumeReducers.ts","redux/reducers/userReducers.ts","redux/reducers/BlogReducers.ts","redux/reducers/BlogDetailsReducers.ts","store.ts","index.tsx"],"names":["BlogActionType","Footer","className","Typography","Copyright","href","profile","socials","title","link","text","icon","getIcon","CustomButton","Button","type","endIcon","useTypedSelector","useSelector","withRouter","props","pathName","location","pathname","state","userLogin","userInfo","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","map","social","target","rel","Toggle","Collapse","Telegram","CustomTimelineSeparator","TimelineSeparator","TimelineDot","variant","TimelineConnector","CustomTimeline","children","Timeline","TimelineItem","TimelineContent","CustomTimelineItem","Profile","src","profileImage","alt","BlogtNavbarItems","value","handlerFilterCategory","active","onClick","BlogNavbar","BlogCard","blogId","blogTitle","blogOverview","blogImagePath","CardGroup","Card","Img","Body","Title","Text","Blog","dispatch","useDispatch","blogList","error","loading","blogData","useState","blogs","setBlogs","setActive","useEffect","a","BLOG_LIST_REQUEST","axios","get","data","BLOG_LIST_SUCCESS","payload","BLOG_LIST_ERROR","message","document","Grid","container","Spinner","animation","Alert","item","xs","category","newArray","filter","blog","includes","spacing","Box","m","id","article_title","article_overview","banner_image_path","SiteTitle","useStyles","makeStyles","root","maxWidth","media","height","avatar","backgroundColor","red","GitApi","name","setName","userName","setUserName","followers","setFollowers","following","setFollowing","repos","setRepos","setAvatar","term","setTerm","reposInfo","setReposInfo","result","setData","console","log","fetchGitUsers","fetchGitRepos","login","public_repos","avatar_url","classes","style","width","alignItems","justifyContent","direction","justify","CardHeader","Avatar","subheader","CardActionArea","Image","rounded","thumbnail","CardContent","CardActions","gutterBottom","component","TextField","label","fullWidth","onChange","e","repo","sm","md","html_url","Paper","elevation","GitPage","ActionType","ProjectNavbarItems","ProjectsNavbar","ProjectDialog","projectDialog","open","onClose","Dialog","Icon","DialogTitle","image","fluid","DialogContent","description","key_techs","DialogActions","github_url","deployed_url","deployed_url_icon","Portfolio","projectList","projects","projectsData","setProjectsData","setProjectDialog","PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","response","detail","React","setOpen","filteredProject","project","Grow","in","timeout","WorkExpreience","work_expereinces","experience","date","office_job","work_url","Education","education_details","edu","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","institute_link","institute_name","CardComponent","margin","paddingBottom","Skills","skills","skill","SkillsCapabilities","skillCapabilities","element","Contact","lg","multiline","rows","Resume","resumeList","aboutme","aboutMeText","setAboutMeText","education","setEducation","work","setWork","setSkills","setSkillCapabilities","RESUME_LIST_REQUEST","RESUME_LIST_SUCCESS","RESUME_LIST_FAIL","me","about_me","skill_capabilities","BlogDetailsActionType","Login","email","setEmail","password","setPassword","objectLength","Object","keys","length","logoutHandler","localStorage","removeItem","USER_LOGOUT","isAdmin","onSubmit","preventDefault","USER_LOGIN_REQUEST","config","headers","post","USER_LOGIN_SUCCESS","setItem","JSON","stringify","USER_LOGIN_FAIL","BlogDescription","BlogRequirements","requirements","requirement","BlogSteps","blog_sections","section","blog_reading_links","paragraph","link_url","link_title","blog_section_terminal_commands","command","image_path","blog_section_images","blog_section_code_snippets","snippet","code_title","code_snippet","BlogDetail","match","blogDetail","blogDetailData","setRequirements","blogSections","setBlogSections","params","BLOG_DETAIL_REQUEST","BLOG_DETAIL_SUCCESS","BLOG_DETAIL_ERROR","App","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducers","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b92adb24.chunk.js","sourcesContent":["export enum BlogActionType {\r\n  BLOG_LIST_REQUEST = 'blog_list_request',\r\n  BLOG_LIST_SUCCESS = 'blog_list_success',\r\n  BLOG_LIST_ERROR = 'blog_list_error',\r\n }","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport { Copyright } from '@material-ui/icons';\r\n\r\n// css imports\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">Ashur Kanwal</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Coded by {\" \"}\r\n          <Copyright/>\r\n          <a href=\"/\">ashurkanwal@yahoo.com</a>\r\n          <br />\r\n          <a  href='/'>Ashur Kanwal 2021 Resume Site.</a>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export interface profileInfo {\r\n  name: string;\r\n  title: string;\r\n  DOB: string;\r\n  email: string;\r\n  address: string;\r\n  phone: string;\r\n  cv:string;\r\n\r\n  socials: {\r\n    Facebook: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    Twitter: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    LinkedIn: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    GitHub: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const profile: profileInfo = {\r\n  name: 'Ashur Kanwal',\r\n  title: 'Full-Stack-Developer',\r\n  DOB: 'July',\r\n  email: 'ashurkanwal@yahoo.com',\r\n  address: 'Grangemouth Scotland',\r\n  phone: '07397325523',\r\n  cv: '/images/AshurkanwalCV.pdf',\r\n\r\n  socials:{\r\n    Facebook:{\r\n      link: 'facebook.com',\r\n      text: 'myFacebook',\r\n      icon: 'FacebookIcon',\r\n    },\r\n    Twitter:{\r\n      link: 'twitter.com',\r\n      text: 'myTwitter',\r\n      icon: 'TwitterIcon',\r\n    },\r\n    \r\n    LinkedIn:{\r\n      link: 'linkedin.com',\r\n      text: 'myLinkeIn',\r\n      icon: 'LinkedInIcon',\r\n    },\r\n    GitHub:{\r\n      link: 'github.com',\r\n      text: 'myGitHub',\r\n      icon: 'GitHubIcon',\r\n    }\r\n  }\r\n}\r\n\r\nexport interface socialsInterface {\r\n  title: string;\r\n  link: string;\r\n  text:string;\r\n  icon: string;\r\n}\r\n\r\nexport const socials: socialsInterface[] = [\r\n  {\r\n    title: 'Facebook',\r\n    link: 'https://www.facebook.com/',\r\n    text: 'myFacebook',\r\n    icon: 'FacebookIcon',\r\n  },\r\n  {\r\n    title: 'Twitter',\r\n    link: 'https://twitter.com/',\r\n    text: 'myTwitter',\r\n    icon: 'TwitterIcon',\r\n  },\r\n  {\r\n    title: 'LinkedIn',\r\n    link: 'https://www.linkedin.com/in/ashur-kanwal-37979b195/',\r\n    text: 'myLinkedIn',\r\n    icon: 'LinkedInIcon',\r\n  },\r\n  {\r\n    title: 'GitHub',\r\n    link: 'https://github.com/ashur-k',\r\n    text: 'myGitHub',\r\n    icon: 'GitHubIcon',\r\n  },\r\n]\r\n\r\ninterface ExperiencesInterface {\r\n  title: string;\r\n  date: string;\r\n  description: string;\r\n  gitLink:string;\r\n  hostLink: string;\r\n}\r\n\r\nexport const experiences:ExperiencesInterface[] = [\r\n  {\r\n    title: 'Kirk Of the Holy Rood',\r\n    date: 'Jan-2021 - April-2021',\r\n    description: 'Python django application, admin can manage all content including adding removing ministry section pages',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'RR-Clothes',\r\n    date: 'Sept-2020 - Dec-2020',\r\n    description: 'Python django E-commerce shopping site sells product including color size variants.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Car Sales Showroom',\r\n    date: 'May-2020 - August-2020',\r\n    description: 'Python flask appicaition built to manage and book car test drives.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Covid App',\r\n    date: 'Jan-2020 - April-2020',\r\n    description: 'International Rapid Covid API data where user can see covid stats of all countries.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n]\r\n\r\ninterface EducationInterface {\r\n  title: string;\r\n  instituteName:string;\r\n  instituteLink:string;\r\n  date: string;\r\n  description: string; \r\n}\r\n\r\nexport const education:EducationInterface[] = [\r\n  {\r\n    title: 'Full-Stack Web developer',\r\n    instituteName: 'Code Institute',\r\n    instituteLink:'link',\r\n    date: 'Dec-2019 - -Dec-2020',\r\n    description: 'Full-Stack Web developer'\r\n  },\r\n  {\r\n    title: 'Bachelors Degree',\r\n    instituteName: 'PIMSAT',\r\n    instituteLink:'link',\r\n    date: '2017 - 2018',\r\n    description: 'Lorem Ipsum text for now'\r\n  },\r\n  {\r\n    title: 'First Line Manager Diploma',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'https://www.stockton.ac.uk/',\r\n    date: '2017 - 2018',\r\n    description: 'Management is the best I love management'\r\n  },\r\n  {\r\n    title: 'Computer Itq Graphics',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Adobe Suits and adobe suites'\r\n  },\r\n  {\r\n    title: 'Performing Arts In Music',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Performing art singing, dancing, and acting.'\r\n  },\r\n]\r\n\r\ninterface SkillsInterface {\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n}\r\n\r\nexport const skills: SkillsInterface[] = [\r\n  {\r\n    title: 'React Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoReact',\r\n  },\r\n  {\r\n    title: 'Python Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoPython',\r\n  },\r\n  {\r\n    title: 'Database Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'FiDatabase',\r\n  },\r\n]\r\n\r\n\r\nexport interface SkillsCapabilitiesInterface {\r\n  title: string;\r\n  description: string[];\r\n}\r\n\r\nexport const skillsCapabilities: SkillsCapabilitiesInterface[] = [\r\n  {\r\n    title: \"FrontEnd\",\r\n    description: [\r\n      \"ReactJs\",\r\n      \"JavaScript\",\r\n      \"TypeScript\",\r\n      \"Bootstrap\",\r\n      \"Material UI\"\r\n    ]\r\n      ,\r\n  },\r\n  {\r\n    title: \"Backend\",\r\n    description: [\r\n      \"Python\",\r\n      \"Flask\",\r\n      \"Django\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Database\",\r\n    description: [\r\n      \"SQL\",\r\n      \"Postgres-sql\",\r\n      \"Firebase\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Source Control\",\r\n    description: [\r\n      \"GitHub\"\r\n    ],\r\n  },\r\n];\r\n\r\n\r\n\r\nexport type Category = \"react\" | \"nextjs\" | \"typescript\" | \"flask\" | \"django\" | \"mongo\" | \"main-projects\" ;\r\nexport interface ProjectInterface {\r\n  id:number;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  deployed_url: string;\r\n  deployed_url_icon: string;\r\n  github_url: string;\r\n  category: Category[];\r\n  key_techs: string[];\r\n}\r\n\r\nexport interface UserInterface {\r\n  \r\n}\r\n\r\nexport interface ResumeDataInterface {\r\n  id: number;\r\n  about_me: string;\r\n  education_details: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      institute_name:string;\r\n      institute_link:string;\r\n      date: string;\r\n      description: string; \r\n      about_me: number;\r\n    }\r\n  ];\r\n  work_expereinces: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      date: string;\r\n      description: string;\r\n      display_order: number;\r\n      office_job: boolean;\r\n      work_url: string;\r\n      deployed_url:string;\r\n      github_url:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skills: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      description: string; \r\n      icon:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skill_capabilities: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      category: string[]; \r\n      about_me: number;\r\n    }\r\n  ];\r\n} \r\n\r\nexport const resumeData: ResumeDataInterface[] = [\r\n  {\r\n      \"id\": 1,\r\n      \"about_me\": \"Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.d programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.\",\r\n      \"education_details\": [\r\n          {\r\n            \"id\": 1,\r\n            \"title\": \"Full-Stack Web developer\",\r\n            \"institute_name\": \"Code Institute\",\r\n            \"institute_link\": \"https://www.codeinstitute.net/\",\r\n            \"date\": \"Dec-2019 - -Dec-2020\",\r\n            \"description\": \"Full-Stack Web developer\",\r\n            \"about_me\": 1\r\n          },\r\n      ],\r\n      \"work_expereinces\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Kirk Of the Holy Rood\",\r\n            \"date\": \"Jan-2021 - April-2021\",\r\n            \"description\": \"Python Django application, admin can manage all content including adding removing ministry section pages\",\r\n            \"display_order\": 1,\r\n            \"office_job\": false,\r\n            \"work_url\": \"\",\r\n            \"deployed_url\": \"www.github.com\",\r\n            \"github_url\": \"www.github.com\",\r\n            \"about_me\": 1\r\n        }\r\n      ],\r\n      \"skills\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"React Skills\",\r\n            \"description\": \"I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql, and Redux. I have built the site using next.js, Gatsby. I have beginner's understanding of Typescript. My current resume site is built using react typescript and all typescripts types are written by me with my knowledge.\",\r\n            \"icon\": \"IoLogoReact\",\r\n            \"about_me\": 1\r\n        }\r\n    ],\r\n    \"skill_capabilities\": [\r\n      {\r\n          \"id\": 1,\r\n          \"title\": \"Frontend\",\r\n          \"category\": [\r\n              \"ReactJs\",\r\n              \"JavaScript\",\r\n              \"TypeScript\",\r\n              \"Bootstrap\",\r\n              \"Material UI\"\r\n          ],\r\n          \"about_me\": 1\r\n      }\r\n  ],\r\n      \r\n      \r\n  },\r\n]\r\n\r\n\r\n","// Material UI Icons import\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\n\r\n// React Icons import\r\nimport { IoLogoReact, IoLogoPython, IoLogoVercel, IoLogoFirebase } from \"react-icons/io5\";\r\nimport { FiDatabase } from \"react-icons/fi\";\r\nimport { FaGit } from \"react-icons/fa\";\r\nimport { GrHeroku } from \"react-icons/gr\";\r\nimport { SiNetlify } from \"react-icons/si\";\r\nimport { VscChecklist } from \"react-icons/vsc\";\r\nimport { FaBookReader } from \"react-icons/fa\";\r\nimport { MdAspectRatio } from \"react-icons/md\";\r\nimport { BsFillTerminalFill } from \"react-icons/bs\";\r\nimport { DiReact } from \"react-icons/di\";\r\nimport { BiCodeBlock } from \"react-icons/bi\";\r\n\r\n\r\n\r\nconst getIcon = (icon:string | undefined): JSX.Element => {\r\n  switch(icon) {\r\n    case 'WorkIcon':\r\n      return (<WorkIcon className=\"SVG\" />);\r\n    case 'SchoolRoundedIcon':\r\n      return (<SchoolRoundedIcon className=\"SVG\" />);\r\n    case 'FacebookIcon':\r\n      return (<FacebookIcon className=\"SVG\" />);\r\n    case 'TwitterIcon':\r\n      return (<TwitterIcon className=\"SVG\" />);\r\n    case 'LinkedInIcon':\r\n      return (<LinkedInIcon className=\"SVG\" />);\r\n    case 'GitHubIcon':\r\n      return (<GitHubIcon />);\r\n    case 'IoLogoPython':\r\n      return (<IoLogoPython />);\r\n    case 'CloseIcon':\r\n      return (<CloseIcon />);\r\n    case 'IoLogoReact':\r\n      return (<IoLogoReact />);\r\n    case 'FiDatabase':\r\n      return (<FiDatabase />);\r\n    case 'FaGit':\r\n      return (<FaGit />);\r\n    case 'GrHeroku':\r\n      return (<GrHeroku />);\r\n    case 'IoLogoVercel':\r\n      return (<IoLogoVercel />);\r\n    case 'IoLogoFirebase':\r\n      return (<IoLogoFirebase />);\r\n    case 'SiNetlify':\r\n      return (<SiNetlify />);\r\n    case 'SendIcon':\r\n      return (<SendIcon />);\r\n    case 'SearchIcon':\r\n      return (<SearchIcon />);\r\n    case 'VscChecklist':\r\n      return (<VscChecklist className=\"SVG\"/>);\r\n    case 'DescriptionIcon':\r\n      return (<DescriptionIcon className=\"SVG\"/>);\r\n    case 'FaBookReader':\r\n      return (<FaBookReader className=\"SVG\"/>);\r\n    case 'MdAspectRatio':\r\n      return (<MdAspectRatio className=\"SVG-PRIMARY-COLOR\"/>);\r\n    case 'BsFillTerminalFill':\r\n      return (<BsFillTerminalFill className=\"SVG\"/>);\r\n    case 'DiReact':\r\n      return (<DiReact className=\"SVG\"/>);\r\n    case 'BiCodeBlock':\r\n      return (<BiCodeBlock className=\"SVG-PRIMARY-COLOR\"/>);  \r\n    default:\r\n      return (<small>No Icon Found</small>);\r\n  }\r\n};\r\n\r\nexport default getIcon;","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Button } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './Button.css';\r\n\r\ninterface buttonInterface {\r\n  text: string;\r\n  icon: JSX.Element | null;\r\n}\r\n\r\nconst CustomButton = ({text, icon}: buttonInterface) => {\r\n  return (\r\n    <Button \r\n      className='custom_btn'\r\n      type=\"submit\"\r\n      endIcon={\r\n        icon ? (\r\n          <div className=\"btn_icon_container\">{icon}</div>\r\n          ): null }>\r\n        <span className='btn_text'>{text}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CustomButton","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import React from 'react';\r\n\r\n// Typescript imports\r\nimport { socials } from '../../utils/types';\r\nimport {  RouteComponentProps } from 'react-router-dom';\r\n\r\n// Get icon helper function\r\nimport getIcon from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { HomeRounded, Telegram } from '@material-ui/icons';\r\nimport CustomButton from '../Button/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\n// css imports\r\nimport './Header.css';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\n// import { logout } from '../../redux/actions/userActions'\r\n// import { useDispatch } from 'react-redux';\r\n\r\nconst Header = (props: RouteComponentProps) => {\r\n\r\n  const pathName = props?.location?.pathname;\r\n  // const dispatch = useDispatch();\r\n\r\n  const userLogin =  useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  \r\n\r\n\r\n  // const logoutHandler = () => {\r\n  //   console.log(\"logging out\")\r\n  //   dispatch(logout)\r\n  // }\r\n\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" sticky='top' className='header'>\r\n      <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n        <Navbar.Brand className='header_home'>\r\n          <HomeRounded className=\"SVG\" />\r\n        </Navbar.Brand>\r\n      </Nav.Link>\r\n      {/* Only visible on mobile devices */}\r\n      <div className=\"mobile_social_icons\">\r\n        {\r\n          socials.map((social) => (\r\n            <a\r\n              key={social.icon}\r\n              href={social.link}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >{getIcon(social.icon)}</a>\r\n          ))}\r\n      </div>\r\n\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className=\"navbar_collapse\">\r\n        <Nav className='header_left'>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/'\r\n            className={pathName === \"/\" ? \"header_link_active\" : \"header_link\"}          \r\n          >Resume\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/portfolio'\r\n            className={pathName === \"/portfolio\" ? \"header_link_active\" : \"header_link\"}\r\n          >Portfolio\r\n          </Nav.Link>\r\n\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/blog'\r\n            className={pathName === \"/blog\" ? \"header_link_active\" : \"header_link\"}\r\n          >Blog\r\n          </Nav.Link>\r\n          \r\n          {/* {userInfo ? (\r\n            <Nav.Link \r\n              as={NavLink}\r\n              to='/login'\r\n              className={pathName === \"/login\" ? \"header_link_active\" : \"header_link\"}\r\n            >Logout\r\n          </Nav.Link>\r\n          ):(\r\n            <Nav.Link\r\n              as={NavLink}\r\n              to='/login'\r\n              className={pathName === \"/login\" ? \"header_link_active\" : \"header_link\"}\r\n            >Login\r\n            </Nav.Link>\r\n          )\r\n          }  */}\r\n          \r\n\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/GitPage'\r\n            className={pathName === \"/GitPage\" ? \"header_link_active\" : \"header_link\"}\r\n          >Git\r\n          </Nav.Link>\r\n        </Nav>\r\n        {/* Only visible on desktop */}\r\n        <div className='header_right'>\r\n          {\r\n            socials.map((social) => (\r\n              <a\r\n                key={social.icon}\r\n                href={social.link}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"not-show-on-smaller-screen\"\r\n              >{getIcon(social.icon)}</a>\r\n            ))}\r\n            <a href=\"https://ashur-resume-site.s3.eu-west-2.amazonaws.com/AshurkanwalCV.pdf\" target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton text={'Hire me'} icon={<Telegram />} />\r\n            </a>\r\n        </div>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './Timeline.css'\r\n\r\ninterface timeLineProps {\r\n  title: string;\r\n  icon:any;\r\n  children: any;\r\n}\r\n\r\nconst CustomTimeline = ({ title, icon, children }: timeLineProps ) => {\r\n  return (\r\n    <Timeline className='timeline'>\r\n      <TimelineItem className={'timeline_firstItem'}>\r\n        <TimelineSeparator>\r\n          <TimelineDot className={'timeline_dot_header'}>\r\n            {icon}\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography variant='h6' className={'timeline_header'}>\r\n            {title}\r\n          </Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>      \r\n      {children}\r\n    </Timeline>\r\n \r\n  )\r\n};\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n  <TimelineSeparator className={'separator_padding'}>\r\n    <TimelineDot variant={'outlined'} className={'timeline_dot'} />    \r\n    <TimelineConnector />\r\n  </TimelineSeparator>\r\n)\r\n\r\nexport default CustomTimeline\r\n","export default __webpack_public_path__ + \"static/media/ash.b620187d.jpg\";","import React from 'react';\r\n\r\n// Typescript imports\r\nimport { profile, socials } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core'\r\nimport CustomTimeLine, { CustomTimelineSeparator } from '../Timeline/Timeline';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomButton from '../Button/Button'\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\n// css and Images imports\r\nimport profileImage from '../../assets/images/ash.jpg';\r\nimport './profile.css';\r\n\r\n\r\ninterface customTimelinechildren {\r\n  title: string;\r\n  text: string;\r\n  link: string | null;\r\n}\r\n\r\n// Custom timeline copmponent to show socail icons in sidebar section \r\nconst CustomTimelineItem = ({title, text, link}: customTimelinechildren) => (\r\n \r\n  <TimelineItem>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent>\r\n      {link ? (\r\n      <Typography className=\"timelineItem_text\">\r\n        <span>{title}:</span>{\" \"}\r\n        <a href={link} target='_blank' rel='noreferrer'>\r\n          {text}\r\n        </a>        \r\n      </Typography>\r\n      ) : (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}: </span>{text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n)\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className='profile container_shadow'>\r\n      <div className='profile_name'>\r\n        <Typography className='name'>{profile.name}</Typography>\r\n        <Typography className='title'>{profile.title}</Typography>\r\n      </div>\r\n\r\n      <figure className='profile_image'>\r\n        <img src={profileImage} alt=\"\" />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeLine title={''} icon={<ImageSearchIcon className=\"SVG\"/>}  >\r\n          <CustomTimelineItem title='Mobile' text='0739-732-5523' link=\"\"/>\r\n          <CustomTimelineItem title='Email' text={profile.email} link=\"\"/>\r\n          <CustomTimelineItem title='Address' text='Falkirk Scotland' link=\"\"/>\r\n          {\r\n            socials.map((social) => (\r\n              <CustomTimelineItem \r\n                key={social.title}\r\n                title={social.title} \r\n                text={social.text} \r\n                link={social.link} \r\n              />\r\n            ))\r\n          }\r\n        </CustomTimeLine>\r\n        <div className='button-container'>\r\n        <a href=\"https://ashur-resume-site.s3.eu-west-2.amazonaws.com/AshurkanwalCV.pdf\" target=\"_blank\" rel=\"noreferrer\">\r\n          <CustomButton \r\n            text={\"Download Cv\"} \r\n            icon={< GetAppIcon />}\r\n            />\r\n        </a>\r\n\r\n\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { BlogActionType } from '../constants/blogConstants';\r\nimport { BlogAction } from '../interfaces/BlogInterfaces';\r\n\r\nexport const blogList = () =>{\r\n  return async (dispatch: Dispatch<BlogAction>) => {\r\n    dispatch({\r\n      type: BlogActionType.BLOG_LIST_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await axios.get('/api/blogs/')\r\n      dispatch({\r\n        type: BlogActionType.BLOG_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error){\r\n      dispatch({\r\n        type: BlogActionType.BLOG_LIST_ERROR,\r\n        payload: error.message\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { FunctionComponent } from \"react\";\r\n\r\n// Typescript imports\r\nimport { Category } from '../../pages/Blog/data';\r\n\r\n// css imports\r\nimport './BlogNavbarItems.css';\r\n\r\n\r\nexport const BlogtNavbarItems:FunctionComponent<{\r\n  value: Category | \"all\"; \r\n  handlerFilterCategory: Function;  \r\n  active: string;\r\n  }> = ({value, handlerFilterCategory, active }) => {\r\n      let className = \"project-navbar-item hover:text-green\";\r\n      if (active === value) {\r\n        className += \" text-green\"\r\n      };\r\n    return (\r\n      <li className={className} onClick={() => handlerFilterCategory(value)}>\r\n        {value}\r\n      </li>\r\n    );\r\n  };","import { FunctionComponent } from \"react\";\r\nimport { BlogtNavbarItems } from \"../BlogNavbarItem/BlogNavbarItems\";\r\n\r\n// Custom components import\r\n// import { ProjectNavbarItems } from '../ProjectNavbarItem/ProjectNavbarItem';\r\n\r\n// css imports\r\nimport './BlogNavbar.css';\r\n\r\nconst BlogNavbar: FunctionComponent<{\r\n    handlerFilterCategory: Function;\r\n    active: string;\r\n  }> = (props) => {\r\n    return (\r\n      <div className=\"Project-navbar-main\">\r\n        <BlogtNavbarItems value=\"all\" {...props} />\r\n        <BlogtNavbarItems value=\"react\" {...props} />\r\n        <BlogtNavbarItems value=\"mongo\" {...props} />\r\n        <BlogtNavbarItems value=\"django\" {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default BlogNavbar;","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Button, Card, CardGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// css imports\r\nimport './BlogCards.css';\r\n\r\nexport const BlogCard:FunctionComponent<{\r\n  blogId: number;\r\n  blogTitle: string;\r\n  blogOverview: string;\r\n  blogImagePath: string;\r\n}> = ({blogId, blogTitle, blogOverview, blogImagePath}) => {\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n        <Card.Img variant=\"top\" src={blogImagePath} />\r\n        <Card.Body>\r\n          <Card.Title>{blogTitle}</Card.Title>\r\n          <Card.Text>\r\n            {blogOverview}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Link to={`/blog-detail/${blogId}`}>\r\n            <Button variant=\"primary\">Read more ...</Button>\r\n          </Link>          \r\n        </Card.Footer>\r\n      </Card>  \r\n</CardGroup>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { blogList } from '../../redux/actions/blogActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { Blog as BlogInterface, Category } from './data';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport { Alert, Spinner } from 'react-bootstrap';\r\n\r\n// Custom components import\r\nimport BlogNavbar from '../../components/BlogNavbar/BlogNavbar';\r\nimport { BlogCard } from '../../components/BlogCards/BlogCards';\r\n\r\n// css imports\r\nimport './Blog.css'\r\n\r\n\r\nconst Blog = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const {error, loading, blogData} = useTypedSelector((state) => state.blogList);\r\n\r\n  // USE STATE VARIABLES\r\n  const [blogs, setBlogs] = useState<BlogInterface | any>([]);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  // useEddect to dispatch URL to get that data from database\r\n  // All redux functionality begins here\r\n   useEffect(() => {\r\n    dispatch(blogList())\r\n    document.title = \"Ash's Blogs\"\r\n  }, [dispatch]);\r\n\r\n  // useEffect for waiting and then loading \r\n  // blogs into blogs use state variable\r\n  useEffect(() => {\r\n    setBlogs(blogData)\r\n  }, [blogData]);\r\n \r\n\r\n  // Filtering sytem for Project Navbar\r\n  const handleFilterCategory = (category: Category | 'all') => {\r\n    if (category === \"all\") {\r\n      setBlogs(blogData)\r\n      setActive(category);\r\n      return;\r\n    }\r\n    const newArray = blogData.filter((blog) =>\r\n      blog.category.includes(category)\r\n    );\r\n\r\n    setBlogs(newArray);\r\n    setActive(category);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading ? (\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            <Spinner animation=\"border\" variant=\"danger\" />\r\n          </Grid>\r\n        ) : error ? (\r\n        <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>\r\n        ) : (\r\n          <Grid className=\"section pb_45 pt_45\">\r\n          {/* Title */}\r\n          <Grid item className=\"section_title mb_20\">\r\n            <span></span>\r\n            <h6 className=\"section_title_text\">Blogs</h6>\r\n          </Grid>\r\n          {/* Project Navbar */}\r\n          <Grid item xs={12}>\r\n            <BlogNavbar\r\n              handlerFilterCategory={handleFilterCategory}\r\n              active={active}\r\n            />\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid container item xs={12} spacing={1}>\r\n              {\r\n                blogs.map((blog:any) => (              \r\n                  <Grid container item xs={6} spacing={1}>\r\n                    <Box m={1} >\r\n                      <BlogCard \r\n                        blogId={blog.id}\r\n                        blogTitle={blog.article_title} \r\n                        blogOverview={blog.article_overview}\r\n                        blogImagePath={blog.banner_image_path}/>\r\n                    </Box>  \r\n                  </Grid>                          \r\n                )\r\n                )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog;","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './SiteTitle.css';\r\n\r\nconst SiteTitle:FunctionComponent<{title: string}> = ({title}) => {\r\n  return (\r\n    <Grid item className=\"section_title mb_30\">\r\n      <span></span>\r\n      <h6 className='section_title_text'>{title}</h6>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n","import React, { useState, useEffect } from 'react'; \r\n\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Avatar, Card, CardActionArea, CardActions, CardContent, CardHeader, Grid, Paper, TextField, Typography, } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './GitApi.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Image } from 'react-bootstrap';\r\nimport { red } from '@material-ui/core/colors';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n});\r\n\r\nconst GitApi = () => {\r\n  const [name, setName] = useState<string>('');\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [followers, setFollowers] = useState<string>('');\r\n  const [following, setFollowing] = useState<string>('');\r\n  const [repos, setRepos] = useState<string>('');\r\n  const [avatar, setAvatar] = useState<string>('');  \r\n  const [term, setTerm] = useState<string>('ashur-k');\r\n  \r\nconst [reposInfo, setReposInfo] = useState([]);\r\n\r\ninterface GitUserData{\r\n  name: string;\r\n  login: string;\r\n  followers: string;\r\n  following: string;\r\n  public_repos: string;\r\n  avatar_url: string;\r\n\r\n}\r\n \r\n  useEffect(() => {  \r\n    async function fetchGitUsers(){ \r\n      try {\r\n        const result = await axios(`https://api.github.com/users/${term}`)\r\n\r\n        setData(result.data)\r\n      }catch(err){\r\n        console.log(\"USER Fetch ERROR:\", err)\r\n      }\r\n    }\r\n    async function fetchGitRepos(){\r\n  \r\n      try {\r\n        const result:any = await axios(`https://api.github.com/users/${term}/repos`)\r\n        setReposInfo(result.data)\r\n\r\n      }catch(err){\r\n        console.log(\"Repo Fetch ERROR:\", err)\r\n      }\r\n    }  \r\n    fetchGitUsers()\r\n    fetchGitRepos() \r\n    const setData= ({ name, login, followers, following, public_repos, avatar_url }:GitUserData) => {\r\n      setName(name)\r\n      setUserName(login)\r\n      setFollowers(followers)\r\n      setFollowing(following)\r\n      setRepos(public_repos)\r\n      setAvatar(avatar_url)\r\n    }    \r\n  },[term]);\r\n   \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{width:\"100%\"}}>\r\n      <Grid item xs={12}>\r\n        <Grid container \r\n          spacing={3}            \r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          className=\"section\"\r\n          >       \r\n            \r\n        </Grid>\r\n        <Grid \r\n          container \r\n          spacing={3} \r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"> \r\n          <Grid item xs={12} >\r\n            <Card className={classes.root}>\r\n                  <CardHeader\r\n                      avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                          {getIcon('FaGit')}\r\n                        </Avatar>\r\n                      }\r\n                      title={name}\r\n                      subheader={userName}\r\n                    />\r\n                    <CardActionArea>\r\n                      <Image\r\n                        rounded\r\n                        thumbnail\r\n                        src={avatar}\r\n                        alt={name}\r\n                      />\r\n                      <CardContent>\r\n                      \r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                        Followers: {followers}\r\n                      </Typography>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">              \r\n                        Following: {following}\r\n                      </Typography>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                        Repos: {repos}\r\n                      </Typography>              \r\n                  </CardActions>\r\n                </Card>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={0}>  \r\n            <div className=\"repositoriesTitle\"> \r\n            <TextField \r\n              label=\"Search\"\r\n              value={term} \r\n              fullWidth\r\n              onChange={e => setTerm(e.target.value)}     \r\n              className=\"searchInputField\"\r\n              \r\n              />\r\n              </div>\r\n\r\n          \r\n              <Grid container item xs={12} spacing={1}>\r\n             \r\n            {\r\n              reposInfo.map((repo:any) => (  \r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noreferrer\">\r\n                  <Paper className=\"repoName-Paper\" elevation={3} >\r\n                    {repo.name}\r\n                  </Paper>\r\n                  </a>\r\n                </Grid>\r\n              ))\r\n            }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        \r\n        </Grid>\r\n      </Grid>\r\n    </div>  \r\n  \r\n  )\r\n}\r\nexport default GitApi\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\n\r\nimport GitApi from '../../components/GitHubApi/GitApi';\r\nimport './GitPage.css';\r\n\r\nfunction GitPage() {\r\n  document.title = \"Ash's Codes\"\r\n\r\n  return (\r\n    // Contact\r\n    <Grid container className=\"section pb_45 pt_45\">\r\n      <Grid container item xs={12} spacing={3} >\r\n        {/* Git Information */}\r\n        <Grid item xs={12} className=\"top_30\">\r\n          <SiteTitle title='Git Information' />\r\n          <GitApi />\r\n        </Grid>\r\n      </Grid>  \r\n    </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default GitPage","export const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST'\r\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS'\r\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL'\r\n\r\n\r\nexport enum ActionType {\r\n  PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST',\r\n  PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS',\r\n  PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL',\r\n}","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ActionType } from '../constants/projectConstants';\r\n\r\nimport { Action } from '../interfaces/interfaces';\r\n//import { ProjectInterface } from '../../utils/resumeData';\r\n\r\nexport const listProjects = () => async (dispatch:  Dispatch<Action>) => {\r\n\r\n   try {\r\n      dispatch({ type: ActionType.PROJECT_LIST_REQUEST })\r\n\r\n      const { data } = await axios.get('/api/projects/');\r\n\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n\r\n   } catch (error) {\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n      })\r\n   }\r\n }\r\n","export enum ActionType {\r\n  RESUME_LIST_REQUEST = 'RESUME_LIST_REQUEST',\r\n  RESUME_LIST_SUCCESS = 'RESUME_LIST_SUCCESS',\r\n  RESUME_LIST_FAIL = 'RESUME_LIST__FAIL',\r\n}","import { FunctionComponent } from \"react\";\r\n\r\n// Typescript imports\r\nimport { Category } from '../../utils/types';\r\n\r\n// css imports\r\nimport './ProjectNavbarItem.css';\r\n\r\n\r\nexport const ProjectNavbarItems:FunctionComponent<{\r\n  value: Category | \"all\"; \r\n  handlerFilterCategory: Function;  \r\n  active: string;\r\n  }> = ({value, handlerFilterCategory, active }) => {\r\n      let className = \"project-navbar-item hover:text-green\";\r\n      if (active === value) {\r\n        className += \" text-green\"\r\n      };\r\n    return (\r\n      <li className={className} onClick={() => handlerFilterCategory(value)}>\r\n        {value}\r\n      </li>\r\n    );\r\n  };","import { FunctionComponent } from \"react\";\r\n\r\n// Custom components import\r\nimport { ProjectNavbarItems } from '../ProjectNavbarItem/ProjectNavbarItem';\r\n\r\n// css imports\r\nimport './ProjectNavbar.css';\r\n\r\nconst ProjectsNavbar: FunctionComponent<{\r\n    handlerFilterCategory: Function;\r\n    active: string;\r\n  }> = (props) => {\r\n    return (\r\n      <div className=\"Project-navbar-main\">\r\n        <ProjectNavbarItems value=\"all\" {...props} />\r\n        <ProjectNavbarItems value=\"react\" {...props} />\r\n        <ProjectNavbarItems value=\"mongo\" {...props} />\r\n        <ProjectNavbarItems value=\"django\" {...props} />\r\n        <ProjectNavbarItems value=\"nextjs\" {...props} />\r\n        <ProjectNavbarItems value=\"typescript\" {...props} />\r\n        <ProjectNavbarItems value=\"main-projects\" {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ProjectsNavbar;","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ProjectInterface  } from '../../utils/types';\r\n\r\n// Get icon helper function\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI components import\r\nimport { Grid, Icon, Typography } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Image } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomButton from '../Button/Button'\r\n\r\n// css imports\r\nimport './ProjectDialog.css';\r\n\r\nconst ProjectDialog:FunctionComponent<{\r\n  projectDialog: null | ProjectInterface;\r\n  open: boolean;\r\n  onClose:(val: boolean) => void;\r\n}> = ({ projectDialog, open, onClose } ) => {\r\n\r\n  return (\r\n    <Dialog \r\n      className=\"projectDialog\" \r\n      fullWidth \r\n      open={open} \r\n      onClose={() => onClose(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\">\r\n      \r\n      <p className=\"dialogClose_button\"  onClick={() => onClose(false)}>\r\n        <Icon>{getIcon('CloseIcon')}</Icon>\r\n      </p>      \r\n\r\n      <DialogTitle className=\"projectDialog_title\" id=\"alert-dialog-title\">{projectDialog?.name}</DialogTitle>\r\n        \r\n        <Image src={projectDialog?.image} rounded fluid alt={projectDialog?.name} />\r\n        <DialogContent id=\"alert-dialog-description\">\r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Description:\r\n          </Typography>\r\n          <Typography variant=\"body2\" className=\"projectDialog_description\">\r\n            {projectDialog?.description}\r\n          </Typography>          \r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Key Techs:\r\n          </Typography>\r\n            <div>\r\n              <Grid container spacing={1}>  \r\n                <Grid container item xs={12} spacing={1}>\r\n                  {\r\n                    projectDialog?.key_techs.map((item) => (\r\n                      <Grid key={item} item xs={2} >\r\n                        <Typography className=\"key-tech-items\" variant=\"body2\">{item}</Typography>\r\n                      </Grid> \r\n                  ))\r\n                  }\r\n                </Grid> \r\n              </Grid>\r\n            </div>\r\n         </DialogContent>\r\n          <DialogActions className=\"projectDialog_actions\">\r\n            <a href={projectDialog?.github_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Codes on Github\" \r\n                icon={getIcon('GitHubIcon')}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n            <a href={projectDialog?.deployed_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Live Hosted Site\" \r\n                icon={getIcon(projectDialog?.deployed_url_icon)}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\nexport default ProjectDialog\r\n","import React, { useState, useEffect } from 'react';\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { listProjects } from '../../redux/actions/projectActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { Category, ProjectInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport {  Card, CardActionArea, CardContent, Grid, Grow, Typography } from '@material-ui/core';\r\nimport { Alert, Image, Spinner } from 'react-bootstrap';\r\n\r\n// Custom components import\r\nimport ProjectsNavbar  from '../../components/ProjectNabar/ProjectNavbar';\r\nimport ProjectDialog from '../../components/ProjectDialog/ProjectDialog';\r\n\r\n// css imports\r\nimport './Portfolio.css';\r\n\r\n\r\nconst Portfolio = () => {\r\n  const dispatch = useDispatch();\r\n   \r\n  const {error, loading, projects} =  useTypedSelector(\r\n      (state) => state.projectList\r\n    );\r\n  const [projectsData, setProjectsData] = useState<ProjectInterface[]>([]);  \r\n\r\n  const [projectDialog, setProjectDialog] = useState<null|ProjectInterface>(null);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  // UseEffect to dispatch listProjects action\r\n  useEffect(() => {\r\n    dispatch(listProjects())\r\n    document.title = \"Ash's Portfolio\"\r\n  },[dispatch]);\r\n\r\n  // UseEffect to update data to ProjectsData\r\n  useEffect(() => {     \r\n    setProjectsData(projects)\r\n  },[projects]);\r\n\r\n  // Filtering sytem for Project Navbar\r\n  const handleFilterCategory = (category: Category | 'all') => {\r\n    if(category === \"all\"){\r\n      setProjectsData((projects))\r\n      setActive(category);\r\n      return;\r\n    }    \r\n      const newArray = projects.filter((filteredProject)=> \r\n        filteredProject.category.includes(category)\r\n      );\r\n      setProjectsData(newArray);\r\n      setActive(category);\r\n  }\r\n  \r\n  // State to handle project dialog\r\n  const [open, setOpen] = React.useState(false);\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      {\r\n        loading ? (\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            <Spinner animation=\"border\" variant=\"danger\" />\r\n          </Grid>\r\n        ) \r\n        : error ? (\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>\r\n        ) : (\r\n          <Grid className=\"section pb_45 pt_45\">\r\n        <div>\r\n          {/* Title */}\r\n          <Grid item className=\"section_title mb_20\">\r\n            <span></span>\r\n            <h6 className=\"section_title_text\">Portfolio</h6>\r\n          </Grid>\r\n\r\n          {/* Project Navbar */}\r\n          <Grid item xs={12}>\r\n            <ProjectsNavbar\r\n              handlerFilterCategory={handleFilterCategory}\r\n              active={active}\r\n            />\r\n          </Grid>\r\n          <Grid container spacing={1}>  \r\n            <Grid container item xs={12} spacing={1}>            \r\n              {projectsData.map((project) => (     \r\n                  <Grid key={project.id} item xs={12} sm={6}>           \r\n                        <div>\r\n                      <Grow in timeout={1000}>\r\n                        <Card\r\n                          className='customCard' \r\n                          onClick={() => {setProjectDialog(project); setOpen(true)}}\r\n                        >\r\n                          <CardActionArea>\r\n                            <Image src={project.image} rounded thumbnail alt={project.name} /> \r\n                            <CardContent>\r\n                              <Typography className='customCard_title'>\r\n                                {project.name}\r\n                              </Typography>\r\n                              <Typography variant='body2' className='customCard_description'>\r\n                                {project.description}\r\n                              </Typography> \r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>                                         \r\n                      </Grow>\r\n                      \r\n                      </div>                  \r\n                  </Grid>\r\n                ))}              \r\n            </Grid> \r\n          </Grid>      \r\n        </div>   \r\n        <ProjectDialog projectDialog={projectDialog} open={open} onClose={closeDialog} />   \r\n      </Grid>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Portfolio;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ActionType } from '../constants/resumeConstants';\r\n\r\n\r\nexport const listAboutme = () => async (dispatch: Dispatch<Action>) => {\r\n  try{\r\n    dispatch({ type: ActionType.RESUME_LIST_REQUEST});\r\n    const { data } = await axios.get('/api/about_me/');\r\n\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n    })\r\n  }\r\n}","export enum ActionType {\r\n  USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST',\r\n  USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS',\r\n  USER_LOGIN_FAIL = 'USER_LOGIN_FAIL',\r\n  USER_LOGOUT = 'USER_LOGOUT',\r\n}","import React, { FunctionComponent } from 'react';\r\n// Redux imports\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './WorkExpreience.css'\r\n\r\nconst WorkExpreience:FunctionComponent<{\r\n  work_expereinces:ResumeDataInterface[\"work_expereinces\"];\r\n}> = ({ work_expereinces }) => {\r\n  return (       \r\n      <CustomTimeline \r\n        title='Work Experience'\r\n        icon={getIcon('WorkIcon')}\r\n        >\r\n        {work_expereinces.map((experience) => (\r\n          <TimelineItem key={experience.id}>\r\n            <CustomTimelineSeparator />\r\n            <TimelineContent className='timeline_content'>\r\n              <Typography className=\"timeline_title\">{experience.title}</Typography>\r\n              <Typography variant='caption' className=\"timeline_date\">{experience.date}</Typography>\r\n              <Typography variant='body2' className=\"timeline_description\">{experience.description}</Typography>\r\n              <div className=\"timeline_links\">\r\n                {\r\n                   experience.office_job ? (\r\n                    <Typography variant='body2' className=\"timeline_links-typography\">\r\n                      <a href={experience.work_url} target=\"_blank\" rel=\"noreferrer\">Work Site</a>                        \r\n                    </Typography>\r\n                  ) :\r\n                  (\r\n                    <div className=\"buttons-div\">\r\n                      <Typography variant='body2' className=\"timeline_links-typography\">\r\n                        <a href={experience.deployed_url} target=\"_blank\" rel=\"noreferrer\">Live Site</a>                        \r\n                      </Typography>\r\n                      <Typography variant='body2' className=\"timeline_links-typography\">                \r\n                        <a href={experience.github_url} target=\"_blank\" rel=\"noreferrer\"> Codes on Git</a>      \r\n                      </Typography>\r\n                    </div>\r\n                  )\r\n                }                \r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </CustomTimeline> \r\n  )\r\n}\r\n\r\nexport default WorkExpreience\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// import { education } from '../../utils/types';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './Education.css'\r\n\r\n\r\nconst Education:FunctionComponent<{\r\n  education_details:ResumeDataInterface[\"education_details\"];\r\n}> = ({education_details}) => {\r\n  return (\r\n    <CustomTimeline \r\n      title='Education'\r\n      icon={getIcon('SchoolRoundedIcon')}\r\n      >\r\n      {education_details.map((edu) => (\r\n        <TimelineItem key={edu.id}>\r\n          <CustomTimelineSeparator />\r\n          <TimelineContent className='timeline_content'>\r\n            <Typography className=\"timeline_title\">\r\n              <span>{edu.title}</span> \r\n              <span> from </span> \r\n              <span>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 250, hide: 400 }}\r\n                overlay={<Tooltip id=\"button-tooltip-2\">Check out Institute Link</Tooltip>}\r\n              >         \r\n                <a href={edu.institute_link} className=\"education_link\" target=\"_black\" rel=\"noreferrer\">\r\n                    {edu.institute_name}                 \r\n                </a>\r\n              </OverlayTrigger>\r\n              </span>                              \r\n            </Typography>\r\n            <Typography variant='caption' className=\"timeline_date\">{edu.date}</Typography>\r\n            <Typography variant='body2' className=\"timeline_description\">{edu.description}</Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      ))}\r\n    </CustomTimeline>\r\n  )\r\n}\r\n\r\nexport default Education\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Icon, Typography } from '@material-ui/core';\r\nimport { Card, CardGroup } from 'react-bootstrap';\r\n\r\n// css imports\r\nimport './CardComponent.css';\r\n\r\nexport const CardComponent:FunctionComponent<{\r\n  icon: string;\r\n  title: string;\r\n  description: string;\r\n}> = ({icon, title, description}) => {\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n      <div className=\"service\">                    \r\n        <Icon className=\"service_icon\" style={{margin:'12px', paddingBottom:\"50px\"}}>\r\n          {getIcon(icon)}\r\n        </Icon>\r\n        <Card.Body>        \r\n          <Typography className=\"service_title\" variant='h6'>\r\n            {title}\r\n          </Typography>          \r\n          <Typography className=\"service_description\" variant='body2'>\r\n            {description}\r\n          </Typography>          \r\n        </Card.Body>\r\n        </div>\r\n      </Card>\r\n    </CardGroup>  \r\n  )\r\n}\r\n\r\n\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Custom components import\r\nimport { CardComponent } from '../Card/CardComponent';\r\n\r\n// css imports\r\nimport './Skills.css'\r\n\r\nconst Skills:FunctionComponent<{\r\n  skills:ResumeDataInterface[\"skills\"];\r\n}> = ({ skills }) => {\r\n  return (\r\n    <Grid container spacing={3} justifyContent='space-around'>\r\n      {skills.map((skill) => (\r\n        <Grid key={skill.id} item sm={12} md={4}>          \r\n          <CardComponent \r\n            icon={skill.icon} \r\n            title={skill.title} \r\n            description={skill.description} \r\n          />      \r\n        </Grid>\r\n      ))}\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { FunctionComponent }  from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport {  ResumeDataInterface } from '../../utils/types';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\n// css imports\r\nimport './SkillsCapabilities.css'\r\n\r\nconst SkillsCapabilities:FunctionComponent<{\r\n  skillCapabilities:ResumeDataInterface[\"skill_capabilities\"];\r\n}> = ({ skillCapabilities }) => {\r\n  return (\r\n    <Grid \r\n      container\r\n      justifyContent='space-between' \r\n      className=\"section graybg pb_45 p_50\"\r\n    >\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent=\"space-between\" spacing={3}>\r\n          {skillCapabilities.map((skill) => (\r\n            <Grid key={skill.id} item xs={12} sm={6} md={3} >\r\n              <Paper elevation={0} className='skill'>\r\n                <Typography variant='h6' className=\"skills_title\">\r\n                  {skill.title}\r\n                </Typography>\r\n                {skill.category.map((element) => (\r\n                  <Typography key={element} variant='body2' className='skill_description'>\r\n                    <TimelineDot variant='outlined' className='timeline_dot'/>{element}\r\n                  </Typography>\r\n                ))}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SkillsCapabilities\r\n","import React from 'react';\r\n\r\n// Typescript and data imports\r\nimport { socials } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid, Typography, TextField } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Grid container className=\"section pb_45 pt_45\">\r\n      <Grid container item xs={12} spacing={3} >\r\n        {/* Contact Form */}\r\n          <Grid item xs={12} lg={8}>\r\n            <Grid container>\r\n              <SiteTitle title='Contact Form' />\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField fullWidth name=\"name\" label=\"Name\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField fullWidth name=\"email\" label=\"E-mail\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField fullWidth name=\"message\" label=\"Your Message\" multiline rows={2} />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomButton text=\"Submit\" icon={getIcon('SendIcon')} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={4}>\r\n            <Grid container>\r\n              <SiteTitle title='Contact Information' />\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Address:</span> Falkirk Scotland\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Phone:</span> 0739-732-5523\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Email:</span> ashurkanwal@yahoo.com\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                  {socials.map((social) => (\r\n                    <Grid className=\"contactSocail-icons\">\r\n                      <a\r\n                        key={social.icon}\r\n                        href={social.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {getIcon(social.icon)}\r\n                      </a>\r\n                    </Grid>\r\n                  ))}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>              \r\n            </Grid>\r\n          </Grid>\r\n      </Grid>  \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useState, useEffect} from 'react';\r\n\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { listAboutme } from '../../redux/actions/resumeActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Alert, Spinner } from 'react-bootstrap';\r\n\r\n// Custom components import\r\nimport WorkExpreience from '../../components/WorkExpreience/WorkExpreience';\r\nimport Education from '../../components/Education/Education';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsCapabilities from '../../components/SkillsCapabilities/SkillsCapabilities';\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\nimport Contact from '../../components/Contact/Contact';\r\n\r\n// css imports\r\nimport './Resume.css';\r\n\r\n\r\nconst Resume = () => {\r\n  const dispatch = useDispatch()\r\n  const {error, loading, aboutme} = useTypedSelector((state) => state.resumeList);\r\n  \r\n  // React UseStates\r\n  const [aboutMeText, setAboutMeText] = useState<string>(\"\");\r\n  const [education, setEducation] = useState<ResumeDataInterface[\"education_details\"] | any>([]);\r\n  const [work, setWork] = useState<ResumeDataInterface[\"work_expereinces\"] | any>([]);\r\n  const [skills, setSkills] = useState<ResumeDataInterface[\"skills\"] | any>([]);\r\n  const [skillCapabilities, setSkillCapabilities] = useState<ResumeDataInterface[\"skill_capabilities\"] | any>([]);\r\n\r\n // React UseEffects\r\n  useEffect(() => {\r\n    dispatch(listAboutme())\r\n    document.title = \"Ash's Resume\"\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    console.log(aboutme)\r\n    aboutme.map((me) => (\r\n      // eslint-disable-next-line no-sequences\r\n      setAboutMeText(me.about_me),\r\n      setEducation(me.education_details),\r\n      setWork(me.work_expereinces),\r\n      setSkills(me.skills),\r\n      setSkillCapabilities(me.skill_capabilities)\r\n    ))\r\n  }, [aboutme]);\r\n \r\n  return (\r\n    <div>\r\n      {\r\n        loading ? \r\n        (<Grid container className=\"section pb_45 pt_45\">\r\n          <Spinner animation=\"border\" variant=\"danger\" />\r\n        </Grid>)\r\n        : error ?\r\n        (\r\n        <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>)\r\n        :(<div>       \r\n          {/* About Me */}\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n            <SiteTitle title='About Me' />\r\n\r\n            <Grid item xs={12}>        \r\n              <Typography variant='body2' className=\"aboutme_text\">\r\n                {aboutMeText}\r\n              </Typography>      \r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Education and Experience */}\r\n          <Grid container className=\"section pb_45\">\r\n            <SiteTitle title='Resume' />\r\n            <Grid item xs={12}>\r\n              <Grid container className='resume_timeline'>\r\n                {/* Education  */}\r\n                <Grid item sm={12} md={6}>    \r\n                  { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}        \r\n                  <Education education_details={education}/>\r\n                </Grid>\r\n                {/* Experience */}\r\n                <Grid item sm={12} md={6}>\r\n                  { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n                  <WorkExpreience work_expereinces={work} /> \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Services */}\r\n          <Grid container className=\"section pb_45\">        \r\n            <SiteTitle title='My Skills' />\r\n            <Grid item xs={12}>\r\n            { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n              <Skills skills={skills}/>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Skills */}\r\n          \r\n            <SkillsCapabilities skillCapabilities={skillCapabilities} />      \r\n            <Contact />           \r\n          </div>\r\n        )\r\n      } \r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Resume","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ActionType } from '../constants/userConstants';\r\nimport { Action } from '../interfaces/UserInterfaces';\r\n\r\n//import { ProjectInterface } from '../../utils/resumeData';\r\n\r\nexport const login = (email:string, password:string) => async (dispatch:  Dispatch<Action>) => {\r\n\r\n   try {\r\n      dispatch({ type: ActionType.USER_LOGIN_REQUEST })\r\n      const config = {\r\n        headers:{\r\n          'Content-type':'application/json'\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users/login/',\r\n        {'username':email, 'password': password},\r\n        config,\r\n        );\r\n      dispatch({\r\n        type: ActionType.USER_LOGIN_SUCCESS,\r\n        payload: data\r\n      })\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n   } catch (error) {\r\n      dispatch({\r\n        type: ActionType.USER_LOGIN_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n      })\r\n   }\r\n }\r\n\r\n export const logout = () => (dispatch:Dispatch<Action>) => {\r\n   localStorage.removeItem('userInfo')\r\n   dispatch({ type: ActionType.USER_LOGOUT})\r\n   console.log('worked')\r\n }\r\n","export enum BlogDetailsActionType {\r\n  BLOG_DETAIL_REQUEST = 'BLOG_DETAIL_REQUEST',\r\n  BLOG_DETAIL_SUCCESS = 'BLOG_DETAIL_SUCCESS',\r\n  BLOG_DETAIL_ERROR = 'BLOG_DETAIL_ERROR',\r\n }","import React, { useState } from 'react';\r\n\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login, logout } from '../../redux/actions/userActions';\r\n\r\n\r\n// Typescript and data imports\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid,  TextField } from '@material-ui/core';\r\n\r\n\r\n\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\n// Material UI and bootstrap Components import\r\n\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\n\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  // const userLogin = useSelector(state => state.userLogin)\r\n  const dispatch = useDispatch();\r\n\r\n  const {error, loading, userInfo } =  useTypedSelector(\r\n    (state) => state.userLogin\r\n  );\r\n\r\n  const objectLength = Object.keys(userInfo).length\r\n\r\n\r\n  console.log(objectLength)\r\n  console.log(typeof userInfo)\r\n\r\n \r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n    \r\n  }\r\n\r\n  const logoutHandler = () => {\r\n        dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid className=\"section pb_45 pt_45\">\r\n        {/* Title */}\r\n        <Grid item className=\"section_title mb_20\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Login Page</h6>\r\n          {error && <p>{error}</p>}\r\n          {loading && <h3>Loading...</h3>}\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        {Object.keys(userInfo).length ? (\r\n          <div>\r\n            <p>User Name: {userInfo?.userInfo?.name}</p>\r\n            <p>User Email: {userInfo?.userInfo?.email}</p>\r\n            <p>Admin Status: {userInfo?.userInfo?.isAdmin && (<span>True</span>)}</p>\r\n            <Button variant=\"secondary\" onClick={logoutHandler}>Logout</Button>\r\n          </div>\r\n        ): (\r\n          <Grid item xs={12}>\r\n          {/* ###################### FORM ######################*/}\r\n          <Grid container spacing={3}>\r\n            <form onSubmit={submitHandler} style={{width:'100%'}}>\r\n              <Grid item xs={12} sm={6}>              \r\n                <TextField \r\n                  fullWidth \r\n                  name=\"email\"\r\n                  value={email} \r\n                  label=\"E-mail\"\r\n                  type='email'\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField \r\n                  fullWidth \r\n                  name=\"password\" \r\n                  label=\"Password\"\r\n                  value={password} \r\n                  type='password'\r\n                  onChange={(e) => setPassword(e.target.value)} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CustomButton text=\"Login\" icon={getIcon('SendIcon')} />\r\n                <Button variant=\"secondary\" onClick={logoutHandler}>Logout</Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n        ) }\r\n       \r\n\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default Login\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { BlogDetailsActionType } from '../constants/blogDetailConstants';\r\nimport { BlogDetailAction } from '../interfaces/BlogDetailInterface';\r\n\r\nexport const blogDetail = (id:Number) => async (dispatch: Dispatch<BlogDetailAction>) => {\r\n   \r\n  try{\r\n    dispatch({type: BlogDetailsActionType.BLOG_DETAIL_REQUEST});\r\n    const { data } = await axios.get(`/api/blog/${id}`);\r\n\r\n      dispatch({\r\n        type: BlogDetailsActionType.BLOG_DETAIL_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error){\r\n      dispatch({\r\n        type: BlogDetailsActionType.BLOG_DETAIL_ERROR,\r\n        payload: error.message && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n      })\r\n    }\r\n  }\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\n// import { ResumeDataInterface } from '../../utils/types';\r\n// import { education } from '../../utils/types';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n// import { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './BlogDescription.css'\r\n\r\n\r\nconst BlogDescription:FunctionComponent<{\r\n  article_overview:string;\r\n}> = ({article_overview}) => {\r\n\r\n  return (\r\n    <CustomTimeline \r\n      title='Blog Overview'\r\n      icon={getIcon('DescriptionIcon')}\r\n      >\r\n        <TimelineItem>\r\n          <CustomTimelineSeparator />\r\n          <TimelineContent className='timeline_content'>\r\n            <Typography className=\"timeline_title\">\r\n              <span>{article_overview}</span>                       \r\n            </Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n    </CustomTimeline>\r\n  )\r\n}\r\n\r\nexport default BlogDescription\r\n","import React, { FunctionComponent } from 'react';\r\n// Redux imports\r\n\r\n// Typescript imports\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './BlogRequirements.css';\r\n\r\n\r\nconst BlogRequirements:FunctionComponent<{\r\n  requirements:[];\r\n}> = ({ requirements }) => {\r\n  return (       \r\n      <CustomTimeline \r\n        title='Requirements'\r\n        icon={getIcon('VscChecklist')}\r\n        >\r\n        {requirements?.map((requirement:any) => (\r\n          <TimelineItem key={requirement}>\r\n            <CustomTimelineSeparator />\r\n            <TimelineContent className='timeline_content'>\r\n              <Typography className=\"timeline_title\">{requirement}</Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </CustomTimeline>\r\n    \r\n  )\r\n}\r\n\r\nexport default BlogRequirements\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\n\r\n// Typescript and data imports\r\n// import { socials } from '../../utils/types';\r\n// Icon helper function imported\r\n// import  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid, Typography, Paper, Icon } from '@material-ui/core';\r\nimport { Blog } from '../../pages/Blog/data'\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\nimport './BlogSteps.css';\r\nimport SiteTitle from '../SiteTitle/SiteTitle';\r\nimport { Image } from 'react-bootstrap';\r\nimport getIcon from '../../helperFunctions/getIcon';\r\n\r\n\r\nconst BlogSteps: FunctionComponent<{\r\n  // Declaring function props data interface\r\n  blog_sections: Blog[\"blog_sections\"] | any;\r\n}> = ({ blog_sections }) => {\r\n  console.log(blog_sections)\r\n  return (\r\n    <div>\r\n      {blog_sections?.map((section: any) => (\r\n        <Grid key={section.id} container className=\"section pb_45 pt_45\" style={{ margin: 'auto' }}>\r\n          <SiteTitle title={section.title} />\r\n          <Grid container item xs={12} spacing={3} >\r\n            {section.blog_reading_links.length ? (\r\n              <Grid item xs={12} md={12} style={{ margin: 'auto' }}>\r\n                <Grid container>\r\n                  <Typography variant='body2'>\r\n                    {section.paragraph}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            ) : (\r\n              <Grid item xs={12} md={12} style={{ margin: 'auto' }}>\r\n                <Grid container>\r\n                  <Typography variant='body2'>\r\n                    {section.paragraph}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {\r\n              section.blog_reading_links.length ? (\r\n\r\n                <Grid item xs={12} md={6} >\r\n                  <Grid container>\r\n                    <CustomTimeline\r\n                      title='Readings'\r\n                      icon={getIcon('FaBookReader')}\r\n                    >\r\n                      {\r\n                        section.blog_reading_links.map((link: any) => (\r\n                          <TimelineItem key={link.id}>\r\n                            <CustomTimelineSeparator />\r\n                            <TimelineContent className='timeline_content'>\r\n                              <a href={link.link_url} target=\"_blank\" rel=\"noreferrer\">\r\n                                <Typography className=\"timeline_title\">\r\n                                  {link.link_title}\r\n                                </Typography>\r\n                              </a>\r\n                            </TimelineContent>\r\n                          </TimelineItem>\r\n                        ))\r\n                      }\r\n                    </CustomTimeline>\r\n                  </Grid>\r\n                </Grid>\r\n              ) :\r\n                (\r\n                  <div className=\"noDisplay\"></div>\r\n                )}\r\n\r\n            {\r\n              section.blog_section_terminal_commands.length ? (\r\n\r\n                <Grid item xs={12} md={6} >\r\n                  <Grid container>\r\n                    <CustomTimeline\r\n                      title='Terminal Commands'\r\n                      icon={getIcon('BsFillTerminalFill')}\r\n                    >\r\n                      {\r\n                        section.blog_section_terminal_commands.map((command: any) => (\r\n                          <TimelineItem key={command.id}>\r\n                            <CustomTimelineSeparator />\r\n                            <TimelineContent className='timeline_content'>\r\n                                <Typography className=\"timeline_title\">\r\n                                  <code><pre>{command.command}</pre></code>\r\n                                </Typography>\r\n                             \r\n                            </TimelineContent>\r\n                          </TimelineItem>\r\n                        ))\r\n                      }\r\n                    </CustomTimeline>\r\n                  </Grid>\r\n                </Grid>\r\n              ) :\r\n                (\r\n                  <div className=\"noDisplay\"></div>\r\n                )}\r\n\r\n            <Grid item xs={12}>\r\n              <hr></hr>\r\n              <Typography variant='h6'>{getIcon('MdAspectRatio')} Screen Shots</Typography>\r\n              <hr></hr>\r\n              <Grid container>\r\n                <div>\r\n                  <Image src={section.image_path} fluid />\r\n                </div>\r\n\r\n                 \r\n               \r\n                {\r\n                  section.blog_section_images.map((image: any) => (\r\n                    <div>\r\n                 <hr></hr>\r\n                      <Image src={image.image_path} fluid />\r\n                      \r\n                    </div>\r\n                  ))\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n            {\r\n              section.blog_section_code_snippets.length ? (\r\n                <Grid item xs={12}>\r\n                  <hr></hr>\r\n                  <Typography variant='h6'>{getIcon('BiCodeBlock')} Code Blocks</Typography>\r\n                  <hr></hr>\r\n                  <Grid container>\r\n                    {\r\n                      section.blog_section_code_snippets.map((snippet: any) => (\r\n                        <div className=\"m-1\">\r\n                          <h6>{snippet.code_title}</h6>\r\n                          <Paper elevation={3} className=\"code-paper-padding\">\r\n                            <code><pre>{snippet.code_snippet}</pre></code>\r\n                          </Paper>\r\n                        </div>\r\n                      ))\r\n                    }\r\n                  </Grid>\r\n                </Grid>\r\n              ):\r\n                (<div className=\"noDisplay\"></div>)\r\n            }\r\n            \r\n            \r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogSteps\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { blogDetail as blogDetailAction } from '../../redux/actions/blogDetailActions';\r\n\r\n// Typescript imports\r\nimport { Blog } from '../Blog/data';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\nimport { Alert, Image, Spinner } from 'react-bootstrap';\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\n// Custom components import\r\nimport BlogDescription from '../../components/BlogDescription/BlogDescription';\r\nimport BlogRequirements from '../../components/BlogRequirements/BlogRequirements';\r\nimport BlogSteps from '../../components/BlogSteps/BlogSteps';\r\n\r\n// css imports\r\nimport './BlogDetail.css'\r\n\r\nconst BlogDetail = ({ match }: any) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const {loading, error, blogDetailData} = useTypedSelector((state) => state.blogDetail);\r\n\r\n  // USE STATE VARIABLES\r\n  const [blogs, setBlogs] = useState<Blog | any>([]);\r\n  const [requirements, setRequirements] = useState<Blog[\"requirements\"] | any>([]);\r\n  const [blogSections, setBlogSections] = useState<Blog[\"blog_sections\"] | any>([]);\r\n \r\n\r\n  \r\n  // useEddect to dispatch URL ID to get that object from database\r\n  // All redux functionality begins here\r\n  useEffect(() => {\r\n    dispatch(blogDetailAction(match.params.id))\r\n  }, [dispatch, match.params.id])\r\n\r\n  // useEffect for waiting and then loading \r\n  // blogDetailData into blogs use state variable\r\n  useEffect(() => {\r\n    setBlogs(blogDetailData)\r\n    document.title = \"Ash's Blogs-Details\"\r\n  }, [blogDetailData])\r\n\r\n  // useEffect for waiting and then loading \r\n  // blog-sections and requiremnts into their use state variables\r\n  useEffect(() => {\r\n    setRequirements(blogs.requirements)\r\n    setBlogSections(blogs.blog_sections)\r\n    \r\n  }, [blogs])\r\n\r\n  \r\n  return (\r\n    <div>\r\n      {\r\n        loading ? \r\n        (\r\n        <Grid container className=\"section pb_45 pt_45\">\r\n          <Spinner animation=\"border\" variant=\"danger\" />\r\n        </Grid>\r\n        )\r\n        : error ? (\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>\r\n        ): (          \r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            <SiteTitle title={blogs.article_title} />\r\n            <Grid item xs={12}> \r\n              <div>\r\n                <hr></hr>\r\n                <Image src={blogs.banner_image_path} fluid />  \r\n                <hr></hr>  \r\n              </div>\r\n            </Grid>\r\n            {/* */}\r\n            <Grid container className=\"section pb_45\">\r\n              <Grid item xs={12}>\r\n                <Grid container className='resume_timeline'>\r\n                  {/*   */}\r\n                  <Grid item sm={12} md={6}>\r\n                    { <BlogDescription article_overview={blogs.article_overview} />}\r\n                  </Grid>\r\n                  {/* */}\r\n                  <Grid item sm={12} md={6}>\r\n                    { <BlogRequirements requirements={requirements} /> }\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                 { <BlogSteps blog_sections={blogSections} /> }\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )\r\n      }\r\n     \r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogDetail;","import { Container, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport Profile from './components/Profile/Profile';\nimport Blog from './pages/Blog/Blog';\nimport GitPage from './pages/GitPage/GitPage';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport Resume from './pages/Resume/Resume';\nimport { Login } from './pages/Login/Login';\nimport BlogDetail from './pages/BlogDetail/BlogDetail';\n\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className=\"main-content container_shadow\">\n              <Switch>\n                <Route path=\"/portfolio\">\n                  <Portfolio />\n                </Route>\n                \n                <Route path=\"/blog\" component={Blog} />\n                <Route path=\"/blog-detail/:id?\" component={BlogDetail} />\n                \n                <Route path=\"/GitPage\">\n                  <GitPage />\n                </Route>\n                <Route path=\"/Login\">\n                  <Login />\n                </Route>\n                <Route path=\"/\">\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>            \n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from '../constants/projectConstants';\r\nimport { Action } from '../interfaces/interfaces';\r\n\r\nimport { ProjectInterface } from '../../utils/types'\r\n\r\n interface ProjectReducerInterface {\r\n   loading: boolean;\r\n   error: string | null;\r\n   projects: ProjectInterface[];\r\n };\r\n\r\n const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  projects: [],\r\n};\r\n\r\nexport const projectListReducer = (\r\n  state:ProjectReducerInterface = initialState, \r\n  action: Action):ProjectReducerInterface  => {\r\n  switch (action.type) {\r\n    case ActionType.PROJECT_LIST_REQUEST:\r\n      return { loading: true, error: null, projects: [] };\r\n\r\n    case ActionType.PROJECT_LIST_SUCCESS:\r\n      return { loading: false, error: null, projects: action.payload };\r\n\r\n    case ActionType.PROJECT_LIST_FAIL:\r\n      return { loading: false, error: action.payload, projects: [] };\r\n    \r\n    default:\r\n      return state\r\n}\r\n}","import { ActionType } from  '../constants/resumeConstants';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ResumeDataInterface } from '../../utils/types'\r\n\r\ninterface ResumeReducerInterface {\r\n  loading: boolean;\r\n  error: string | null;\r\n  aboutme: ResumeDataInterface[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  aboutme: [],\r\n};\r\n\r\nexport const resumeListReducer = (\r\n  state:ResumeReducerInterface = initialState, \r\n  action:Action):ResumeReducerInterface => {\r\n  switch(action.type){\r\n    case ActionType.RESUME_LIST_REQUEST:\r\n      return {loading:true, error: null, aboutme: [] }\r\n    case ActionType.RESUME_LIST_SUCCESS:\r\n      return {loading:false, error: null, aboutme: action.payload }\r\n    case ActionType.RESUME_LIST_FAIL:\r\n      return {loading:false, error: action.payload, aboutme: []}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionType } from '../constants/userConstants';\r\nimport { Action } from '../interfaces/UserInterfaces';\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n  JSON.parse(localStorage.getItem('userInfo') || '{}') : {};\r\n\r\n interface UserReducerInterface {\r\n   loading: boolean;\r\n   error: string | null;\r\n   userInfo: any;\r\n };\r\n\r\n const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  userInfo: {userInfo: userInfoFromStorage},\r\n};\r\n\r\nexport const userLoginReducer = (\r\n  state:UserReducerInterface = initialState, \r\n  action: Action):UserReducerInterface => {\r\n  switch (action.type) {\r\n    case ActionType.USER_LOGIN_REQUEST:\r\n      return { loading: true, error: null, userInfo: [] };\r\n\r\n    case ActionType.USER_LOGIN_SUCCESS:\r\n      return { loading: false, error: null, userInfo: action.payload };\r\n\r\n    case ActionType.USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload, userInfo: [] };\r\n    \r\n    case ActionType.USER_LOGOUT:\r\n      return { loading: false, error: null, userInfo: [] };\r\n    \r\n    default:\r\n      return state\r\n}\r\n}","import { BlogAction } from \"../interfaces/BlogInterfaces\";\r\nimport { BlogActionType } from \"../constants/blogConstants\";\r\n\r\nimport { Blog } from '../../pages/Blog/data'\r\n\r\ninterface BlogReducerInterface{\r\n  loading: boolean;\r\n  error: string | null;\r\n  blogData: Blog[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  blogData: [],\r\n};\r\n\r\n\r\nexport const blogListReducer = (\r\n  state: BlogReducerInterface = initialState,\r\n  action: BlogAction):BlogReducerInterface => {\r\n  switch (action.type){\r\n    case BlogActionType.BLOG_LIST_REQUEST:\r\n      return { loading: true, error: null, blogData: [] };\r\n    case BlogActionType.BLOG_LIST_SUCCESS:\r\n      return { loading: false, error: null, blogData: action.payload };\r\n    case BlogActionType.BLOG_LIST_ERROR:\r\n      return { loading: false, error: action.payload, blogData: [] };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n\r\n","import { BlogDetailsActionType } from \"../constants/blogDetailConstants\";\r\nimport { BlogDetailAction } from \"../interfaces/BlogDetailInterface\";\r\n\r\nimport { Blog } from '../../pages/Blog/data'\r\n\r\ninterface BlogDetailReducerInterface{\r\n  loading: boolean;\r\n  error: string | null;\r\n  blogDetailData: Blog[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  blogDetailData:[],\r\n};\r\n\r\n\r\nexport const blogDetailReducer = (\r\n    state: BlogDetailReducerInterface = initialState,\r\n    action: BlogDetailAction):BlogDetailReducerInterface => {\r\n  switch (action.type){\r\n    case BlogDetailsActionType.BLOG_DETAIL_REQUEST:\r\n      return { loading: true, error: null, blogDetailData: [] };\r\n    case BlogDetailsActionType.BLOG_DETAIL_SUCCESS:\r\n      return { loading: false, error: null, blogDetailData: action.payload };\r\n    case BlogDetailsActionType.BLOG_DETAIL_ERROR:\r\n      return { loading: false, error: action.payload, blogDetailData: [] };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { projectListReducer } from './redux/reducers/projectReducers';\r\nimport { resumeListReducer } from './redux/reducers/resumeReducers';\r\nimport { userLoginReducer } from './redux/reducers/userReducers';\r\nimport { blogListReducer } from './redux/reducers/BlogReducers';\r\nimport { blogDetailReducer } from './redux/reducers/BlogDetailsReducers';\r\n\r\nconst reducers = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  projectList: projectListReducer,\r\n  resumeList: resumeListReducer,\r\n  blogList: blogListReducer,\r\n  blogDetail: blogDetailReducer,\r\n});\r\n\r\n// const userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n//   JSON.parse(localStorage.getItem('userInfo') || '{}') : {};\r\n\r\n\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\n// const initialState = {\r\n//   loading: false,\r\n//   error: null,\r\n//   userLogin: { userInfo: userInfoFromStorage}\r\n//  };\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducers, \r\n  {},\r\n  composeWithDevTools(applyMiddleware(...middleware )));\r\n\r\n  \r\nexport default store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
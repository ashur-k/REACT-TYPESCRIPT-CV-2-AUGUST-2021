{"version":3,"sources":["redux/constants/userConstants.ts","components/Footer/Footer.tsx","utils/types.ts","helperFunctions/getIcon.tsx","components/Button/Button.tsx","hooks/useTypedSelector.ts","redux/actions/userActions.ts","redux/constants/blogConstants.ts","components/Header/Header.tsx","components/Timeline/Timeline.tsx","assets/images/ash.jpg","components/Profile/Profile.tsx","components/BlogNavbarItem/BlogNavbarItems.tsx","components/BlogNavbar/BlogNavbar.tsx","components/BlogCards/BlogCards.tsx","redux/actions/blogActions.ts","pages/Blog/Blog.tsx","components/SiteTitle/SiteTitle.tsx","components/GitHubApi/GitApi.tsx","pages/GitPage/GitPage.tsx","redux/constants/projectConstants.ts","redux/actions/projectActions.ts","redux/constants/resumeConstants.ts","components/ProjectNavbarItem/ProjectNavbarItem.tsx","components/ProjectNabar/ProjectNavbar.tsx","components/ProjectDialog/ProjectDialog.tsx","pages/Portfolio/Portfolio.tsx","redux/actions/resumeActions.ts","redux/constants/blogDetailConstants.ts","components/WorkExpreience/WorkExpreience.tsx","components/Education/Education.tsx","components/Card/CardComponent.tsx","components/Skills/Skills.tsx","components/SkillsCapabilities/SkillsCapabilities.tsx","components/Contact/Contact.tsx","pages/Resume/Resume.tsx","pages/Login/Login.tsx","redux/actions/blogDetailActions.ts","pages/Blog/data.ts","components/BlogDescription/BlogDescription.tsx","components/BlogRequirements/BlogRequirements.tsx","components/BlogSteps/BlogSteps.tsx","pages/BlogDetail/BlogDetail.tsx","App.tsx","reportWebVitals.ts","redux/reducers/projectReducers.ts","redux/reducers/resumeReducers.ts","redux/reducers/userReducers.ts","redux/reducers/BlogReducers.ts","redux/reducers/BlogDetailsReducers.ts","store.ts","index.tsx"],"names":["ActionType","Footer","className","Typography","Copyright","href","profile","socials","title","link","text","icon","getIcon","CustomButton","Button","type","endIcon","useTypedSelector","useSelector","BlogActionType","logout","dispatch","localStorage","removeItem","USER_LOGOUT","console","log","withRouter","props","pathName","location","pathname","userInfo","useDispatch","state","userLogin","useState","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","map","social","target","rel","Toggle","Collapse","download","Telegram","CustomTimelineSeparator","TimelineSeparator","TimelineDot","variant","TimelineConnector","CustomTimeline","children","Timeline","TimelineItem","TimelineContent","CustomTimelineItem","Profile","src","profileImage","alt","BlogtNavbarItems","value","handlerFilterCategory","active","onClick","BlogNavbar","BlogCard","blogId","blogTitle","blogOverview","blogImagePath","CardGroup","Card","Img","Body","Title","Text","Blog","blogList","blogData","error","loading","useEffect","a","BLOG_LIST_REQUEST","axios","get","data","BLOG_LIST_SUCCESS","payload","BLOG_LIST_ERROR","message","blogs","setBlogs","setActive","Grid","item","xs","category","newArray","filter","blog","includes","container","spacing","Box","m","id","article_title","article_overview","banner_image_path","SiteTitle","useStyles","makeStyles","root","maxWidth","media","height","avatar","backgroundColor","red","GitApi","name","setName","userName","setUserName","followers","setFollowers","following","setFollowing","repos","setRepos","setAvatar","term","setTerm","reposInfo","setReposInfo","result","setData","fetchGitUsers","fetchGitRepos","login","public_repos","avatar_url","classes","style","width","alignItems","justifyContent","direction","justify","CardHeader","Avatar","subheader","CardActionArea","Image","rounded","thumbnail","CardContent","CardActions","gutterBottom","component","TextField","label","fullWidth","onChange","e","repo","sm","md","html_url","Paper","elevation","GitPage","ProjectNavbarItems","ProjectsNavbar","ProjectDialog","projectDialog","open","onClose","Dialog","Icon","DialogTitle","image","fluid","DialogContent","description","key_techs","DialogActions","github_url","deployed_url","deployed_url_icon","Portfolio","projectList","projects","projectsData","setProjectsData","setProjectDialog","PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","response","detail","React","setOpen","filteredProject","project","Grow","in","timeout","BlogDetailsActionType","WorkExpreience","work_expereinces","experience","date","office_job","work_url","Education","education_details","edu","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","institute_link","institute_name","CardComponent","margin","paddingBottom","Skills","skills","skill","SkillsCapabilities","skillCapabilities","element","Contact","lg","multiline","rows","Resume","resumeList","aboutme","aboutMeText","setAboutMeText","education","setEducation","work","setWork","setSkills","setSkillCapabilities","RESUME_LIST_REQUEST","RESUME_LIST_SUCCESS","RESUME_LIST_FAIL","me","about_me","skill_capabilities","Spinner","animation","Alert","Login","email","setEmail","password","setPassword","onSubmit","preventDefault","USER_LOGIN_REQUEST","config","headers","post","USER_LOGIN_SUCCESS","setItem","JSON","stringify","USER_LOGIN_FAIL","requirements","BlogDescription","BlogRequirements","requirement","BlogSteps","blog_sections","section","paragraph","image_path","BlogDetail","match","blogDetail","params","BLOG_DETAIL_REQUEST","BLOG_DETAIL_SUCCESS","BLOG_DETAIL_ERROR","blog_detail","toString","App","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducers","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fadd9468.chunk.js","sourcesContent":["export enum ActionType {\r\n  USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST',\r\n  USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS',\r\n  USER_LOGIN_FAIL = 'USER_LOGIN_FAIL',\r\n  USER_LOGOUT = 'USER_LOGOUT',\r\n}","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport { Copyright } from '@material-ui/icons';\r\n\r\n// css imports\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">Ashur Kanwal</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Coded by {\" \"}\r\n          <Copyright/>\r\n          <a href=\"/\">ashurkanwal@yahoo.com</a>\r\n          <br />\r\n          <a  href='/'>Ashur Kanwal 2021 Resume Site.</a>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export interface profileInfo {\r\n  name: string;\r\n  title: string;\r\n  DOB: string;\r\n  email: string;\r\n  address: string;\r\n  phone: string;\r\n  cv:string;\r\n\r\n  socials: {\r\n    Facebook: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    Twitter: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    LinkedIn: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    GitHub: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const profile: profileInfo = {\r\n  name: 'Ashur Kanwal',\r\n  title: 'Full-Stack-Developer',\r\n  DOB: 'July',\r\n  email: 'ashurkanwal@yahoo.com',\r\n  address: 'Grangemouth Scotland',\r\n  phone: '07397325523',\r\n  cv: '/images/AshurkanwalCV.pdf',\r\n\r\n  socials:{\r\n    Facebook:{\r\n      link: 'facebook.com',\r\n      text: 'myFacebook',\r\n      icon: 'FacebookIcon',\r\n    },\r\n    Twitter:{\r\n      link: 'twitter.com',\r\n      text: 'myTwitter',\r\n      icon: 'TwitterIcon',\r\n    },\r\n    \r\n    LinkedIn:{\r\n      link: 'linkedin.com',\r\n      text: 'myLinkeIn',\r\n      icon: 'LinkedInIcon',\r\n    },\r\n    GitHub:{\r\n      link: 'github.com',\r\n      text: 'myGitHub',\r\n      icon: 'GitHubIcon',\r\n    }\r\n  }\r\n}\r\n\r\nexport interface socialsInterface {\r\n  title: string;\r\n  link: string;\r\n  text:string;\r\n  icon: string;\r\n}\r\n\r\nexport const socials: socialsInterface[] = [\r\n  {\r\n    title: 'Facebook',\r\n    link: 'https://www.facebook.com/',\r\n    text: 'myFacebook',\r\n    icon: 'FacebookIcon',\r\n  },\r\n  {\r\n    title: 'Twitter',\r\n    link: 'https://twitter.com/',\r\n    text: 'myTwitter',\r\n    icon: 'TwitterIcon',\r\n  },\r\n  {\r\n    title: 'LinkedIn',\r\n    link: 'https://www.linkedin.com/in/ashur-kanwal-37979b195/',\r\n    text: 'myLinkedIn',\r\n    icon: 'LinkedInIcon',\r\n  },\r\n  {\r\n    title: 'GitHub',\r\n    link: 'https://github.com/ashur-k',\r\n    text: 'myGitHub',\r\n    icon: 'GitHubIcon',\r\n  },\r\n]\r\n\r\ninterface ExperiencesInterface {\r\n  title: string;\r\n  date: string;\r\n  description: string;\r\n  gitLink:string;\r\n  hostLink: string;\r\n}\r\n\r\nexport const experiences:ExperiencesInterface[] = [\r\n  {\r\n    title: 'Kirk Of the Holy Rood',\r\n    date: 'Jan-2021 - April-2021',\r\n    description: 'Python django application, admin can manage all content including adding removing ministry section pages',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'RR-Clothes',\r\n    date: 'Sept-2020 - Dec-2020',\r\n    description: 'Python django E-commerce shopping site sells product including color size variants.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Car Sales Showroom',\r\n    date: 'May-2020 - August-2020',\r\n    description: 'Python flask appicaition built to manage and book car test drives.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Covid App',\r\n    date: 'Jan-2020 - April-2020',\r\n    description: 'International Rapid Covid API data where user can see covid stats of all countries.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n]\r\n\r\ninterface EducationInterface {\r\n  title: string;\r\n  instituteName:string;\r\n  instituteLink:string;\r\n  date: string;\r\n  description: string; \r\n}\r\n\r\nexport const education:EducationInterface[] = [\r\n  {\r\n    title: 'Full-Stack Web developer',\r\n    instituteName: 'Code Institute',\r\n    instituteLink:'link',\r\n    date: 'Dec-2019 - -Dec-2020',\r\n    description: 'Full-Stack Web developer'\r\n  },\r\n  {\r\n    title: 'Bachelors Degree',\r\n    instituteName: 'PIMSAT',\r\n    instituteLink:'link',\r\n    date: '2017 - 2018',\r\n    description: 'Lorem Ipsum text for now'\r\n  },\r\n  {\r\n    title: 'First Line Manager Diploma',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'https://www.stockton.ac.uk/',\r\n    date: '2017 - 2018',\r\n    description: 'Management is the best I love management'\r\n  },\r\n  {\r\n    title: 'Computer Itq Graphics',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Adobe Suits and adobe suites'\r\n  },\r\n  {\r\n    title: 'Performing Arts In Music',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Performing art singing, dancing, and acting.'\r\n  },\r\n]\r\n\r\ninterface SkillsInterface {\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n}\r\n\r\nexport const skills: SkillsInterface[] = [\r\n  {\r\n    title: 'React Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoReact',\r\n  },\r\n  {\r\n    title: 'Python Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoPython',\r\n  },\r\n  {\r\n    title: 'Database Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'FiDatabase',\r\n  },\r\n]\r\n\r\n\r\nexport interface SkillsCapabilitiesInterface {\r\n  title: string;\r\n  description: string[];\r\n}\r\n\r\nexport const skillsCapabilities: SkillsCapabilitiesInterface[] = [\r\n  {\r\n    title: \"FrontEnd\",\r\n    description: [\r\n      \"ReactJs\",\r\n      \"JavaScript\",\r\n      \"TypeScript\",\r\n      \"Bootstrap\",\r\n      \"Material UI\"\r\n    ]\r\n      ,\r\n  },\r\n  {\r\n    title: \"Backend\",\r\n    description: [\r\n      \"Python\",\r\n      \"Flask\",\r\n      \"Django\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Database\",\r\n    description: [\r\n      \"SQL\",\r\n      \"Postgres-sql\",\r\n      \"Firebase\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Source Control\",\r\n    description: [\r\n      \"GitHub\"\r\n    ],\r\n  },\r\n];\r\n\r\n\r\n\r\nexport type Category = \"react\" | \"nextjs\" | \"typescript\" | \"flask\" | \"django\" | \"mongo\" | \"main-projects\" ;\r\nexport interface ProjectInterface {\r\n  id:number;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  deployed_url: string;\r\n  deployed_url_icon: string;\r\n  github_url: string;\r\n  category: Category[];\r\n  key_techs: string[];\r\n}\r\n\r\nexport interface UserInterface {\r\n  \r\n}\r\n\r\nexport interface ResumeDataInterface {\r\n  id: number;\r\n  about_me: string;\r\n  education_details: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      institute_name:string;\r\n      institute_link:string;\r\n      date: string;\r\n      description: string; \r\n      about_me: number;\r\n    }\r\n  ];\r\n  work_expereinces: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      date: string;\r\n      description: string;\r\n      display_order: number;\r\n      office_job: boolean;\r\n      work_url: string;\r\n      deployed_url:string;\r\n      github_url:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skills: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      description: string; \r\n      icon:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skill_capabilities: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      category: string[]; \r\n      about_me: number;\r\n    }\r\n  ];\r\n} \r\n\r\nexport const resumeData: ResumeDataInterface[] = [\r\n  {\r\n      \"id\": 1,\r\n      \"about_me\": \"Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.d programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.\",\r\n      \"education_details\": [\r\n          {\r\n            \"id\": 1,\r\n            \"title\": \"Full-Stack Web developer\",\r\n            \"institute_name\": \"Code Institute\",\r\n            \"institute_link\": \"https://www.codeinstitute.net/\",\r\n            \"date\": \"Dec-2019 - -Dec-2020\",\r\n            \"description\": \"Full-Stack Web developer\",\r\n            \"about_me\": 1\r\n          },\r\n      ],\r\n      \"work_expereinces\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Kirk Of the Holy Rood\",\r\n            \"date\": \"Jan-2021 - April-2021\",\r\n            \"description\": \"Python Django application, admin can manage all content including adding removing ministry section pages\",\r\n            \"display_order\": 1,\r\n            \"office_job\": false,\r\n            \"work_url\": \"\",\r\n            \"deployed_url\": \"www.github.com\",\r\n            \"github_url\": \"www.github.com\",\r\n            \"about_me\": 1\r\n        }\r\n      ],\r\n      \"skills\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"React Skills\",\r\n            \"description\": \"I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql, and Redux. I have built the site using next.js, Gatsby. I have beginner's understanding of Typescript. My current resume site is built using react typescript and all typescripts types are written by me with my knowledge.\",\r\n            \"icon\": \"IoLogoReact\",\r\n            \"about_me\": 1\r\n        }\r\n    ],\r\n    \"skill_capabilities\": [\r\n      {\r\n          \"id\": 1,\r\n          \"title\": \"Frontend\",\r\n          \"category\": [\r\n              \"ReactJs\",\r\n              \"JavaScript\",\r\n              \"TypeScript\",\r\n              \"Bootstrap\",\r\n              \"Material UI\"\r\n          ],\r\n          \"about_me\": 1\r\n      }\r\n  ],\r\n      \r\n      \r\n  },\r\n]\r\n\r\n\r\n","// Material UI Icons import\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\n\r\n// React Icons import\r\nimport { IoLogoReact, IoLogoPython, IoLogoVercel, IoLogoFirebase } from \"react-icons/io5\";\r\nimport { FiDatabase } from \"react-icons/fi\";\r\nimport { FaGit } from \"react-icons/fa\";\r\nimport { GrHeroku } from \"react-icons/gr\";\r\nimport { SiNetlify } from \"react-icons/si\";\r\nimport { VscChecklist } from \"react-icons/vsc\";\r\n\r\n\r\nconst getIcon = (icon:string | undefined): JSX.Element => {\r\n  switch(icon) {\r\n    case 'WorkIcon':\r\n      return (<WorkIcon className=\"SVG\" />);\r\n    case 'SchoolRoundedIcon':\r\n      return (<SchoolRoundedIcon className=\"SVG\" />);\r\n    case 'FacebookIcon':\r\n      return (<FacebookIcon className=\"SVG\" />);\r\n    case 'TwitterIcon':\r\n      return (<TwitterIcon className=\"SVG\" />);\r\n    case 'LinkedInIcon':\r\n      return (<LinkedInIcon className=\"SVG\" />);\r\n    case 'GitHubIcon':\r\n      return (<GitHubIcon />);\r\n    case 'IoLogoPython':\r\n      return (<IoLogoPython />);\r\n    case 'CloseIcon':\r\n      return (<CloseIcon />);\r\n    case 'IoLogoReact':\r\n      return (<IoLogoReact />);\r\n    case 'FiDatabase':\r\n      return (<FiDatabase />);\r\n    case 'FaGit':\r\n      return (<FaGit />);\r\n    case 'GrHeroku':\r\n      return (<GrHeroku />);\r\n    case 'IoLogoVercel':\r\n      return (<IoLogoVercel />);\r\n    case 'IoLogoFirebase':\r\n      return (<IoLogoFirebase />);\r\n    case 'SiNetlify':\r\n      return (<SiNetlify />);\r\n    case 'SendIcon':\r\n      return (<SendIcon />);\r\n    case 'SearchIcon':\r\n      return (<SearchIcon />);\r\n    case 'VscChecklist':\r\n      return (<VscChecklist className=\"SVG\"/>);\r\n    case 'DescriptionIcon':\r\n      return (<DescriptionIcon className=\"SVG\"/>);\r\n    default:\r\n      return (<small>No Icon Found</small>);\r\n  }\r\n};\r\n\r\nexport default getIcon;","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Button } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './Button.css';\r\n\r\ninterface buttonInterface {\r\n  text: string;\r\n  icon: JSX.Element | null;\r\n}\r\n\r\nconst CustomButton = ({text, icon}: buttonInterface) => {\r\n  return (\r\n    <Button \r\n      className='custom_btn'\r\n      type=\"submit\"\r\n      endIcon={\r\n        icon ? (\r\n          <div className=\"btn_icon_container\">{icon}</div>\r\n          ): null }>\r\n        <span className='btn_text'>{text}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CustomButton","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ActionType } from '../constants/userConstants';\r\nimport { Action } from '../interfaces/UserInterfaces';\r\n\r\n//import { ProjectInterface } from '../../utils/resumeData';\r\n\r\nexport const login = (email:string, password:string) => async (dispatch:  Dispatch<Action>) => {\r\n\r\n   try {\r\n      dispatch({ type: ActionType.USER_LOGIN_REQUEST })\r\n      const config = {\r\n        headers:{\r\n          'Content-type':'application/json'\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users/login/',\r\n        {'username':email, 'password': password},\r\n        config,\r\n        );\r\n      dispatch({\r\n        type: ActionType.USER_LOGIN_SUCCESS,\r\n        payload: data\r\n      })\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n   } catch (error) {\r\n      dispatch({\r\n        type: ActionType.USER_LOGIN_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n      })\r\n   }\r\n }\r\n\r\n export const logout = () => (dispatch:Dispatch<Action>) => {\r\n   localStorage.removeItem('userInfo')\r\n   dispatch({ type: ActionType.USER_LOGOUT})\r\n   console.log('worked')\r\n }\r\n","export enum BlogActionType {\r\n  BLOG_LIST_REQUEST = 'blog_list_request',\r\n  BLOG_LIST_SUCCESS = 'blog_list_success',\r\n  BLOG_LIST_ERROR = 'blog_list_error',\r\n }","import React, { useState, useEffect } from 'react';\r\n\r\n// Typescript imports\r\nimport { profile, socials } from '../../utils/types';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\n\r\n// Get icon helper function\r\nimport getIcon from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { HomeRounded, Telegram } from '@material-ui/icons';\r\nimport CustomButton from '../Button/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Nav, Navbar } from 'react-bootstrap';\r\n\r\n// css imports\r\nimport './Header.css';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\nimport { logout } from '../../redux/actions/userActions'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Header = (props: RouteComponentProps) => {\r\n\r\n  const pathName = props?.location?.pathname;\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin =  useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  console.log(\"USER-INFORMATION\", userInfo)\r\n  const [login, setLogin] = useState<boolean>(false);\r\n\r\n\r\n  const logoutHandler = () => {\r\n    console.log(\"logging out\")\r\n    dispatch(logout)\r\n  }\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" sticky='top' className='header'>\r\n      <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n        <Navbar.Brand className='header_home'>\r\n          <HomeRounded className=\"SVG\" />\r\n        </Navbar.Brand>\r\n      </Nav.Link>\r\n      {/* Only visible on mobile devices */}\r\n      <div className=\"mobile_social_icons\">\r\n        {\r\n          socials.map((social) => (\r\n            <a\r\n              key={social.icon}\r\n              href={social.link}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >{getIcon(social.icon)}</a>\r\n          ))}\r\n      </div>\r\n\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className=\"navbar_collapse\">\r\n        <Nav className='header_left'>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/'\r\n            className={pathName === \"/\" ? \"header_link_active\" : \"header_link\"}          \r\n          >Resume\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/portfolio'\r\n            className={pathName === \"/portfolio\" ? \"header_link_active\" : \"header_link\"}\r\n          >Portfolio\r\n          </Nav.Link>\r\n\r\n          {/* <Nav.Link\r\n            as={NavLink}\r\n            to='/blog'\r\n            className={pathName === \"/blog\" ? \"header_link_active\" : \"header_link\"}\r\n          >Blog\r\n          </Nav.Link>\r\n          {userInfo ? (\r\n            <Nav.Link \r\n              as={NavLink}\r\n              to='/login'\r\n              className={pathName === \"/login\" ? \"header_link_active\" : \"header_link\"}\r\n            >Logout\r\n          </Nav.Link>\r\n          ):(\r\n            <Nav.Link\r\n              as={NavLink}\r\n              to='/login'\r\n              className={pathName === \"/login\" ? \"header_link_active\" : \"header_link\"}\r\n            >Login\r\n            </Nav.Link>\r\n          )\r\n          } */}\r\n          \r\n\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/GitPage'\r\n            className={pathName === \"/GitPage\" ? \"header_link_active\" : \"header_link\"}\r\n          >Git\r\n          </Nav.Link>\r\n        </Nav>\r\n        {/* Only visible on desktop */}\r\n        <div className='header_right'>\r\n          {\r\n            socials.map((social) => (\r\n              <a\r\n                key={social.icon}\r\n                href={social.link}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"not-show-on-smaller-screen\"\r\n              >{getIcon(social.icon)}</a>\r\n            ))}\r\n            <a href={profile.cv} target=\"_blank\" rel=\"noreferrer\" download>\r\n              <CustomButton text={'Hire me'} icon={<Telegram />} />\r\n            </a>\r\n        </div>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './Timeline.css'\r\n\r\ninterface timeLineProps {\r\n  title: string;\r\n  icon:any;\r\n  children: any;\r\n}\r\n\r\nconst CustomTimeline = ({ title, icon, children }: timeLineProps ) => {\r\n  return (\r\n    <Timeline className='timeline'>\r\n      <TimelineItem className={'timeline_firstItem'}>\r\n        <TimelineSeparator>\r\n          <TimelineDot className={'timeline_dot_header'}>\r\n            {icon}\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography variant='h6' className={'timeline_header'}>\r\n            {title}\r\n          </Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>      \r\n      {children}\r\n    </Timeline>\r\n \r\n  )\r\n};\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n  <TimelineSeparator className={'separator_padding'}>\r\n    <TimelineDot variant={'outlined'} className={'timeline_dot'} />    \r\n    <TimelineConnector />\r\n  </TimelineSeparator>\r\n)\r\n\r\nexport default CustomTimeline\r\n","export default __webpack_public_path__ + \"static/media/ash.b620187d.jpg\";","import React from 'react';\r\n\r\n// Typescript imports\r\nimport { profile, socials } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core'\r\nimport CustomTimeLine, { CustomTimelineSeparator } from '../Timeline/Timeline';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomButton from '../Button/Button'\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport jsPDF from 'jspdf';\r\n// import AshurkanwalCV from '../../../public/images/AshurkanwalCV.pdf';\r\n\r\n\r\n\r\n\r\n// css and Images imports\r\nimport profileImage from '../../assets/images/ash.jpg';\r\nimport './profile.css';\r\nimport DownloadButton from '../DownloadButton/DownloadButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface customTimelinechildren {\r\n  title: string;\r\n  text: string;\r\n  link: string | null;\r\n}\r\n\r\n// Custom timeline copmponent to show socail icons in sidebar section \r\nconst CustomTimelineItem = ({title, text, link}: customTimelinechildren) => (\r\n \r\n  <TimelineItem>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent>\r\n      {link ? (\r\n      <Typography className=\"timelineItem_text\">\r\n        <span>{title}:</span>{\" \"}\r\n        <a href={link} target='_blank' rel='noreferrer'>\r\n          {text}\r\n        </a>        \r\n      </Typography>\r\n      ) : (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}: </span>{text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n)\r\n\r\nconst Profile = () => {\r\n\r\n  const downloadPDF = () => {\r\n    // const doc = new jsPDF('portrait', 'px', 'a4', 'false');\r\n    // doc.addImage(AshurkanwalCV)\r\n    \r\n    console.log('doc')\r\n  }\r\n\r\n  return (\r\n    <div className='profile container_shadow'>\r\n      <div className='profile_name'>\r\n        <Typography className='name'>{profile.name}</Typography>\r\n        <Typography className='title'>{profile.title}</Typography>\r\n      </div>\r\n\r\n      <figure className='profile_image'>\r\n        <img src={profileImage} alt=\"\" />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeLine title={''} icon={<ImageSearchIcon className=\"SVG\"/>}  >\r\n          <CustomTimelineItem title='Mobile' text='0739-732-5523' link=\"\"/>\r\n          <CustomTimelineItem title='Email' text={profile.email} link=\"\"/>\r\n          <CustomTimelineItem title='Address' text='Falkirk Scotland' link=\"\"/>\r\n          {\r\n            socials.map((social) => (\r\n              <CustomTimelineItem \r\n                key={social.title}\r\n                title={social.title} \r\n                text={social.text} \r\n                link={social.link} \r\n              />\r\n            ))\r\n          }\r\n        </CustomTimeLine>\r\n        <div className='button-container'>\r\n        <a href={profile.cv} target=\"_blank\" rel=\"noreferrer\" download>\r\n          <CustomButton \r\n            text={\"Download Cv\"} \r\n            icon={< GetAppIcon />}\r\n            />\r\n        </a>\r\n\r\n\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { FunctionComponent } from \"react\";\r\n\r\n// Typescript imports\r\nimport { Category } from '../../pages/Blog/data';\r\n\r\n// css imports\r\nimport './BlogNavbarItems.css';\r\n\r\n\r\nexport const BlogtNavbarItems:FunctionComponent<{\r\n  value: Category | \"all\"; \r\n  handlerFilterCategory: Function;  \r\n  active: string;\r\n  }> = ({value, handlerFilterCategory, active }) => {\r\n      let className = \"project-navbar-item hover:text-green\";\r\n      if (active === value) {\r\n        className += \" text-green\"\r\n      };\r\n    return (\r\n      <li className={className} onClick={() => handlerFilterCategory(value)}>\r\n        {value}\r\n      </li>\r\n    );\r\n  };","import { FunctionComponent } from \"react\";\r\nimport { BlogtNavbarItems } from \"../BlogNavbarItem/BlogNavbarItems\";\r\n\r\n// Custom components import\r\n// import { ProjectNavbarItems } from '../ProjectNavbarItem/ProjectNavbarItem';\r\n\r\n// css imports\r\nimport './BlogNavbar.css';\r\n\r\nconst BlogNavbar: FunctionComponent<{\r\n    handlerFilterCategory: Function;\r\n    active: string;\r\n  }> = (props) => {\r\n    return (\r\n      <div className=\"Project-navbar-main\">\r\n        <BlogtNavbarItems value=\"all\" {...props} />\r\n        <BlogtNavbarItems value=\"react\" {...props} />\r\n        <BlogtNavbarItems value=\"mongo\" {...props} />\r\n        <BlogtNavbarItems value=\"django\" {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default BlogNavbar;","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Button, Card, CardGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n// css imports\r\nimport './BlogCards.css';\r\n\r\nexport const BlogCard:FunctionComponent<{\r\n  blogId: number;\r\n  blogTitle: string;\r\n  blogOverview: string;\r\n  blogImagePath: string;\r\n}> = ({blogId, blogTitle, blogOverview, blogImagePath}) => {\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n        <Card.Img variant=\"top\" src={blogImagePath} />\r\n        <Card.Body>\r\n          <Card.Title>{blogTitle}</Card.Title>\r\n          <Card.Text>\r\n            {blogOverview}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Link to={`/blog-detail/${blogId}`}>\r\n            <Button variant=\"primary\">Read more ...</Button>\r\n          </Link>          \r\n        </Card.Footer>\r\n      </Card>  \r\n</CardGroup>\r\n  )\r\n}\r\n\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { BlogActionType } from '../constants/blogConstants';\r\nimport { BlogAction } from '../interfaces/BlogInterfaces';\r\n\r\nexport const blogList = () =>{\r\n  return async (dispatch: Dispatch<BlogAction>) => {\r\n    dispatch({\r\n      type: BlogActionType.BLOG_LIST_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await axios.get('/api/blogs/')\r\n      dispatch({\r\n        type: BlogActionType.BLOG_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error){\r\n      dispatch({\r\n        type: BlogActionType.BLOG_LIST_ERROR,\r\n        payload: error.message\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { Box, Grid } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport BlogNavbar from '../../components/BlogNavbar/BlogNavbar';\r\n\r\nimport { Category } from './data';\r\nimport './Blog.css'\r\nimport { BlogCard } from '../../components/BlogCards/BlogCards';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { blogList } from '../../redux/actions/blogActions';\r\nimport { Blog as BlogInterface } from './data'\r\n\r\n// Custom components import\r\nconst Blog = () => {\r\n  const dispatch = useDispatch()\r\n  const {error, loading, blogData} = useTypedSelector((state) => state.blogList);\r\n\r\n   // React UseEffects\r\n   useEffect(() => {\r\n    dispatch(blogList())\r\n  }, [dispatch]);\r\n\r\n\r\n\r\n  const [blogs, setBlogs] = useState<BlogInterface | any>([]);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n\r\n    setBlogs(blogData)\r\n\r\n  }, [blogData]);\r\n \r\n\r\n  // Filtering sytem for Project Navbar\r\n  const handleFilterCategory = (category: Category | 'all') => {\r\n    if (category === \"all\") {\r\n      setBlogs(blogData)\r\n      setActive(category);\r\n      return;\r\n    }\r\n    const newArray = blogData.filter((blog) =>\r\n      blog.category.includes(category)\r\n    );\r\n\r\n    setBlogs(newArray);\r\n    setActive(category);\r\n  }\r\n\r\n  return (\r\n    <Grid className=\"section pb_45 pt_45\">\r\n      {/* Title */}\r\n      <Grid item className=\"section_title mb_20\">\r\n        <span></span>\r\n        <h6 className=\"section_title_text\">Blogs</h6>\r\n      </Grid>\r\n      {/* Project Navbar */}\r\n      <Grid item xs={12}>\r\n        <BlogNavbar\r\n          handlerFilterCategory={handleFilterCategory}\r\n          active={active}\r\n        />\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={1}>\r\n          {\r\n            blogs.map((blog:any) => (              \r\n              <Grid container item xs={6} spacing={1}>\r\n                <Box m={1} >\r\n                  <BlogCard \r\n                    blogId={blog.id}\r\n                    blogTitle={blog.article_title} \r\n                    blogOverview={blog.article_overview}\r\n                    blogImagePath={blog.banner_image_path}/>\r\n                </Box>  \r\n              </Grid>                          \r\n            )\r\n            )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Blog;","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './SiteTitle.css';\r\n\r\nconst SiteTitle:FunctionComponent<{title: string}> = ({title}) => {\r\n  return (\r\n    <Grid item className=\"section_title mb_30\">\r\n      <span></span>\r\n      <h6 className='section_title_text'>{title}</h6>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n","import React, { useState, useEffect } from 'react'; \r\n\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Avatar, Card, CardActionArea, CardActions, CardContent, CardHeader, Grid, Paper, TextField, Typography, } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './GitApi.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Image } from 'react-bootstrap';\r\nimport { red } from '@material-ui/core/colors';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n});\r\n\r\nconst GitApi = () => {\r\n  const [name, setName] = useState<string>('');\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [followers, setFollowers] = useState<string>('');\r\n  const [following, setFollowing] = useState<string>('');\r\n  const [repos, setRepos] = useState<string>('');\r\n  const [avatar, setAvatar] = useState<string>('');  \r\n  const [term, setTerm] = useState<string>('ashur-k');\r\n  \r\nconst [reposInfo, setReposInfo] = useState([]);\r\n\r\ninterface GitUserData{\r\n  name: string;\r\n  login: string;\r\n  followers: string;\r\n  following: string;\r\n  public_repos: string;\r\n  avatar_url: string;\r\n\r\n}\r\n \r\n  useEffect(() => {  \r\n    async function fetchGitUsers(){ \r\n      try {\r\n        const result = await axios(`https://api.github.com/users/${term}`)\r\n\r\n        setData(result.data)\r\n      }catch(err){\r\n        console.log(\"USER Fetch ERROR:\", err)\r\n      }\r\n    }\r\n    async function fetchGitRepos(){\r\n  \r\n      try {\r\n        const result:any = await axios(`https://api.github.com/users/${term}/repos`)\r\n        setReposInfo(result.data)\r\n\r\n      }catch(err){\r\n        console.log(\"Repo Fetch ERROR:\", err)\r\n      }\r\n    }  \r\n    fetchGitUsers()\r\n    fetchGitRepos() \r\n    const setData= ({ name, login, followers, following, public_repos, avatar_url }:GitUserData) => {\r\n      setName(name)\r\n      setUserName(login)\r\n      setFollowers(followers)\r\n      setFollowing(following)\r\n      setRepos(public_repos)\r\n      setAvatar(avatar_url)\r\n    }    \r\n  },[term]);\r\n   \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{width:\"100%\"}}>\r\n      <Grid item xs={12}>\r\n        <Grid container \r\n          spacing={3}            \r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          className=\"section\"\r\n          >       \r\n            \r\n        </Grid>\r\n        <Grid \r\n          container \r\n          spacing={3} \r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"> \r\n          <Grid item xs={12} >\r\n            <Card className={classes.root}>\r\n                  <CardHeader\r\n                      avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                          {getIcon('FaGit')}\r\n                        </Avatar>\r\n                      }\r\n                      title={name}\r\n                      subheader={userName}\r\n                    />\r\n                    <CardActionArea>\r\n                      <Image\r\n                        rounded\r\n                        thumbnail\r\n                        src={avatar}\r\n                        alt={name}\r\n                      />\r\n                      <CardContent>\r\n                      \r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                        Followers: {followers}\r\n                      </Typography>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">              \r\n                        Following: {following}\r\n                      </Typography>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                        Repos: {repos}\r\n                      </Typography>              \r\n                  </CardActions>\r\n                </Card>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={0}>  \r\n            <div className=\"repositoriesTitle\"> \r\n            <TextField \r\n              label=\"Search\"\r\n              value={term} \r\n              fullWidth\r\n              onChange={e => setTerm(e.target.value)}     \r\n              className=\"searchInputField\"\r\n              \r\n              />\r\n              </div>\r\n\r\n          \r\n              <Grid container item xs={12} spacing={1}>\r\n             \r\n            {\r\n              reposInfo.map((repo:any) => (  \r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noreferrer\">\r\n                  <Paper className=\"repoName-Paper\" elevation={3} >\r\n                    {repo.name}\r\n                  </Paper>\r\n                  </a>\r\n                </Grid>\r\n              ))\r\n            }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        \r\n        </Grid>\r\n      </Grid>\r\n    </div>  \r\n  \r\n  )\r\n}\r\nexport default GitApi\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\n\r\nimport GitApi from '../../components/GitHubApi/GitApi';\r\nimport './GitPage.css';\r\n\r\nfunction GitPage() {\r\n\r\n  return (\r\n    // Contact\r\n    <Grid container className=\"section pb_45 pt_45\">\r\n      <Grid container item xs={12} spacing={3} >\r\n        {/* Git Information */}\r\n        <Grid item xs={12} className=\"top_30\">\r\n          <SiteTitle title='Git Information' />\r\n          <GitApi />\r\n        </Grid>\r\n      </Grid>  \r\n    </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default GitPage","export const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST'\r\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS'\r\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL'\r\n\r\n\r\nexport enum ActionType {\r\n  PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST',\r\n  PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS',\r\n  PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL',\r\n}","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ActionType } from '../constants/projectConstants';\r\n\r\nimport { Action } from '../interfaces/interfaces';\r\n//import { ProjectInterface } from '../../utils/resumeData';\r\n\r\nexport const listProjects = () => async (dispatch:  Dispatch<Action>) => {\r\n\r\n   try {\r\n      dispatch({ type: ActionType.PROJECT_LIST_REQUEST })\r\n\r\n      const { data } = await axios.get('/api/projects/');\r\n\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n\r\n   } catch (error) {\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_FAIL,\r\n        payload: error.response && error.response.data.detail\r\n        ? error.response.data.detail\r\n        : error.message,\r\n      })\r\n   }\r\n }\r\n","export enum ActionType {\r\n  RESUME_LIST_REQUEST = 'RESUME_LIST_REQUEST',\r\n  RESUME_LIST_SUCCESS = 'RESUME_LIST_SUCCESS',\r\n  RESUME_LIST_FAIL = 'RESUME_LIST__FAIL',\r\n}","import { FunctionComponent } from \"react\";\r\n\r\n// Typescript imports\r\nimport { Category } from '../../utils/types';\r\n\r\n// css imports\r\nimport './ProjectNavbarItem.css';\r\n\r\n\r\nexport const ProjectNavbarItems:FunctionComponent<{\r\n  value: Category | \"all\"; \r\n  handlerFilterCategory: Function;  \r\n  active: string;\r\n  }> = ({value, handlerFilterCategory, active }) => {\r\n      let className = \"project-navbar-item hover:text-green\";\r\n      if (active === value) {\r\n        className += \" text-green\"\r\n      };\r\n    return (\r\n      <li className={className} onClick={() => handlerFilterCategory(value)}>\r\n        {value}\r\n      </li>\r\n    );\r\n  };","import { FunctionComponent } from \"react\";\r\n\r\n// Custom components import\r\nimport { ProjectNavbarItems } from '../ProjectNavbarItem/ProjectNavbarItem';\r\n\r\n// css imports\r\nimport './ProjectNavbar.css';\r\n\r\nconst ProjectsNavbar: FunctionComponent<{\r\n    handlerFilterCategory: Function;\r\n    active: string;\r\n  }> = (props) => {\r\n    return (\r\n      <div className=\"Project-navbar-main\">\r\n        <ProjectNavbarItems value=\"all\" {...props} />\r\n        <ProjectNavbarItems value=\"react\" {...props} />\r\n        <ProjectNavbarItems value=\"mongo\" {...props} />\r\n        <ProjectNavbarItems value=\"django\" {...props} />\r\n        <ProjectNavbarItems value=\"nextjs\" {...props} />\r\n        <ProjectNavbarItems value=\"typescript\" {...props} />\r\n        <ProjectNavbarItems value=\"main-projects\" {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ProjectsNavbar;","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ProjectInterface  } from '../../utils/types';\r\n\r\n// Get icon helper function\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI components import\r\nimport { Grid, Icon, Typography } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Image } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomButton from '../Button/Button'\r\n\r\n// css imports\r\nimport './ProjectDialog.css';\r\n\r\nconst ProjectDialog:FunctionComponent<{\r\n  projectDialog: null | ProjectInterface;\r\n  open: boolean;\r\n  onClose:(val: boolean) => void;\r\n}> = ({ projectDialog, open, onClose } ) => {\r\n\r\n  return (\r\n    <Dialog \r\n      className=\"projectDialog\" \r\n      fullWidth \r\n      open={open} \r\n      onClose={() => onClose(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\">\r\n      \r\n      <p className=\"dialogClose_button\"  onClick={() => onClose(false)}>\r\n        <Icon>{getIcon('CloseIcon')}</Icon>\r\n      </p>      \r\n\r\n      <DialogTitle className=\"projectDialog_title\" id=\"alert-dialog-title\">{projectDialog?.name}</DialogTitle>\r\n        \r\n        <Image src={projectDialog?.image} rounded fluid alt={projectDialog?.name} />\r\n        <DialogContent id=\"alert-dialog-description\">\r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Description:\r\n          </Typography>\r\n          <Typography variant=\"body2\" className=\"projectDialog_description\">\r\n            {projectDialog?.description}\r\n          </Typography>          \r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Key Techs:\r\n          </Typography>\r\n            <div>\r\n              <Grid container spacing={1}>  \r\n                <Grid container item xs={12} spacing={1}>\r\n                  {\r\n                    projectDialog?.key_techs.map((item) => (\r\n                      <Grid key={item} item xs={2} >\r\n                        <Typography className=\"key-tech-items\" variant=\"body2\">{item}</Typography>\r\n                      </Grid> \r\n                  ))\r\n                  }\r\n                </Grid> \r\n              </Grid>\r\n            </div>\r\n         </DialogContent>\r\n          <DialogActions className=\"projectDialog_actions\">\r\n            <a href={projectDialog?.github_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Codes on Github\" \r\n                icon={getIcon('GitHubIcon')}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n            <a href={projectDialog?.deployed_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Live Hosted Site\" \r\n                icon={getIcon(projectDialog?.deployed_url_icon)}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\nexport default ProjectDialog\r\n","import React, { useState, useEffect } from 'react';\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { listProjects } from '../../redux/actions/projectActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { Category, ProjectInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport {  Card, CardActionArea, CardContent, Grid, Grow, Typography } from '@material-ui/core';\r\nimport { Image } from 'react-bootstrap';\r\n// Custom components import\r\nimport ProjectsNavbar  from '../../components/ProjectNabar/ProjectNavbar';\r\nimport ProjectDialog from '../../components/ProjectDialog/ProjectDialog';\r\n\r\n// css imports\r\nimport './Portfolio.css';\r\n\r\n\r\nconst Portfolio = () => {\r\n  const dispatch = useDispatch();\r\n   \r\n  const {error, loading, projects} =  useTypedSelector(\r\n      (state) => state.projectList\r\n    );\r\n  const [projectsData, setProjectsData] = useState<ProjectInterface[]>([]);  \r\n\r\n  const [projectDialog, setProjectDialog] = useState<null|ProjectInterface>(null);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  // UseEffect to dispatch listProjects action\r\n  useEffect(() => {\r\n    dispatch(listProjects())\r\n  },[dispatch]);\r\n\r\n  // UseEffect to update data to ProjectsData\r\n  useEffect(() => {     \r\n    setProjectsData(projects)\r\n  },[projects]);\r\n\r\n  // Filtering sytem for Project Navbar\r\n  const handleFilterCategory = (category: Category | 'all') => {\r\n    if(category === \"all\"){\r\n      setProjectsData((projects))\r\n      setActive(category);\r\n      return;\r\n    }    \r\n      const newArray = projects.filter((filteredProject)=> \r\n        filteredProject.category.includes(category)\r\n      );\r\n      setProjectsData(newArray);\r\n      setActive(category);\r\n  }\r\n  \r\n  // State to handle project dialog\r\n  const [open, setOpen] = React.useState(false);\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <Grid className=\"section pb_45 pt_45\">\r\n      <div>\r\n        {/* Title */}\r\n        <Grid item className=\"section_title mb_20\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Portfolio</h6>\r\n        </Grid>\r\n\r\n        {/* Project Navbar */}\r\n        <Grid item xs={12}>\r\n          <ProjectsNavbar\r\n            handlerFilterCategory={handleFilterCategory}\r\n            active={active}\r\n          />\r\n        </Grid>\r\n        <Grid container spacing={1}>  \r\n          <Grid container item xs={12} spacing={1}>            \r\n            {loading\r\n              ? (<h3>Loading...</h3>)\r\n              : error \r\n              ? (<h3>{error}</h3>)\r\n              : (\r\n                projectsData.map((project) => (     \r\n                <Grid key={project.id} item xs={12} sm={6}>           \r\n                      <div>\r\n                    <Grow in timeout={1000}>\r\n                      <Card\r\n                        className='customCard' \r\n                        onClick={() => {setProjectDialog(project); setOpen(true)}}\r\n                      >\r\n                        <CardActionArea>\r\n                          <Image src={project.image} rounded thumbnail alt={project.name} /> \r\n                          <CardContent>\r\n                            <Typography className='customCard_title'>\r\n                              {project.name}\r\n                            </Typography>\r\n                            <Typography variant='body2' className='customCard_description'>\r\n                              {project.description}\r\n                            </Typography> \r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>                                         \r\n                    </Grow>\r\n                    \r\n                    </div>                  \r\n                </Grid>\r\n              )))}              \r\n          </Grid> \r\n        </Grid>      \r\n      </div>   \r\n      <ProjectDialog projectDialog={projectDialog} open={open} onClose={closeDialog} />   \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Portfolio;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ActionType } from '../constants/resumeConstants';\r\n\r\n\r\nexport const listAboutme = () => async (dispatch: Dispatch<Action>) => {\r\n  try{\r\n    dispatch({ type: ActionType.RESUME_LIST_REQUEST})\r\n    const { data } = await axios.get('/api/about_me/');\r\n\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n    })\r\n  }\r\n}","export enum BlogDetailsActionType {\r\n  BLOG_DETAIL_REQUEST = 'blog_detail_request',\r\n  BLOG_DETAIL_SUCCESS = 'blog_detail_success',\r\n  BLOG_DETAIL_ERROR = 'blog_detail_error',\r\n }","import React, { FunctionComponent } from 'react';\r\n// Redux imports\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './WorkExpreience.css'\r\n\r\nconst WorkExpreience:FunctionComponent<{\r\n  work_expereinces:ResumeDataInterface[\"work_expereinces\"];\r\n}> = ({ work_expereinces }) => {\r\n  return (       \r\n      <CustomTimeline \r\n        title='Work Experience'\r\n        icon={getIcon('WorkIcon')}\r\n        >\r\n        {work_expereinces.map((experience) => (\r\n          <TimelineItem key={experience.id}>\r\n            <CustomTimelineSeparator />\r\n            <TimelineContent className='timeline_content'>\r\n              <Typography className=\"timeline_title\">{experience.title}</Typography>\r\n              <Typography variant='caption' className=\"timeline_date\">{experience.date}</Typography>\r\n              <Typography variant='body2' className=\"timeline_description\">{experience.description}</Typography>\r\n              <div className=\"timeline_links\">\r\n                {\r\n                   experience.office_job ? (\r\n                    <Typography variant='body2' className=\"timeline_links-typography\">\r\n                      <a href={experience.work_url} target=\"_blank\" rel=\"noreferrer\">Work Site</a>                        \r\n                    </Typography>\r\n                  ) :\r\n                  (\r\n                    <div className=\"buttons-div\">\r\n                      <Typography variant='body2' className=\"timeline_links-typography\">\r\n                        <a href={experience.deployed_url} target=\"_blank\" rel=\"noreferrer\">Live Site</a>                        \r\n                      </Typography>\r\n                      <Typography variant='body2' className=\"timeline_links-typography\">                \r\n                        <a href={experience.github_url} target=\"_blank\" rel=\"noreferrer\"> Codes on Git</a>      \r\n                      </Typography>\r\n                    </div>\r\n                  )\r\n                }                \r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </CustomTimeline> \r\n  )\r\n}\r\n\r\nexport default WorkExpreience\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// import { education } from '../../utils/types';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './Education.css'\r\n\r\n\r\nconst Education:FunctionComponent<{\r\n  education_details:ResumeDataInterface[\"education_details\"];\r\n}> = ({education_details}) => {\r\n  return (\r\n    <CustomTimeline \r\n      title='Education'\r\n      icon={getIcon('SchoolRoundedIcon')}\r\n      >\r\n      {education_details.map((edu) => (\r\n        <TimelineItem key={edu.id}>\r\n          <CustomTimelineSeparator />\r\n          <TimelineContent className='timeline_content'>\r\n            <Typography className=\"timeline_title\">\r\n              <span>{edu.title}</span> \r\n              <span> from </span> \r\n              <span>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 250, hide: 400 }}\r\n                overlay={<Tooltip id=\"button-tooltip-2\">Check out Institute Link</Tooltip>}\r\n              >         \r\n                <a href={edu.institute_link} className=\"education_link\" target=\"_black\" rel=\"noreferrer\">\r\n                    {edu.institute_name}                 \r\n                </a>\r\n              </OverlayTrigger>\r\n              </span>                              \r\n            </Typography>\r\n            <Typography variant='caption' className=\"timeline_date\">{edu.date}</Typography>\r\n            <Typography variant='body2' className=\"timeline_description\">{edu.description}</Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      ))}\r\n    </CustomTimeline>\r\n  )\r\n}\r\n\r\nexport default Education\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Icon, Typography } from '@material-ui/core';\r\nimport { Card, CardGroup } from 'react-bootstrap';\r\n\r\n// css imports\r\nimport './CardComponent.css';\r\n\r\nexport const CardComponent:FunctionComponent<{\r\n  icon: string;\r\n  title: string;\r\n  description: string;\r\n}> = ({icon, title, description}) => {\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n      <div className=\"service\">                    \r\n        <Icon className=\"service_icon\" style={{margin:'12px', paddingBottom:\"50px\"}}>\r\n          {getIcon(icon)}\r\n        </Icon>\r\n        <Card.Body>        \r\n          <Typography className=\"service_title\" variant='h6'>\r\n            {title}\r\n          </Typography>          \r\n          <Typography className=\"service_description\" variant='body2'>\r\n            {description}\r\n          </Typography>          \r\n        </Card.Body>\r\n        </div>\r\n      </Card>\r\n    </CardGroup>  \r\n  )\r\n}\r\n\r\n\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Custom components import\r\nimport { CardComponent } from '../Card/CardComponent';\r\n\r\n// css imports\r\nimport './Skills.css'\r\n\r\nconst Skills:FunctionComponent<{\r\n  skills:ResumeDataInterface[\"skills\"];\r\n}> = ({ skills }) => {\r\n  return (\r\n    <Grid container spacing={3} justifyContent='space-around'>\r\n      {skills.map((skill) => (\r\n        <Grid key={skill.id} item sm={12} md={4}>          \r\n          <CardComponent \r\n            icon={skill.icon} \r\n            title={skill.title} \r\n            description={skill.description} \r\n          />      \r\n        </Grid>\r\n      ))}\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { FunctionComponent }  from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport {  ResumeDataInterface } from '../../utils/types';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\n// css imports\r\nimport './SkillsCapabilities.css'\r\n\r\nconst SkillsCapabilities:FunctionComponent<{\r\n  skillCapabilities:ResumeDataInterface[\"skill_capabilities\"];\r\n}> = ({ skillCapabilities }) => {\r\n  return (\r\n    <Grid \r\n      container\r\n      justifyContent='space-between' \r\n      className=\"section graybg pb_45 p_50\"\r\n    >\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent=\"space-between\" spacing={3}>\r\n          {skillCapabilities.map((skill) => (\r\n            <Grid key={skill.id} item xs={12} sm={6} md={3} >\r\n              <Paper elevation={0} className='skill'>\r\n                <Typography variant='h6' className=\"skills_title\">\r\n                  {skill.title}\r\n                </Typography>\r\n                {skill.category.map((element) => (\r\n                  <Typography key={element} variant='body2' className='skill_description'>\r\n                    <TimelineDot variant='outlined' className='timeline_dot'/>{element}\r\n                  </Typography>\r\n                ))}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SkillsCapabilities\r\n","import React from 'react';\r\n\r\n// Typescript and data imports\r\nimport { socials } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid, Typography, TextField } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Grid container className=\"section pb_45 pt_45\">\r\n      <Grid container item xs={12} spacing={3} >\r\n        {/* Contact Form */}\r\n          <Grid item xs={12} lg={8}>\r\n            <Grid container>\r\n              <SiteTitle title='Contact Form' />\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField fullWidth name=\"name\" label=\"Name\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField fullWidth name=\"email\" label=\"E-mail\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField fullWidth name=\"message\" label=\"Your Message\" multiline rows={2} />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomButton text=\"Submit\" icon={getIcon('SendIcon')} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={4}>\r\n            <Grid container>\r\n              <SiteTitle title='Contact Information' />\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Address:</span> Falkirk Scotland\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Phone:</span> 0739-732-5523\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Email:</span> ashurkanwal@yahoo.com\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                  {socials.map((social) => (\r\n                    <Grid className=\"contactSocail-icons\">\r\n                      <a\r\n                        key={social.icon}\r\n                        href={social.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {getIcon(social.icon)}\r\n                      </a>\r\n                    </Grid>\r\n                  ))}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>              \r\n            </Grid>\r\n          </Grid>\r\n      </Grid>  \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useState, useEffect} from 'react';\r\n\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { listAboutme } from '../../redux/actions/resumeActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Alert, Spinner } from 'react-bootstrap';\r\n\r\n// Custom components import\r\nimport WorkExpreience from '../../components/WorkExpreience/WorkExpreience';\r\nimport Education from '../../components/Education/Education';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsCapabilities from '../../components/SkillsCapabilities/SkillsCapabilities';\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\nimport Contact from '../../components/Contact/Contact';\r\n\r\n// css imports\r\nimport './Resume.css';\r\n\r\n\r\nconst Resume = () => {\r\n  const dispatch = useDispatch()\r\n  const {error, loading, aboutme} = useTypedSelector((state) => state.resumeList);\r\n  \r\n  // React UseStates\r\n  const [aboutMeText, setAboutMeText] = useState<string>(\"\");\r\n  const [education, setEducation] = useState<ResumeDataInterface[\"education_details\"] | any>([]);\r\n  const [work, setWork] = useState<ResumeDataInterface[\"work_expereinces\"] | any>([]);\r\n  const [skills, setSkills] = useState<ResumeDataInterface[\"skills\"] | any>([]);\r\n  const [skillCapabilities, setSkillCapabilities] = useState<ResumeDataInterface[\"skill_capabilities\"] | any>([]);\r\n\r\n // React UseEffects\r\n  useEffect(() => {\r\n    dispatch(listAboutme())\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    aboutme.map((me) => (\r\n      // eslint-disable-next-line no-sequences\r\n      setAboutMeText(me.about_me),\r\n      setEducation(me.education_details),\r\n      setWork(me.work_expereinces),\r\n      setSkills(me.skills),\r\n      setSkillCapabilities(me.skill_capabilities)\r\n    ))\r\n  }, [aboutme]);\r\n \r\n  return (\r\n    <div>\r\n      {\r\n        loading ? \r\n        (<Grid container className=\"section pb_45 pt_45\">\r\n          <Spinner animation=\"border\" variant=\"danger\" />\r\n        </Grid>)\r\n        : error ?\r\n        (\r\n        <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>)\r\n        :(<div>       \r\n          {/* About Me */}\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n            <SiteTitle title='About Me' />\r\n\r\n            <Grid item xs={12}>        \r\n              <Typography variant='body2' className=\"aboutme_text\">\r\n                {aboutMeText}\r\n              </Typography>      \r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Education and Experience */}\r\n          <Grid container className=\"section pb_45\">\r\n            <SiteTitle title='Resume' />\r\n            <Grid item xs={12}>\r\n              <Grid container className='resume_timeline'>\r\n                {/* Education  */}\r\n                <Grid item sm={12} md={6}>    \r\n                  { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}        \r\n                  <Education education_details={education}/>\r\n                </Grid>\r\n                {/* Experience */}\r\n                <Grid item sm={12} md={6}>\r\n                  { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n                  <WorkExpreience work_expereinces={work} /> \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Services */}\r\n          <Grid container className=\"section pb_45\">        \r\n            <SiteTitle title='My Skills' />\r\n            <Grid item xs={12}>\r\n            { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n              <Skills skills={skills}/>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Skills */}\r\n          \r\n            <SkillsCapabilities skillCapabilities={skillCapabilities} />      \r\n            <Contact />           \r\n          </div>\r\n        )\r\n      } \r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Resume","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login, logout } from '../../redux/actions/userActions';\r\nimport FormContainer from '../../components/FormContainer/FormContainer';\r\n\r\n// Typescript and data imports\r\nimport { socials } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid, Typography, TextField } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\n// Material UI and bootstrap Components import\r\n\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { History } from 'history';\r\n\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  // const userLogin = useSelector(state => state.userLogin)\r\n  const dispatch = useDispatch();\r\n\r\n  const {error, loading, userInfo } =  useTypedSelector(\r\n    (state) => state.userLogin\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if(user){\r\n  //     history.push(redirect)\r\n  //   }\r\n  // })\r\n\r\n  const submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n    console.log('Submitted')\r\n  }\r\n\r\n\r\n  const logoutHandler = () => {\r\n        dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid className=\"section pb_45 pt_45\">\r\n        {/* Title */}\r\n        <Grid item className=\"section_title mb_20\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Login Page</h6>\r\n          {error && <p>{error}</p>}\r\n          {loading && <h3>Loading...</h3>}\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n        <Grid item xs={12}>\r\n          {/* ###################### FORM ######################*/}\r\n          <Grid container spacing={3}>\r\n            <form onSubmit={submitHandler} style={{width:'100%'}}>\r\n            <Grid item xs={12} sm={6}>              \r\n              <TextField \r\n                fullWidth \r\n                name=\"email\"\r\n                value={email} \r\n                label=\"E-mail\"\r\n                type='email'\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField \r\n                fullWidth \r\n                name=\"password\" \r\n                label=\"Password\"\r\n                value={password} \r\n                type='password'\r\n                onChange={(e) => setPassword(e.target.value)} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CustomButton text=\"Login\" icon={getIcon('SendIcon')} />\r\n              <Button variant=\"secondary\" onClick={logoutHandler}>Logout</Button>\r\n            </Grid>\r\n          </form>\r\n          </Grid>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export default Login\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { BlogDetailsActionType } from '../constants/blogDetailConstants';\r\nimport { BlogDetailAction } from '../interfaces/BlogDetailInterface';\r\n\r\nexport const blogDetail = (id:Number) => {\r\n\r\n  return async (dispatch: Dispatch<BlogDetailAction>) => {\r\n    dispatch({\r\n      type: BlogDetailsActionType.BLOG_DETAIL_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await axios.get(`/api/blog/${id}`)\r\n      dispatch({\r\n        type: BlogDetailsActionType.BLOG_DETAIL_SUCCESS,\r\n        payload: data\r\n      })\r\n    } catch (error){\r\n      dispatch({\r\n        type: BlogDetailsActionType.BLOG_DETAIL_ERROR,\r\n        payload: error.message\r\n      })\r\n    }\r\n  }\r\n}\r\n","export interface Blog {\r\n  id:number;\r\n  article_title: string;\r\n  article_overview: string;\r\n  banner_image_path: string;\r\n  category: Category[];\r\n  requirements: string[];\r\n  blog_sections: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      paragraph:string;\r\n      image_path:string;\r\n    }\r\n  ];\r\n}\r\n\r\nexport type Category = \"react\" | \"JavaScript\" | \"flask\" | \"django\" | \"mongo\" ;\r\n\r\nexport const blogs: Blog[] = [\r\n  { \r\n    id:1,\r\n    article_title: \"React And Django (DRF) connectivity\",\r\n    article_overview: \"To start with in development mode we are required running Django server and react server on 2 separate ports. Normally React runs at http://localhost:3000/ and django at http://localhost:8000/ \",\r\n    banner_image_path: \"/images/django-react-header.png\",\r\n    category: [\"django\"],\r\n    requirements: [\"Beginners Knowledege\", \"VS-Code\", \"Node Package Manager\", \"Python 3\", \"PIP-3\"],\r\n    \"blog_sections\": [\r\n      {\r\n        \"id\": 1,\r\n        \"title\": \"STEP 1: Testing if you are all set\",\r\n        \"paragraph\": \"Open Vs Code and then your terminal: run python3 --version, npm --version, npx --version pip --version\",\r\n        \"image_path\": \"/images/versions_check.png\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// import { education } from '../../utils/types';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './BlogDescription.css'\r\n\r\n\r\nconst BlogDescription:FunctionComponent<{\r\n  article_overview:string;\r\n}> = ({article_overview}) => {\r\n\r\n  return (\r\n    <CustomTimeline \r\n      title='Blog Overview'\r\n      icon={getIcon('DescriptionIcon')}\r\n      >\r\n        <TimelineItem>\r\n          <CustomTimelineSeparator />\r\n          <TimelineContent className='timeline_content'>\r\n            <Typography className=\"timeline_title\">\r\n              <span>{article_overview}</span>                       \r\n            </Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n    </CustomTimeline>\r\n  )\r\n}\r\n\r\nexport default BlogDescription\r\n","import React, { FunctionComponent } from 'react';\r\n// Redux imports\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './BlogRequirements.css';\r\n\r\n\r\nconst BlogRequirements:FunctionComponent<{\r\n  requirements:[];\r\n}> = ({ requirements }) => {\r\n  return (       \r\n      <CustomTimeline \r\n        title='Requirements'\r\n        icon={getIcon('VscChecklist')}\r\n        >\r\n        {requirements.map((requirement:any) => (\r\n          <TimelineItem key={requirement}>\r\n            <CustomTimelineSeparator />\r\n            <TimelineContent className='timeline_content'>\r\n              <Typography className=\"timeline_title\">{requirement}</Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </CustomTimeline>\r\n    \r\n  )\r\n}\r\n\r\nexport default BlogRequirements\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript and data imports\r\nimport { socials } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Blog } from '../../pages/Blog/data' \r\n\r\n\r\n\r\nimport './BlogSteps.css';\r\nimport SiteTitle from '../SiteTitle/SiteTitle';\r\nimport { Image } from 'react-bootstrap';\r\n\r\nconst BlogSteps:FunctionComponent<{\r\n  blog_sections:Blog[\"blog_sections\"];\r\n}> = ({ blog_sections }) => {\r\n\r\n  return (\r\n    <div>\r\n      {blog_sections.map((section) => (\r\n        <Grid container className=\"section pb_45 pt_45\" style={{margin:'auto'}}>\r\n            <SiteTitle title={section.title} />\r\n        <Grid container item xs={12} spacing={3} >\r\n          {/*  */}\r\n        \r\n            <Grid item xs={12} lg={4} style={{margin:'auto'}}>\r\n            \r\n              <Grid container>\r\n               \r\n                <Typography variant='body2'>\r\n                  {section.paragraph}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n  \r\n            <Grid item xs={12} lg={8}>\r\n              <Grid container>\r\n                <Image src={section.image_path} fluid />\r\n              </Grid>\r\n            </Grid>\r\n        </Grid>  \r\n      </Grid>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogSteps\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\nimport { blogDetail as blogDetailAction } from '../../redux/actions/blogDetailActions'\r\n\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Image, ListGroup } from 'react-bootstrap';\r\nimport { blogs as blogData, Category, Blog } from '../Blog/data';\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\nimport './BlogDetail.css'\r\nimport BlogDescription from '../../components/BlogDescription/BlogDescription';\r\nimport BlogRequirements from '../../components/BlogRequirements/BlogRequirements';\r\nimport BlogSteps from '../../components/BlogSteps/BlogSteps';\r\n\r\n\r\n// Custom components import\r\nconst BlogDetail = ({ match }: any) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const {loading, error, data} = useTypedSelector((state) => state.blogDetail);\r\n  \r\n  console.log(loading, error)\r\n  \r\n  useEffect(() => {\r\n    dispatch(blogDetailAction(match.params.id))\r\n  }, [dispatch, match.params.id])\r\n\r\n  useEffect(() => {\r\n\r\n    data.map((blog_detail) => (\r\n      console.log(blog_detail)\r\n    ))\r\n    \r\n  }, [data])\r\n\r\n\r\n  // const blog : any = blogData.find((blog) => blog.id === match.params.id)\r\n\r\n  const blogs = blogData.filter((blog) =>\r\n    blog.id.toString().includes(match.params.id)\r\n  );\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        blogs.map((blog: any) => (\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            <SiteTitle title={blog.article_title} />\r\n\r\n            <Grid item xs={12}>\r\n              <Image src={blog.banner_image_path} fluid />\r\n            </Grid>\r\n            {/* */}\r\n            <Grid container className=\"section pb_45\">\r\n              <Grid item xs={12}>\r\n                <Grid container className='resume_timeline'>\r\n                  {/*   */}\r\n                  <Grid item sm={12} md={6}>\r\n                    <BlogDescription article_overview={blog.article_overview} />\r\n                  </Grid>\r\n                  {/* */}\r\n                  <Grid item sm={12} md={6}>\r\n                    <BlogRequirements requirements={blog.requirements} />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={12}>\r\n                  <BlogSteps blog_sections={blog.blog_sections} />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n    </div>\r\n\r\n    // <Grid className=\"section pb_45 pt_45\">\r\n    //   {/* Title */}\r\n    //   <Grid item className=\"section_title mb_20\">\r\n    //     <span></span>\r\n    //     <h6 className=\"section_title_text\">Blogs Detail</h6>\r\n    //   </Grid>  \r\n    //   <div>\r\n    //   {\r\n    //         blogs.map((blog:any) => (  \r\n\r\n    //           <Grid container spacing={2}>\r\n    //             <Grid className=\"blog-title-grid\" item xs={12}>\r\n    //               <h5>{blog.article_title}</h5>\r\n    //             </Grid>\r\n    //             <Grid item xs={12}>\r\n    //               <Image src={blog.banner_image_path} fluid />\r\n    //             </Grid>\r\n    //             <Grid container>\r\n\r\n    //               <Grid item xs={6} >\r\n    //                 <Grid item className=\"section_title mb_20\">\r\n    //                   <span></span>\r\n    //                   <h6 className=\"section_title_text\">Description</h6>\r\n    //                 </Grid>  \r\n\r\n    //               </Grid>\r\n    //               <Grid item xs={6}>\r\n    //                 <Grid item className=\"section_title mb_20\">\r\n    //                   <span></span>\r\n    //                   <h6 className=\"section_title_text\">Requirements</h6>\r\n    //                 </Grid>  \r\n\r\n    //                 {\r\n    //                   blog.requirements.map((item:any) => (\r\n    //                     <Grid key={item} item xs={6} >\r\n    //                       <ListGroup className=\"requirements-list\">\r\n    //                           <ListGroup.Item>{item}</ListGroup.Item>                      \r\n    //                       </ListGroup>\r\n    //                     </Grid> \r\n    //                   ))\r\n    //                 }\r\n    //               </Grid>\r\n\r\n    //             </Grid>\r\n    //             <Grid item xs={12}>\r\n    //               <Grid item xs={6} >\r\n\r\n    //               </Grid>                   \r\n    //             </Grid>                    \r\n    //         </Grid>\r\n    //         )\r\n    //         )}\r\n\r\n    //   </div>\r\n    // </Grid>\r\n  )\r\n}\r\n\r\nexport default BlogDetail;","import { Container, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport Profile from './components/Profile/Profile';\nimport Blog from './pages/Blog/Blog';\nimport GitPage from './pages/GitPage/GitPage';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport Resume from './pages/Resume/Resume';\nimport { Login } from './pages/Login/Login';\nimport BlogDetail from './pages/BlogDetail/BlogDetail';\n\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className=\"main-content container_shadow\">\n              <Switch>\n                <Route path=\"/portfolio\">\n                  <Portfolio />\n                </Route>\n                \n                <Route path=\"/blog\" component={Blog} />\n                <Route path=\"/blog-detail/:id?\" component={BlogDetail} />\n                \n                <Route path=\"/GitPage\">\n                  <GitPage />\n                </Route>\n                <Route path=\"/Login\">\n                  <Login />\n                </Route>\n                <Route path=\"/\">\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>            \n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from '../constants/projectConstants';\r\nimport { Action } from '../interfaces/interfaces';\r\n\r\nimport { ProjectInterface } from '../../utils/types'\r\n\r\n interface ProjectReducerInterface {\r\n   loading: boolean;\r\n   error: string | null;\r\n   projects: ProjectInterface[];\r\n };\r\n\r\n const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  projects: [],\r\n};\r\n\r\nexport const projectListReducer = (\r\n  state:ProjectReducerInterface = initialState, \r\n  action: Action):ProjectReducerInterface  => {\r\n  switch (action.type) {\r\n    case ActionType.PROJECT_LIST_REQUEST:\r\n      return { loading: true, error: null, projects: [] };\r\n\r\n    case ActionType.PROJECT_LIST_SUCCESS:\r\n      return { loading: false, error: null, projects: action.payload };\r\n\r\n    case ActionType.PROJECT_LIST_FAIL:\r\n      return { loading: false, error: action.payload, projects: [] };\r\n    \r\n    default:\r\n      return state\r\n}\r\n}","import { ActionType } from  '../constants/resumeConstants';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ResumeDataInterface } from '../../utils/types'\r\n\r\ninterface ResumeReducerInterface {\r\n  loading: boolean;\r\n  error: string | null;\r\n  aboutme: ResumeDataInterface[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  aboutme: [],\r\n};\r\n\r\nexport const resumeListReducer = (\r\n  state:ResumeReducerInterface = initialState, \r\n  action:Action):ResumeReducerInterface => {\r\n  switch(action.type){\r\n    case ActionType.RESUME_LIST_REQUEST:\r\n      return {loading:true, error: null, aboutme: [] }\r\n    case ActionType.RESUME_LIST_SUCCESS:\r\n      return {loading:false, error: null, aboutme: action.payload }\r\n    case ActionType.RESUME_LIST_FAIL:\r\n      return {loading:false, error: action.payload, aboutme: []}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { ActionType } from '../constants/userConstants';\r\nimport { Action } from '../interfaces/UserInterfaces';\r\n\r\nimport { UserInterface } from '../../utils/types';\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n  JSON.parse(localStorage.getItem('userInfo') || '{}') : {};\r\n\r\n interface UserReducerInterface {\r\n   loading: boolean;\r\n   error: string | null;\r\n   userInfo: any;\r\n };\r\n\r\n const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  userInfo: {userInfo: userInfoFromStorage},\r\n};\r\n\r\nexport const userLoginReducer = (\r\n  state:UserReducerInterface = initialState, \r\n  action: Action):UserReducerInterface => {\r\n  switch (action.type) {\r\n    case ActionType.USER_LOGIN_REQUEST:\r\n      return { loading: true, error: null, userInfo: [] };\r\n\r\n    case ActionType.USER_LOGIN_SUCCESS:\r\n      return { loading: false, error: null, userInfo: action.payload };\r\n\r\n    case ActionType.USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload, userInfo: [] };\r\n    \r\n    case ActionType.USER_LOGOUT:\r\n      return { loading: false, error: null, userInfo: [] };\r\n    \r\n    default:\r\n      return state\r\n}\r\n}","import { BlogAction } from \"../interfaces/BlogInterfaces\";\r\nimport { BlogActionType } from \"../constants/blogConstants\";\r\n\r\nimport { Blog } from '../../pages/Blog/data'\r\n\r\ninterface BlogReducerInterface{\r\n  loading: boolean;\r\n  error: string | null;\r\n  blogData: Blog[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  blogData: [],\r\n};\r\n\r\n\r\nexport const blogListReducer = (\r\n  state: BlogReducerInterface = initialState,\r\n  action: BlogAction):BlogReducerInterface => {\r\n  switch (action.type){\r\n    case BlogActionType.BLOG_LIST_REQUEST:\r\n      return { loading: true, error: null, blogData: [] };\r\n    case BlogActionType.BLOG_LIST_SUCCESS:\r\n      return { loading: false, error: null, blogData: action.payload };\r\n    case BlogActionType.BLOG_LIST_ERROR:\r\n      return { loading: false, error: action.payload, blogData: [] };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n\r\n","import { BlogDetailAction } from \"../interfaces/BlogDetailInterface\";\r\nimport { BlogDetailsActionType } from \"../constants/blogDetailConstants\";\r\n\r\nimport { Blog } from '../../pages/Blog/data'\r\n\r\ninterface BlogDetailReducerInterface{\r\n  loading: boolean;\r\n  error: string | null;\r\n  data: Blog[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data:[],\r\n};\r\n\r\n\r\nexport const blogDetailReducer = (\r\n    state: BlogDetailReducerInterface = initialState,\r\n    action: BlogDetailAction):BlogDetailReducerInterface => {\r\n  switch (action.type){\r\n    case BlogDetailsActionType.BLOG_DETAIL_REQUEST:\r\n      return { loading: true, error: null, data: [] };\r\n    case BlogDetailsActionType.BLOG_DETAIL_SUCCESS:\r\n      return { loading: false, error: null, data: action.payload };\r\n    case BlogDetailsActionType.BLOG_DETAIL_ERROR:\r\n      return { loading: false, error: action.payload, data: [] };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { projectListReducer } from './redux/reducers/projectReducers';\r\nimport { resumeListReducer } from './redux/reducers/resumeReducers';\r\nimport { userLoginReducer } from './redux/reducers/userReducers';\r\nimport { blogListReducer } from './redux/reducers/BlogReducers';\r\nimport { blogDetailReducer } from './redux/reducers/BlogDetailsReducers';\r\n\r\nconst reducers = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  projectList: projectListReducer,\r\n  resumeList: resumeListReducer,\r\n  blogList: blogListReducer,\r\n  blogDetail: blogDetailReducer,\r\n});\r\n\r\n// const userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n//   JSON.parse(localStorage.getItem('userInfo') || '{}') : {};\r\n\r\n\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\n// const initialState = {\r\n//   loading: false,\r\n//   error: null,\r\n//   userLogin: { userInfo: userInfoFromStorage}\r\n//  };\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducers, \r\n  {},\r\n  composeWithDevTools(applyMiddleware(...middleware )));\r\n\r\n  \r\nexport default store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
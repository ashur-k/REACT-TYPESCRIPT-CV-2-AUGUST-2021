{"version":3,"sources":["components/Footer/Footer.tsx","utils/types.ts","helperFunctions/getIcon.tsx","components/Button/Button.tsx","components/Header/Header.tsx","components/Timeline/Timeline.tsx","assets/images/ash.jpg","components/Profile/Profile.tsx","pages/Blog/Blog.tsx","components/SiteTitle/SiteTitle.tsx","components/GitHubApi/GitApi.tsx","pages/GitPage/GitPage.tsx","redux/constants/projectConstants.ts","redux/actions/projectActions.ts","redux/constants/resumeConstants.ts","hooks/useTypedSelector.ts","components/ProjectNavbarItem/ProjectNavbarItem.tsx","components/ProjectNabar/ProjectNavbar.tsx","components/ProjectDialog/ProjectDialog.tsx","pages/Portfolio/Portfolio.tsx","redux/actions/resumeActions.ts","components/WorkExpreience/WorkExpreience.tsx","components/Education/Education.tsx","components/Card/CardComponent.tsx","components/Skills/Skills.tsx","components/SkillsCapabilities/SkillsCapabilities.tsx","components/Contact/Contact.tsx","pages/Resume/Resume.tsx","App.tsx","reportWebVitals.ts","redux/reducers/projectReducers.ts","redux/reducers/resumeReducers.ts","store.ts","index.tsx"],"names":["Footer","className","Typography","Copyright","href","profile","socials","title","link","text","icon","getIcon","CustomButton","Button","endIcon","withRouter","props","pathName","location","pathname","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","map","social","target","rel","Toggle","Collapse","Telegram","CustomTimelineSeparator","TimelineSeparator","TimelineDot","variant","TimelineConnector","CustomTimeline","children","Timeline","TimelineItem","TimelineContent","CustomTimelineItem","Profile","src","profileImage","alt","Blog","Grid","container","spacing","item","xs","Paper","SiteTitle","useStyles","makeStyles","root","maxWidth","media","height","avatar","backgroundColor","red","GitApi","useState","name","setName","userName","setUserName","followers","setFollowers","following","setFollowing","repos","setRepos","setAvatar","term","setTerm","reposInfo","setReposInfo","useEffect","a","axios","result","setData","data","console","log","fetchGitUsers","fetchGitRepos","login","public_repos","avatar_url","classes","style","width","alignItems","justifyContent","direction","justify","Card","CardHeader","Avatar","subheader","CardActionArea","Image","rounded","thumbnail","CardContent","CardActions","gutterBottom","component","TextField","label","value","fullWidth","onChange","e","repo","sm","md","html_url","elevation","GitPage","ActionType","useTypedSelector","useSelector","ProjectNavbarItems","handlerFilterCategory","active","onClick","ProjectsNavbar","ProjectDialog","projectDialog","open","onClose","Dialog","Icon","DialogTitle","id","image","fluid","DialogContent","description","key_techs","DialogActions","github_url","deployed_url_icon","Portfolio","dispatch","useDispatch","state","projectList","error","loading","projects","projectsData","setProjectsData","setProjectDialog","setActive","type","PROJECT_LIST_REQUEST","get","PROJECT_LIST_SUCCESS","payload","PROJECT_LIST_FAIL","response","message","React","setOpen","category","newArray","filter","filteredProject","includes","project","Grow","in","timeout","WorkExpreience","work_expereinces","experience","date","deployed_url","Education","education_details","edu","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","institute_link","institute_name","CardComponent","CardGroup","margin","paddingBottom","Body","Skills","skills","skill","SkillsCapabilities","skillCapabilities","element","Contact","lg","multiline","rows","Resume","resumeList","aboutme","aboutMeText","setAboutMeText","education","setEducation","work","setWork","setSkills","setSkillCapabilities","RESUME_LIST_REQUEST","RESUME_LIST_SUCCESS","RESUME_LIST_FAIL","me","about_me","skill_capabilities","Spinner","animation","Alert","App","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.387e7314.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport { Copyright } from '@material-ui/icons';\r\n\r\n// css imports\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">Ashur Kanwal</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Coded by {\" \"}\r\n          <Copyright/>\r\n          <a href=\"/\">ashurkanwal@yahoo.com</a>\r\n          <br />\r\n          <a  href='/'>Ashur Kanwal 2021 Resume Site.</a>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","export interface profileInfo {\r\n  name: string;\r\n  title: string;\r\n  DOB: string;\r\n  email: string;\r\n  address: string;\r\n  phone: string;\r\n\r\n  socials: {\r\n    Facebook: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    Twitter: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    LinkedIn: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    GitHub: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const profile: profileInfo = {\r\n  name: 'Ashur Kanwal',\r\n  title: 'Full-Stack-Developer',\r\n  DOB: 'July',\r\n  email: 'ashurkanwal@yahoo.com',\r\n  address: 'Grangemouth Scotland',\r\n  phone: '07397325523',\r\n\r\n  socials:{\r\n    Facebook:{\r\n      link: 'facebook.com',\r\n      text: 'myFacebook',\r\n      icon: 'FacebookIcon',\r\n    },\r\n    Twitter:{\r\n      link: 'twitter.com',\r\n      text: 'myTwitter',\r\n      icon: 'TwitterIcon',\r\n    },\r\n    \r\n    LinkedIn:{\r\n      link: 'linkedin.com',\r\n      text: 'myLinkeIn',\r\n      icon: 'LinkedInIcon',\r\n    },\r\n    GitHub:{\r\n      link: 'github.com',\r\n      text: 'myGitHub',\r\n      icon: 'GitHubIcon',\r\n    }\r\n  }\r\n}\r\n\r\nexport interface socialsInterface {\r\n  title: string;\r\n  link: string;\r\n  text:string;\r\n  icon: string;\r\n}\r\n\r\nexport const socials: socialsInterface[] = [\r\n  {\r\n    title: 'Facebook',\r\n    link: 'https://www.facebook.com/',\r\n    text: 'myFacebook',\r\n    icon: 'FacebookIcon',\r\n  },\r\n  {\r\n    title: 'Twitter',\r\n    link: 'https://twitter.com/',\r\n    text: 'myTwitter',\r\n    icon: 'TwitterIcon',\r\n  },\r\n  {\r\n    title: 'LinkedIn',\r\n    link: 'https://www.linkedin.com/in/ashur-kanwal-37979b195/',\r\n    text: 'myLinkedIn',\r\n    icon: 'LinkedInIcon',\r\n  },\r\n  {\r\n    title: 'GitHub',\r\n    link: 'https://github.com/ashur-k',\r\n    text: 'myGitHub',\r\n    icon: 'GitHubIcon',\r\n  },\r\n]\r\n\r\ninterface ExperiencesInterface {\r\n  title: string;\r\n  date: string;\r\n  description: string;\r\n  gitLink:string;\r\n  hostLink: string;\r\n}\r\n\r\nexport const experiences:ExperiencesInterface[] = [\r\n  {\r\n    title: 'Kirk Of the Holy Rood',\r\n    date: 'Jan-2021 - April-2021',\r\n    description: 'Python django application, admin can manage all content including adding removing ministry section pages',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'RR-Clothes',\r\n    date: 'Sept-2020 - Dec-2020',\r\n    description: 'Python django E-commerce shopping site sells product including color size variants.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Car Sales Showroom',\r\n    date: 'May-2020 - August-2020',\r\n    description: 'Python flask appicaition built to manage and book car test drives.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Covid App',\r\n    date: 'Jan-2020 - April-2020',\r\n    description: 'International Rapid Covid API data where user can see covid stats of all countries.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n]\r\n\r\ninterface EducationInterface {\r\n  title: string;\r\n  instituteName:string;\r\n  instituteLink:string;\r\n  date: string;\r\n  description: string; \r\n}\r\n\r\nexport const education:EducationInterface[] = [\r\n  {\r\n    title: 'Full-Stack Web developer',\r\n    instituteName: 'Code Institute',\r\n    instituteLink:'link',\r\n    date: 'Dec-2019 - -Dec-2020',\r\n    description: 'Full-Stack Web developer'\r\n  },\r\n  {\r\n    title: 'Bachelors Degree',\r\n    instituteName: 'PIMSAT',\r\n    instituteLink:'link',\r\n    date: '2017 - 2018',\r\n    description: 'Lorem Ipsum text for now'\r\n  },\r\n  {\r\n    title: 'First Line Manager Diploma',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'https://www.stockton.ac.uk/',\r\n    date: '2017 - 2018',\r\n    description: 'Management is the best I love management'\r\n  },\r\n  {\r\n    title: 'Computer Itq Graphics',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Adobe Suits and adobe suites'\r\n  },\r\n  {\r\n    title: 'Performing Arts In Music',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Performing art singing, dancing, and acting.'\r\n  },\r\n]\r\n\r\ninterface SkillsInterface {\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n}\r\n\r\nexport const skills: SkillsInterface[] = [\r\n  {\r\n    title: 'React Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoReact',\r\n  },\r\n  {\r\n    title: 'Python Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoPython',\r\n  },\r\n  {\r\n    title: 'Database Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'FiDatabase',\r\n  },\r\n]\r\n\r\n\r\nexport interface SkillsCapabilitiesInterface {\r\n  title: string;\r\n  description: string[];\r\n}\r\n\r\nexport const skillsCapabilities: SkillsCapabilitiesInterface[] = [\r\n  {\r\n    title: \"FrontEnd\",\r\n    description: [\r\n      \"ReactJs\",\r\n      \"JavaScript\",\r\n      \"TypeScript\",\r\n      \"Bootstrap\",\r\n      \"Material UI\"\r\n    ]\r\n      ,\r\n  },\r\n  {\r\n    title: \"Backend\",\r\n    description: [\r\n      \"Python\",\r\n      \"Flask\",\r\n      \"Django\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Database\",\r\n    description: [\r\n      \"SQL\",\r\n      \"Postgres-sql\",\r\n      \"Firebase\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Source Control\",\r\n    description: [\r\n      \"GitHub\"\r\n    ],\r\n  },\r\n];\r\n\r\n\r\n\r\nexport type Category = \"react\" | \"nextjs\" | \"typescript\" | \"flask\" | \"django\" | \"mongo\" | \"main-projects\" ;\r\nexport interface ProjectInterface {\r\n  id:number;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  deployed_url: string;\r\n  deployed_url_icon: string;\r\n  github_url: string;\r\n  category: Category[];\r\n  key_techs: string[];\r\n}\r\n\r\nexport interface ResumeDataInterface {\r\n  id: number;\r\n  about_me: string;\r\n  education_details: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      institute_name:string;\r\n      institute_link:string;\r\n      date: string;\r\n      description: string; \r\n      about_me: number;\r\n    }\r\n  ];\r\n  work_expereinces: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      date: string;\r\n      description: string; \r\n      deployed_url:string;\r\n      github_url:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skills: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      description: string; \r\n      icon:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skill_capabilities: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      category: string[]; \r\n      about_me: number;\r\n    }\r\n  ];\r\n} \r\n\r\nexport const resumeData: ResumeDataInterface[] = [\r\n  {\r\n      \"id\": 1,\r\n      \"about_me\": \"Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.d programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.\",\r\n      \"education_details\": [\r\n          {\r\n            \"id\": 1,\r\n            \"title\": \"Full-Stack Web developer\",\r\n            \"institute_name\": \"Code Institute\",\r\n            \"institute_link\": \"https://www.codeinstitute.net/\",\r\n            \"date\": \"Dec-2019 - -Dec-2020\",\r\n            \"description\": \"Full-Stack Web developer\",\r\n            \"about_me\": 1\r\n          }\r\n      ],\r\n      \"work_expereinces\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Kirk Of the Holy Rood\",\r\n            \"date\": \"Jan-2021 - April-2021\",\r\n            \"description\": \"Python Django application, admin can manage all content including adding removing ministry section pages\",\r\n            \"deployed_url\": \"www.github.com\",\r\n            \"github_url\": \"www.github.com\",\r\n            \"about_me\": 1\r\n        }\r\n      ],\r\n      \"skills\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"React Skills\",\r\n            \"description\": \"I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql, and Redux. I have built the site using next.js, Gatsby. I have beginner's understanding of Typescript. My current resume site is built using react typescript and all typescripts types are written by me with my knowledge.\",\r\n            \"icon\": \"IoLogoReact\",\r\n            \"about_me\": 1\r\n        }\r\n    ],\r\n    \"skill_capabilities\": [\r\n      {\r\n          \"id\": 1,\r\n          \"title\": \"Frontend\",\r\n          \"category\": [\r\n              \"ReactJs\",\r\n              \"JavaScript\",\r\n              \"TypeScript\",\r\n              \"Bootstrap\",\r\n              \"Material UI\"\r\n          ],\r\n          \"about_me\": 1\r\n      }\r\n  ],\r\n      \r\n      \r\n  },\r\n]\r\n\r\n","// Material UI Icons import\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n// React Icons import\r\nimport { IoLogoReact, IoLogoPython, IoLogoVercel, IoLogoFirebase } from \"react-icons/io5\";\r\nimport { FiDatabase } from \"react-icons/fi\";\r\nimport { FaGit } from \"react-icons/fa\";\r\nimport { GrHeroku } from \"react-icons/gr\";\r\nimport { SiNetlify } from \"react-icons/si\";\r\n\r\n\r\nconst getIcon = (icon:string | undefined): JSX.Element => {\r\n  switch(icon) {\r\n    case 'WorkIcon':\r\n      return (<WorkIcon className=\"SVG\" />);\r\n    case 'SchoolRoundedIcon':\r\n      return (<SchoolRoundedIcon className=\"SVG\" />);\r\n    case 'FacebookIcon':\r\n      return (<FacebookIcon className=\"SVG\" />);\r\n    case 'TwitterIcon':\r\n      return (<TwitterIcon className=\"SVG\" />);\r\n    case 'LinkedInIcon':\r\n      return (<LinkedInIcon className=\"SVG\" />);\r\n    case 'GitHubIcon':\r\n      return (<GitHubIcon />);\r\n    case 'IoLogoPython':\r\n      return (<IoLogoPython />);\r\n    case 'CloseIcon':\r\n      return (<CloseIcon />);\r\n    case 'IoLogoReact':\r\n      return (<IoLogoReact />);\r\n    case 'FiDatabase':\r\n      return (<FiDatabase />);\r\n    case 'FaGit':\r\n      return (<FaGit />);\r\n    case 'GrHeroku':\r\n      return (<GrHeroku />);\r\n    case 'IoLogoVercel':\r\n      return (<IoLogoVercel />);\r\n    case 'IoLogoFirebase':\r\n      return (<IoLogoFirebase />);\r\n    case 'SiNetlify':\r\n      return (<SiNetlify />);\r\n    case 'SendIcon':\r\n      return (<SendIcon />);\r\n    case 'SearchIcon':\r\n      return (<SearchIcon />);\r\n    default:\r\n      return (<small>No Icon Found</small>);\r\n  }\r\n};\r\n\r\nexport default getIcon;","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Button } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './Button.css';\r\n\r\ninterface buttonInterface {\r\n  text: string;\r\n  icon: JSX.Element | null;\r\n}\r\n\r\nconst CustomButton = ({text, icon}: buttonInterface) => {\r\n  return (\r\n    <Button \r\n      className='custom_btn' \r\n      endIcon={\r\n        icon ? (\r\n          <div className=\"btn_icon_container\">{icon}</div>\r\n          ): null }>\r\n        <span className='btn_text'>{text}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CustomButton","import React from 'react';\r\n\r\n// Typescript imports\r\nimport { socials } from '../../utils/types';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\n// Get icon helper function\r\nimport getIcon from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { HomeRounded, Telegram } from '@material-ui/icons';\r\nimport CustomButton from '../Button/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\n// css imports\r\nimport './Header.css';\r\n\r\nconst Header = (props: RouteComponentProps) => {\r\n\r\n  const pathName = props?.location?.pathname;\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" sticky='top' className='header'>\r\n      <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n        <Navbar.Brand className='header_home'>\r\n          <HomeRounded className=\"SVG\" />\r\n        </Navbar.Brand>\r\n      </Nav.Link>\r\n      {/* Only visible on mobile devices */}\r\n      <div className=\"mobile_social_icons\">\r\n        {\r\n          socials.map((social) => (\r\n            <a\r\n              key={social.icon}\r\n              href={social.link}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >{getIcon(social.icon)}</a>\r\n          ))}\r\n      </div>\r\n\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse className=\"navbar_collapse\">\r\n        <Nav className='header_left'>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/'\r\n            className={pathName === \"/\" ? \"header_link_active\" : \"header_link\"}          \r\n          >Resume\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/portfolio'\r\n            className={pathName === \"/portfolio\" ? \"header_link_active\" : \"header_link\"}\r\n          >Portfolio\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/blog'\r\n            className={pathName === \"/blog\" ? \"header_link_active\" : \"header_link\"}\r\n          >Blog\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            as={NavLink}\r\n            to='/GitPage'\r\n            className={pathName === \"/GitPage\" ? \"header_link_active\" : \"header_link\"}\r\n          >Git\r\n          </Nav.Link>\r\n        </Nav>\r\n        {/* Only visible on desktop */}\r\n        <div className='header_right'>\r\n          {\r\n            socials.map((social) => (\r\n              <a\r\n                key={social.icon}\r\n                href={social.link}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"not-show-on-smaller-screen\"\r\n              >{getIcon(social.icon)}</a>\r\n            ))}\r\n          <CustomButton text={'Hire me'} icon={<Telegram />} />\r\n        </div>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './Timeline.css'\r\n\r\ninterface timeLineProps {\r\n  title: string;\r\n  icon:any;\r\n  children: any;\r\n}\r\n\r\nconst CustomTimeline = ({ title, icon, children }: timeLineProps ) => {\r\n  return (\r\n    <Timeline className='timeline'>\r\n      <TimelineItem className={'timeline_firstItem'}>\r\n        <TimelineSeparator>\r\n          <TimelineDot className={'timeline_dot_header'}>\r\n            {icon}\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography variant='h6' className={'timeline_header'}>\r\n            {title}\r\n          </Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>      \r\n      {children}\r\n    </Timeline>\r\n \r\n  )\r\n};\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n  <TimelineSeparator className={'separator_padding'}>\r\n    <TimelineDot variant={'outlined'} className={'timeline_dot'} />    \r\n    <TimelineConnector />\r\n  </TimelineSeparator>\r\n)\r\n\r\nexport default CustomTimeline\r\n","export default __webpack_public_path__ + \"static/media/ash.b620187d.jpg\";","import React from 'react';\r\n\r\n// Typescript imports\r\nimport { profile, socials } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core'\r\nimport CustomTimeLine, { CustomTimelineSeparator } from '../Timeline/Timeline';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomButton from '../Button/Button'\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n// css and Images imports\r\nimport profileImage from '../../assets/images/ash.jpg';\r\nimport './profile.css';\r\n\r\ninterface customTimelinechildren {\r\n  title: string;\r\n  text: string;\r\n  link: string | null;\r\n}\r\n\r\n// Custom timeline copmponent to show socail icons in sidebar section \r\nconst CustomTimelineItem = ({title, text, link}: customTimelinechildren) => (\r\n  <TimelineItem>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent>\r\n      {link ? (\r\n      <Typography className=\"timelineItem_text\">\r\n        <span>{title}:</span>{\" \"}\r\n        <a href={link} target='_blank' rel='noreferrer'>\r\n          {text}\r\n        </a>        \r\n      </Typography>\r\n      ) : (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}: </span>{text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n)\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className='profile container_shadow'>\r\n      <div className='profile_name'>\r\n        <Typography className='name'>{profile.name}</Typography>\r\n        <Typography className='title'>{profile.title}</Typography>\r\n      </div>\r\n\r\n      <figure className='profile_image'>\r\n        <img src={profileImage} alt=\"\" />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeLine title={''} icon={<ImageSearchIcon className=\"SVG\"/>}  >\r\n          <CustomTimelineItem title='Mobile' text='0739-732-5523' link=\"\"/>\r\n          <CustomTimelineItem title='Email' text={profile.email} link=\"\"/>\r\n          <CustomTimelineItem title='Address' text='Falkirk Scotland' link=\"\"/>\r\n          {\r\n            socials.map((social) => (\r\n              <CustomTimelineItem \r\n                key={social.title}\r\n                title={social.title} \r\n                text={social.text} \r\n                link={social.link} \r\n              />\r\n            ))\r\n          }\r\n        </CustomTimeLine>\r\n        <div className='button-container'>\r\n          <CustomButton text={\"Download Cv\"} icon={< GetAppIcon />}/>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { Grid, Paper } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nconst Blog = () => {\r\n  \r\n  return (\r\n  \r\n      <Grid container spacing={1}>  \r\n        <Grid container item xs={12} spacing={1}>\r\n\r\n          <Grid item xs={2} >\r\n            <Paper>item</Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={2} >\r\n            <Paper>item</Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={2} >\r\n            <Paper>item</Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={2} >\r\n            <Paper>item</Paper>\r\n          </Grid>\r\n        </Grid> \r\n        </Grid>\r\n  \r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './SiteTitle.css';\r\n\r\nconst SiteTitle:FunctionComponent<{title: string}> = ({title}) => {\r\n  return (\r\n    <Grid item className=\"section_title mb_30\">\r\n      <span></span>\r\n      <h6 className='section_title_text'>{title}</h6>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n","import React, { useState, useEffect, FunctionComponent } from 'react'; \r\n\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Avatar, Box, Button, Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Grid, IconButton, Paper, TextField, Typography, } from '@material-ui/core';\r\n\r\n// css imports\r\nimport './GitApi.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Form, Image, ListGroup } from 'react-bootstrap';\r\nimport { red } from '@material-ui/core/colors';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n});\r\n\r\nconst GitApi = () => {\r\n  const [name, setName] = useState<string>('');\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [followers, setFollowers] = useState<string>('');\r\n  const [following, setFollowing] = useState<string>('');\r\n  const [repos, setRepos] = useState<string>('');\r\n  const [avatar, setAvatar] = useState<string>('');  \r\n  const [term, setTerm] = useState<string>('ashur-k');\r\n  \r\nconst [reposInfo, setReposInfo] = useState<any>([]);\r\n\r\ninterface GitUserData{\r\n  name: string;\r\n  login: string;\r\n  followers: string;\r\n  following: string;\r\n  public_repos: string;\r\n  avatar_url: string;\r\n\r\n}\r\n  // UseEffect to update data\r\n  useEffect(() => {  \r\n    async function fetchGitUsers(){ \r\n      try {\r\n        const result = await axios(`https://api.github.com/users/${term}`)\r\n\r\n        setData(result.data)\r\n      }catch(err){\r\n        console.log(\"USER Fetch ERROR:\", err)\r\n      }\r\n    }\r\n    async function fetchGitRepos(){\r\n  \r\n      try {\r\n        const result:any = await axios(`https://api.github.com/users/${term}/repos`)\r\n        setReposInfo(result.data)\r\n\r\n      }catch(err){\r\n        console.log(\"Repo Fetch ERROR:\", err)\r\n      }\r\n    }  \r\n  fetchGitUsers()\r\n  fetchGitRepos()   \r\n    \r\n  },[term]);\r\n  \r\n\r\n\r\n \r\n  const setData= ({ name, login, followers, following, public_repos, avatar_url }:GitUserData) => {\r\n    setName(name)\r\n    setUserName(login)\r\n    setFollowers(followers)\r\n    setFollowing(following)\r\n    setRepos(public_repos)\r\n    setAvatar(avatar_url)\r\n  }\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  return (\r\n    <div style={{width:\"100%\"}}>\r\n      <Grid item xs={12}>\r\n        <Grid container \r\n          spacing={3}            \r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          className=\"section\"\r\n          >       \r\n            \r\n        </Grid>\r\n        <Grid \r\n          container \r\n          spacing={3} \r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"> \r\n          <Grid item xs={12} >\r\n            <Card className={classes.root}>\r\n                  <CardHeader\r\n                      avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                          {getIcon('FaGit')}\r\n                        </Avatar>\r\n                      }\r\n                      title={name}\r\n                      subheader={userName}\r\n                    />\r\n                    <CardActionArea>\r\n                      <Image\r\n                        rounded\r\n                        thumbnail\r\n                        src={avatar}\r\n                        alt={name}\r\n                      />\r\n                      <CardContent>\r\n                      \r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                        Followers: {followers}\r\n                      </Typography>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">              \r\n                        Following: {following}\r\n                      </Typography>\r\n                      <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                        Repos: {repos}\r\n                      </Typography>              \r\n                  </CardActions>\r\n                </Card>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={0}>  \r\n            <div className=\"repositoriesTitle\"> \r\n            <TextField \r\n              label=\"Search\"\r\n              value={term} \r\n              fullWidth\r\n              onChange={e => setTerm(e.target.value)}     \r\n              className=\"searchInputField\"\r\n              \r\n              />\r\n              </div>\r\n\r\n          \r\n              <Grid container item xs={12} spacing={1}>\r\n             \r\n            {\r\n              reposInfo.map((repo:any) => (  \r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noreferrer\">\r\n                  <Paper className=\"repoName-Paper\" elevation={3} >\r\n                    {repo.name}\r\n                  </Paper>\r\n                  </a>\r\n                </Grid>\r\n              ))\r\n            }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        \r\n        </Grid>\r\n      </Grid>\r\n    </div>  \r\n  \r\n  )\r\n}\r\nexport default GitApi\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\n\r\nimport GitApi from '../../components/GitHubApi/GitApi';\r\nimport './GitPage.css';\r\n\r\nfunction GitPage() {\r\n\r\n  return (\r\n    // Contact\r\n    <Grid container className=\"section pb_45 pt_45\">\r\n      <Grid container item xs={12} spacing={3} >\r\n        {/* Git Information */}\r\n        <Grid item xs={12} className=\"top_30\">\r\n          <SiteTitle title='Git Information' />\r\n          <GitApi />\r\n        </Grid>\r\n      </Grid>  \r\n    </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default GitPage","export const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST'\r\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS'\r\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL'\r\n\r\n\r\nexport enum ActionType {\r\n  PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST',\r\n  PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS',\r\n  PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL',\r\n}","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ActionType } from '../constants/projectConstants';\r\n\r\nimport { Action } from '../interfaces/interfaces';\r\n//import { ProjectInterface } from '../../utils/resumeData';\r\n\r\nexport const listProjects = () => async (dispatch:  Dispatch<Action>) => {\r\n\r\n   try {\r\n      dispatch({ type: ActionType.PROJECT_LIST_REQUEST })\r\n\r\n      const { data } = await axios.get('/api/projects/');\r\n\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n\r\n   } catch (error) {\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_FAIL,\r\n        payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n      })\r\n   }\r\n }\r\n","export enum ActionType {\r\n  RESUME_LIST_REQUEST = 'RESUME_LIST_REQUEST',\r\n  RESUME_LIST_SUCCESS = 'RESUME_LIST_SUCCESS',\r\n  RESUME_LIST_FAIL = 'RESUME_LIST__FAIL',\r\n}","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import { FunctionComponent } from \"react\";\r\n\r\n// Typescript imports\r\nimport { Category } from '../../utils/types';\r\n\r\n// css imports\r\nimport './ProjectNavbarItem.css';\r\n\r\n\r\nexport const ProjectNavbarItems:FunctionComponent<{\r\n  value: Category | \"all\"; \r\n  handlerFilterCategory: Function;  \r\n  active: string;\r\n  }> = ({value, handlerFilterCategory, active }) => {\r\n      let className = \"project-navbar-item hover:text-green\";\r\n      if (active === value) {\r\n        className += \" text-green\"\r\n      };\r\n    return (\r\n      <li className={className} onClick={() => handlerFilterCategory(value)}>\r\n        {value}\r\n      </li>\r\n    );\r\n  };","import { FunctionComponent } from \"react\";\r\n\r\n// Custom components import\r\nimport { ProjectNavbarItems } from '../ProjectNavbarItem/ProjectNavbarItem';\r\n\r\n// css imports\r\nimport './ProjectNavbar.css';\r\n\r\nconst ProjectsNavbar: FunctionComponent<{\r\n    handlerFilterCategory: Function;\r\n    active: string;\r\n  }> = (props) => {\r\n    return (\r\n      <div className=\"Project-navbar-main\">\r\n        <ProjectNavbarItems value=\"all\" {...props} />\r\n        <ProjectNavbarItems value=\"react\" {...props} />\r\n        <ProjectNavbarItems value=\"mongo\" {...props} />\r\n        <ProjectNavbarItems value=\"django\" {...props} />\r\n        <ProjectNavbarItems value=\"nextjs\" {...props} />\r\n        <ProjectNavbarItems value=\"typescript\" {...props} />\r\n        <ProjectNavbarItems value=\"main-projects\" {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ProjectsNavbar;","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ProjectInterface  } from '../../utils/types';\r\n\r\n// Get icon helper function\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI components import\r\nimport { Grid, Icon, Typography } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Image } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomButton from '../Button/Button'\r\n\r\n// css imports\r\nimport './ProjectDialog.css';\r\n\r\nconst ProjectDialog:FunctionComponent<{\r\n  projectDialog: null | ProjectInterface;\r\n  open: boolean;\r\n  onClose:(val: boolean) => void;\r\n}> = ({ projectDialog, open, onClose } ) => {\r\n\r\n  return (\r\n    <Dialog \r\n      className=\"projectDialog\" \r\n      fullWidth \r\n      open={open} \r\n      onClose={() => onClose(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\">\r\n      \r\n      <p className=\"dialogClose_button\"  onClick={() => onClose(false)}>\r\n        <Icon>{getIcon('CloseIcon')}</Icon>\r\n      </p>      \r\n\r\n      <DialogTitle className=\"projectDialog_title\" id=\"alert-dialog-title\">{projectDialog?.name}</DialogTitle>\r\n        \r\n        <Image src={projectDialog?.image} rounded fluid alt={projectDialog?.name} />\r\n        <DialogContent id=\"alert-dialog-description\">\r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Description:\r\n          </Typography>\r\n          <Typography variant=\"body2\" className=\"projectDialog_description\">\r\n            {projectDialog?.description}\r\n          </Typography>          \r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Key Techs:\r\n          </Typography>\r\n            <div>\r\n              <Grid container spacing={1}>  \r\n                <Grid container item xs={12} spacing={1}>\r\n                  {\r\n                    projectDialog?.key_techs.map((item) => (\r\n                      <Grid key={item} item xs={2} >\r\n                        <Typography className=\"key-tech-items\" variant=\"body2\">{item}</Typography>\r\n                      </Grid> \r\n                  ))\r\n                  }\r\n                </Grid> \r\n              </Grid>\r\n            </div>\r\n         </DialogContent>\r\n          <DialogActions className=\"projectDialog_actions\">\r\n            <a href={projectDialog?.github_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Codes on Github\" \r\n                icon={getIcon('GitHubIcon')}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n            <a href={projectDialog?.github_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Live Hosted Site\" \r\n                icon={getIcon(projectDialog?.deployed_url_icon)}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\nexport default ProjectDialog\r\n","import React, { useState, useEffect } from 'react';\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { listProjects } from '../../redux/actions/projectActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { Category, ProjectInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport {  Card, CardActionArea, CardContent, Grid, Grow, Typography } from '@material-ui/core';\r\nimport { Image } from 'react-bootstrap';\r\n// Custom components import\r\nimport ProjectsNavbar  from '../../components/ProjectNabar/ProjectNavbar';\r\nimport ProjectDialog from '../../components/ProjectDialog/ProjectDialog';\r\n\r\n// css imports\r\nimport './Portfolio.css';\r\n\r\n\r\nconst Portfolio = () => {\r\n  const dispatch = useDispatch();\r\n   \r\n  const {error, loading, projects} =  useTypedSelector(\r\n      (state) => state.projectList\r\n    );\r\n  const [projectsData, setProjectsData] = useState<ProjectInterface[]>([]);  \r\n\r\n  const [projectDialog, setProjectDialog] = useState<null|ProjectInterface>(null);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  // UseEffect to dispatch listProjects action\r\n  useEffect(() => {\r\n    dispatch(listProjects())\r\n  },[dispatch]);\r\n\r\n  // UseEffect to update data to ProjectsData\r\n  useEffect(() => {     \r\n    setProjectsData(projects)\r\n  },[projects]);\r\n\r\n  // Filtering sytem for Project Navbar\r\n  const handleFilterCategory = (category: Category | 'all') => {\r\n    if(category === \"all\"){\r\n      setProjectsData((projects))\r\n      setActive(category);\r\n      return;\r\n    }\r\n    const newArray = projects.filter((filteredProject)=> \r\n      filteredProject.category.includes(category)\r\n    );\r\n    setProjectsData(newArray);\r\n    setActive(category);\r\n    }\r\n  \r\n  // State to handel project dialog\r\n  const [open, setOpen] = React.useState(false);\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <Grid className=\"section pb_45 pt_45\">\r\n      <div>\r\n        {/* Title */}\r\n        <Grid item className=\"section_title mb_20\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Portfolio</h6>\r\n        </Grid>\r\n\r\n        {/* Project Navbar */}\r\n        <Grid item xs={12}>\r\n          <ProjectsNavbar\r\n            handlerFilterCategory={handleFilterCategory}\r\n            active={active}\r\n          />\r\n        </Grid>\r\n        <Grid container spacing={1}>  \r\n          <Grid container item xs={12} spacing={1}>            \r\n            {loading\r\n              ? (<h3>Loading...</h3>)\r\n              : error \r\n              ? (<h3>{error}</h3>)\r\n              : (\r\n                projectsData.map((project) => (     \r\n                <Grid key={project.id} item xs={12} sm={6}>           \r\n                      <div>\r\n                    <Grow in timeout={1000}>\r\n                      <Card\r\n                        className='customCard' \r\n                        onClick={() => {setProjectDialog(project); setOpen(true)}}\r\n                      >\r\n                        <CardActionArea>\r\n                          <Image src={project.image} rounded thumbnail alt={project.name} /> \r\n                          <CardContent>\r\n                            <Typography className='customCard_title'>\r\n                              {project.name}\r\n                            </Typography>\r\n                            <Typography variant='body2' className='customCard_description'>\r\n                              {project.description}\r\n                            </Typography> \r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>                                         \r\n                    </Grow>\r\n                    \r\n                    </div>                  \r\n                </Grid>\r\n              )))}              \r\n          </Grid> \r\n        </Grid>      \r\n      </div>   \r\n      <ProjectDialog projectDialog={projectDialog} open={open} onClose={closeDialog} />   \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Portfolio;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ActionType } from '../constants/resumeConstants';\r\n\r\n\r\nexport const listAboutme = () => async (dispatch: Dispatch<Action>) => {\r\n  try{\r\n    dispatch({ type: ActionType.RESUME_LIST_REQUEST})\r\n    const { data } = await axios.get('/api/about_me/');\r\n\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n    })\r\n  }\r\n}","import React, { FunctionComponent } from 'react';\r\n// Redux imports\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './WorkExpreience.css'\r\n\r\nconst WorkExpreience:FunctionComponent<{\r\n  work_expereinces:ResumeDataInterface[\"work_expereinces\"];\r\n}> = ({ work_expereinces }) => {\r\n  return (       \r\n      <CustomTimeline \r\n        title='Work Experience'\r\n        icon={getIcon('WorkIcon')}\r\n        >\r\n        {work_expereinces.map((experience) => (\r\n          <TimelineItem key={experience.id}>\r\n            <CustomTimelineSeparator />\r\n            <TimelineContent className='timeline_content'>\r\n              <Typography className=\"timeline_title\">{experience.title}</Typography>\r\n              <Typography variant='caption' className=\"timeline_date\">{experience.date}</Typography>\r\n              <Typography variant='body2' className=\"timeline_description\">{experience.description}</Typography>\r\n              <div className=\"timeline_links\">\r\n                <Typography variant='body2' className=\"timeline_links-typography\">\r\n                  <a href={experience.deployed_url} target=\"_black\" rel=\"noreferrer\">Live Site</a>                        \r\n                </Typography>\r\n                <Typography variant='body2' className=\"timeline_links-typography\">                \r\n                  <a href={experience.github_url} target=\"_black\" rel=\"noreferrer\"> Codes on Git</a>      \r\n                </Typography>\r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </CustomTimeline>\r\n    \r\n  )\r\n}\r\n\r\nexport default WorkExpreience\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// import { education } from '../../utils/types';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './Education.css'\r\n\r\n\r\nconst Education:FunctionComponent<{\r\n  education_details:ResumeDataInterface[\"education_details\"];\r\n}> = ({education_details}) => {\r\n  return (\r\n    <CustomTimeline \r\n      title='Education'\r\n      icon={getIcon('SchoolRoundedIcon')}\r\n      >\r\n      {education_details.map((edu) => (\r\n        <TimelineItem key={edu.id}>\r\n          <CustomTimelineSeparator />\r\n          <TimelineContent className='timeline_content'>\r\n            <Typography className=\"timeline_title\">\r\n              <span>{edu.title}</span> \r\n              <span> from </span> \r\n              <span>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 250, hide: 400 }}\r\n                overlay={<Tooltip id=\"button-tooltip-2\">Check out Institute Link</Tooltip>}\r\n              >         \r\n                <a href={edu.institute_link} className=\"education_link\" target=\"_black\" rel=\"noreferrer\">\r\n                    {edu.institute_name}                 \r\n                </a>\r\n              </OverlayTrigger>\r\n              </span>                              \r\n            </Typography>\r\n            <Typography variant='caption' className=\"timeline_date\">{edu.date}</Typography>\r\n            <Typography variant='body2' className=\"timeline_description\">{edu.description}</Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      ))}\r\n    </CustomTimeline>\r\n  )\r\n}\r\n\r\nexport default Education\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Icon, Typography } from '@material-ui/core';\r\nimport { Card, CardGroup } from 'react-bootstrap';\r\n\r\n// css imports\r\nimport './CardComponent.css';\r\n\r\nexport const CardComponent:FunctionComponent<{\r\n  icon: string;\r\n  title: string;\r\n  description: string;\r\n}> = ({icon, title, description}) => {\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n      <div className=\"service\">                    \r\n        <Icon className=\"service_icon\" style={{margin:'12px', paddingBottom:\"50px\"}}>\r\n          {getIcon(icon)}\r\n        </Icon>\r\n        <Card.Body>        \r\n          <Typography className=\"service_title\" variant='h6'>\r\n            {title}\r\n          </Typography>          \r\n          <Typography className=\"service_description\" variant='body2'>\r\n            {description}\r\n          </Typography>          \r\n        </Card.Body>\r\n        </div>\r\n      </Card>\r\n    </CardGroup>  \r\n  )\r\n}\r\n\r\n\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Custom components import\r\nimport { CardComponent } from '../Card/CardComponent';\r\n\r\n// css imports\r\nimport './Skills.css'\r\n\r\nconst Skills:FunctionComponent<{\r\n  skills:ResumeDataInterface[\"skills\"];\r\n}> = ({ skills }) => {\r\n  return (\r\n    <Grid container spacing={3} justifyContent='space-around'>\r\n      {skills.map((skill) => (\r\n        <Grid key={skill.id} item sm={12} md={4}>          \r\n          <CardComponent \r\n            icon={skill.icon} \r\n            title={skill.title} \r\n            description={skill.description} \r\n          />      \r\n        </Grid>\r\n      ))}\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { FunctionComponent }  from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport {  ResumeDataInterface } from '../../utils/types';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\n// css imports\r\nimport './SkillsCapabilities.css'\r\n\r\nconst SkillsCapabilities:FunctionComponent<{\r\n  skillCapabilities:ResumeDataInterface[\"skill_capabilities\"];\r\n}> = ({ skillCapabilities }) => {\r\n  return (\r\n    <Grid \r\n      container\r\n      justifyContent='space-between' \r\n      className=\"section graybg pb_45 p_50\"\r\n    >\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent=\"space-between\" spacing={3}>\r\n          {skillCapabilities.map((skill) => (\r\n            <Grid key={skill.id} item xs={12} sm={6} md={3} >\r\n              <Paper elevation={0} className='skill'>\r\n                <Typography variant='h6' className=\"skills_title\">\r\n                  {skill.title}\r\n                </Typography>\r\n                {skill.category.map((element) => (\r\n                  <Typography key={element} variant='body2' className='skill_description'>\r\n                    <TimelineDot variant='outlined' className='timeline_dot'/>{element}\r\n                  </Typography>\r\n                ))}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SkillsCapabilities\r\n","import React from 'react';\r\n\r\n// Typescript and data imports\r\nimport { socials } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\nimport { Grid, Typography, TextField } from '@material-ui/core';\r\n\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\nimport CustomButton from '../../components/Button/Button';\r\n\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Grid container className=\"section pb_45 pt_45\">\r\n      <Grid container item xs={12} spacing={3} >\r\n        {/* Contact Form */}\r\n          <Grid item xs={12} lg={8}>\r\n            <Grid container>\r\n              <SiteTitle title='Contact Form' />\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField fullWidth name=\"name\" label=\"Name\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField fullWidth name=\"email\" label=\"E-mail\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField fullWidth name=\"message\" label=\"Your Message\" multiline rows={2} />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomButton text=\"Submit\" icon={getIcon('SendIcon')} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={4}>\r\n            <Grid container>\r\n              <SiteTitle title='Contact Information' />\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Address:</span> Falkirk Scotland\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Phone:</span> 0739-732-5523\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography className='ContactInfo_items'>\r\n                    <span>Email:</span> ashurkanwal@yahoo.com\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                  {socials.map((social) => (\r\n                    <Grid className=\"contactSocail-icons\">\r\n                      <a\r\n                        key={social.icon}\r\n                        href={social.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {getIcon(social.icon)}\r\n                      </a>\r\n                    </Grid>\r\n                  ))}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>              \r\n            </Grid>\r\n          </Grid>\r\n      </Grid>  \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useState, useEffect} from 'react';\r\n\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { listAboutme } from '../../redux/actions/resumeActions';\r\n\r\n// Typescript imports\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Alert, Spinner } from 'react-bootstrap';\r\n\r\n// Custom components import\r\nimport WorkExpreience from '../../components/WorkExpreience/WorkExpreience';\r\nimport Education from '../../components/Education/Education';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsCapabilities from '../../components/SkillsCapabilities/SkillsCapabilities';\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\nimport Contact from '../../components/Contact/Contact';\r\n\r\n// css imports\r\nimport './Resume.css';\r\n\r\n\r\nconst Resume = () => {\r\n  const dispatch = useDispatch()\r\n  const {error, loading, aboutme} = useTypedSelector((state) => state.resumeList);\r\n  \r\n  // React UseStates\r\n  const [aboutMeText, setAboutMeText] = useState<string>(\"\");\r\n  const [education, setEducation] = useState<ResumeDataInterface[\"education_details\"] | any>([]);\r\n  const [work, setWork] = useState<ResumeDataInterface[\"work_expereinces\"] | any>([]);\r\n  const [skills, setSkills] = useState<ResumeDataInterface[\"skills\"] | any>([]);\r\n  const [skillCapabilities, setSkillCapabilities] = useState<ResumeDataInterface[\"skill_capabilities\"] | any>([]);\r\n\r\n // React UseEffects\r\n  useEffect(() => {\r\n    dispatch(listAboutme())\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    aboutme.map((me) => (\r\n      // eslint-disable-next-line no-sequences\r\n      setAboutMeText(me.about_me),\r\n      setEducation(me.education_details),\r\n      setWork(me.work_expereinces),\r\n      setSkills(me.skills),\r\n      setSkillCapabilities(me.skill_capabilities)\r\n    ))\r\n  }, [aboutme]);\r\n \r\n  return (\r\n    <div>\r\n      {\r\n        loading ? \r\n        (<Grid container className=\"section pb_45 pt_45\">\r\n          <Spinner animation=\"border\" variant=\"danger\" />\r\n        </Grid>)\r\n        : error ?\r\n        (\r\n        <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>)\r\n        :(<div>       \r\n          {/* About Me */}\r\n          <Grid container className=\"section pb_45 pt_45\">\r\n            { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n            <SiteTitle title='About Me' />\r\n\r\n            <Grid item xs={12}>        \r\n              <Typography variant='body2' className=\"aboutme_text\">\r\n                {aboutMeText}\r\n              </Typography>      \r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Education and Experience */}\r\n          <Grid container className=\"section pb_45\">\r\n            <SiteTitle title='Resume' />\r\n            <Grid item xs={12}>\r\n              <Grid container className='resume_timeline'>\r\n                {/* Education  */}\r\n                <Grid item sm={12} md={6}>    \r\n                  { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}        \r\n                  <Education education_details={education}/>\r\n                </Grid>\r\n                {/* Experience */}\r\n                <Grid item sm={12} md={6}>\r\n                  { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n                  <WorkExpreience work_expereinces={work} /> \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Services */}\r\n          <Grid container className=\"section pb_45\">        \r\n            <SiteTitle title='My Skills' />\r\n            <Grid item xs={12}>\r\n            { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n              <Skills skills={skills}/>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Skills */}\r\n          \r\n            <SkillsCapabilities skillCapabilities={skillCapabilities} />      \r\n            <Contact />           \r\n          </div>\r\n        )\r\n      } \r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Resume","import { Container, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport Profile from './components/Profile/Profile';\nimport Blog from './pages/Blog/Blog';\nimport GitPage from './pages/GitPage/GitPage';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport Resume from './pages/Resume/Resume';\n\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className=\"main-content container_shadow\">\n              <Switch>\n                <Route path=\"/portfolio\">\n                  <Portfolio />\n                </Route>\n                <Route path=\"/blog\">\n                  <Blog />\n                </Route>\n                <Route path=\"/GitPage\">\n                  <GitPage />\n                </Route>\n                <Route path=\"/\">\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>            \n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from '../constants/projectConstants';\r\nimport { Action } from '../interfaces/interfaces';\r\n\r\nimport { ProjectInterface } from '../../utils/types'\r\n\r\n interface ProjectReducerInterface {\r\n   loading: boolean;\r\n   error: string | null;\r\n   projects: ProjectInterface[];\r\n };\r\n\r\n const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  projects: [],\r\n};\r\n\r\nexport const projectListReducer = (\r\n  state:ProjectReducerInterface = initialState, \r\n  action: Action):ProjectReducerInterface  => {\r\n  switch (action.type) {\r\n    case ActionType.PROJECT_LIST_REQUEST:\r\n      return { loading: true, error: null, projects: [] };\r\n\r\n    case ActionType.PROJECT_LIST_SUCCESS:\r\n      return { loading: false, error: null, projects: action.payload };\r\n\r\n    case ActionType.PROJECT_LIST_FAIL:\r\n      return { loading: false, error: action.payload, projects: [] };\r\n    \r\n    default:\r\n      return state\r\n}\r\n}","import { ActionType } from  '../constants/resumeConstants';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ResumeDataInterface } from '../../utils/types'\r\n\r\ninterface ResumeReducerInterface {\r\n  loading: boolean;\r\n  error: string | null;\r\n  aboutme: ResumeDataInterface[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  aboutme: [],\r\n};\r\n\r\nexport const resumeListReducer = (\r\n  state:ResumeReducerInterface = initialState, \r\n  action:Action):ResumeReducerInterface => {\r\n  switch(action.type){\r\n    case ActionType.RESUME_LIST_REQUEST:\r\n      return {loading:true, error: null, aboutme: [] }\r\n    case ActionType.RESUME_LIST_SUCCESS:\r\n      return {loading:false, error: null, aboutme: action.payload }\r\n    case ActionType.RESUME_LIST_FAIL:\r\n      return {loading:false, error: action.payload, aboutme: []}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { projectListReducer } from './redux/reducers/projectReducers';\r\nimport { resumeListReducer } from './redux/reducers/resumeReducers'\r\n\r\nconst reducers = combineReducers({\r\n  projectList: projectListReducer,\r\n  resumeList: resumeListReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducers, initialState,\r\n   composeWithDevTools(applyMiddleware(...middleware )));\r\n\r\n  \r\nexport default store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["redux/constants/projectConstants.ts","components/Footer/Footer.tsx","components/Button/Button.tsx","utils/types.ts","helperFunctions/getIcon.tsx","components/Header/Header.tsx","assets/images/ash.jpg","components/Timeline/Timeline.tsx","components/Profile/Profile.tsx","pages/Blog/Blog.tsx","hooks/useTypedSelector.ts","redux/actions/projectActions.ts","redux/constants/resumeConstants.ts","components/ProjectNavbarItem/ProjectNavbarItem.tsx","components/ProjectNabar/ProjectNavbar.tsx","components/ProjectDialog/ProjectDialog.tsx","pages/Portfolio/Portfolio.tsx","redux/actions/resumeActions.ts","components/WorkExpreience/WorkExpreience.tsx","components/Education/Education.tsx","components/Card/CardComponent.tsx","components/Skills/Skills.tsx","components/SkillsCapabilities/SkillsCapabilities.tsx","components/SiteTitle/SiteTitle.tsx","pages/Resume/Resume.tsx","App.tsx","reportWebVitals.ts","redux/reducers/projectReducers.ts","redux/reducers/resumeReducers.ts","store.ts","index.tsx"],"names":["ActionType","Footer","className","Typography","Copyright","href","CustomButton","text","icon","Button","endIcon","profile","socials","title","link","getIcon","withRouter","props","pathName","location","pathname","Navbar","expand","sticky","Nav","Link","as","NavLink","to","Brand","HomeRounded","map","social","target","rel","Toggle","Collapse","Telegram","CustomTimelineSeparator","TimelineSeparator","TimelineDot","variant","TimelineConnector","CustomTimeline","children","Timeline","TimelineItem","TimelineContent","CustomTimelineItem","Profile","src","profileImage","alt","useStyles","makeStyles","theme","createStyles","root","flexGrow","paper","padding","spacing","textAlign","color","palette","secondary","Blog","classes","Grid","container","item","xs","sm","md","Paper","useTypedSelector","useSelector","ProjectNavbarItems","value","handlerFilterCategory","active","onClick","ProjectsNavbar","ProjectDialog","projectDialog","open","onClose","Dialog","fullWidth","Icon","DialogTitle","id","name","Image","image","rounded","fluid","DialogContent","description","key_techs","DialogActions","github_url","deployed_url_icon","Portfolio","dispatch","useDispatch","state","projectList","error","loading","projects","useState","projectsData","setProjectsData","setProjectDialog","setActive","useEffect","a","type","PROJECT_LIST_REQUEST","axios","get","data","PROJECT_LIST_SUCCESS","payload","PROJECT_LIST_FAIL","response","message","React","setOpen","category","newArray","filter","filteredProject","includes","project","Grow","in","timeout","Card","CardActionArea","thumbnail","CardContent","WorkExpreience","work_expereinces","experience","date","deployed_url","Education","education_details","edu","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","institute_link","institute_name","CardComponent","CardGroup","style","margin","paddingBottom","Body","Title","Text","Skills","skills","justify","skill","SkillsCapabilities","skillCapabilities","elevation","element","SiteTitle","Resume","resumeList","aboutme","aboutMeText","setAboutMeText","education","setEducation","work","setWork","setSkills","setSkillCapabilities","RESUME_LIST_REQUEST","RESUME_LIST_SUCCESS","RESUME_LIST_FAIL","me","about_me","skill_capabilities","Spinner","animation","Alert","App","Container","lg","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c2e7852.chunk.js","sourcesContent":["export const PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST'\r\nexport const PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS'\r\nexport const PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL'\r\n\r\n\r\nexport enum ActionType {\r\n  PROJECT_LIST_REQUEST = 'PROJECT_LIST_REQUEST',\r\n  PROJECT_LIST_SUCCESS = 'PROJECT_LIST_SUCCESS',\r\n  PROJECT_LIST_FAIL = 'PROJECT_LIST_FAIL',\r\n}","import { Typography } from '@material-ui/core';\r\nimport { Copyright } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer_left\">\r\n        <Typography className=\"footer_name\">Ashur Kanwal</Typography>\r\n      </div>\r\n      <div className=\"footer_right\">\r\n        <Typography className=\"footer_copyright\">\r\n          Coded by {\" \"}\r\n          <Copyright/>\r\n          <a href=\"/\">ashurkanwal@yahoo.com</a>\r\n          <br />\r\n          <a  href='/'>Ashur Kanwal 2021 Resume Site.</a>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react';\r\nimport './Button.css';\r\n\r\ninterface buttonInterface {\r\n  text: string;\r\n  icon: any | null;\r\n}\r\n\r\n\r\nconst CustomButton = ({text, icon}: buttonInterface) => {\r\n  return (\r\n    <Button \r\n      className='custom_btn' \r\n      endIcon={\r\n        icon ? (\r\n          <div className=\"btn_icon_container\">{icon}</div>\r\n          ): null }>\r\n        <span className='btn_text'>{text}</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default CustomButton","export interface profileInfo {\r\n  name: string;\r\n  title: string;\r\n  DOB: string;\r\n  email: string;\r\n  address: string;\r\n  phone: string;\r\n\r\n  socials: {\r\n    Facebook: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    Twitter: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    LinkedIn: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n    GitHub: {\r\n      link:string;\r\n      text:string;\r\n      icon: string\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const profile: profileInfo = {\r\n  name: 'Ashur Kanwal',\r\n  title: 'Full-Stack-Developer',\r\n  DOB: 'July',\r\n  email: 'ashurkanwal@yahoo.com',\r\n  address: 'Grangemouth Scotland',\r\n  phone: '07397325523',\r\n\r\n  socials:{\r\n    Facebook:{\r\n      link: 'facebook.com',\r\n      text: 'myFacebook',\r\n      icon: 'FacebookIcon',\r\n    },\r\n    Twitter:{\r\n      link: 'twitter.com',\r\n      text: 'myTwitter',\r\n      icon: 'TwitterIcon',\r\n    },\r\n    \r\n    LinkedIn:{\r\n      link: 'linkedin.com',\r\n      text: 'myLinkeIn',\r\n      icon: 'LinkedInIcon',\r\n    },\r\n    GitHub:{\r\n      link: 'github.com',\r\n      text: 'myGitHub',\r\n      icon: 'GitHubIcon',\r\n    }\r\n  }\r\n}\r\n\r\nexport interface socialsInterface {\r\n  title: string;\r\n  link: string;\r\n  text:string;\r\n  icon: string;\r\n}\r\n\r\nexport const socials: socialsInterface[] = [\r\n  {\r\n    title: 'Facebook',\r\n    link: 'https://www.facebook.com/',\r\n    text: 'myFacebook',\r\n    icon: 'FacebookIcon',\r\n  },\r\n  {\r\n    title: 'Twitter',\r\n    link: 'https://twitter.com/',\r\n    text: 'myTwitter',\r\n    icon: 'TwitterIcon',\r\n  },\r\n  {\r\n    title: 'LinkedIn',\r\n    link: 'https://www.linkedin.com/in/ashur-kanwal-37979b195/',\r\n    text: 'myLinkedIn',\r\n    icon: 'LinkedInIcon',\r\n  },\r\n  {\r\n    title: 'GitHub',\r\n    link: 'https://github.com/ashur-k',\r\n    text: 'myGitHub',\r\n    icon: 'GitHubIcon',\r\n  },\r\n]\r\n\r\ninterface ExperiencesInterface {\r\n  title: string;\r\n  date: string;\r\n  description: string;\r\n  gitLink:string;\r\n  hostLink: string;\r\n}\r\n\r\nexport const experiences:ExperiencesInterface[] = [\r\n  {\r\n    title: 'Kirk Of the Holy Rood',\r\n    date: 'Jan-2021 - April-2021',\r\n    description: 'Python django application, admin can manage all content including adding removing ministry section pages',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'RR-Clothes',\r\n    date: 'Sept-2020 - Dec-2020',\r\n    description: 'Python django E-commerce shopping site sells product including color size variants.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Car Sales Showroom',\r\n    date: 'May-2020 - August-2020',\r\n    description: 'Python flask appicaition built to manage and book car test drives.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n  {\r\n    title: 'Covid App',\r\n    date: 'Jan-2020 - April-2020',\r\n    description: 'International Rapid Covid API data where user can see covid stats of all countries.',\r\n    gitLink:\"www.github.com\",\r\n    hostLink:\"www.github.com\",\r\n  },\r\n]\r\n\r\ninterface EducationInterface {\r\n  title: string;\r\n  instituteName:string;\r\n  instituteLink:string;\r\n  date: string;\r\n  description: string; \r\n}\r\n\r\nexport const education:EducationInterface[] = [\r\n  {\r\n    title: 'Full-Stack Web developer',\r\n    instituteName: 'Code Institute',\r\n    instituteLink:'link',\r\n    date: 'Dec-2019 - -Dec-2020',\r\n    description: 'Full-Stack Web developer'\r\n  },\r\n  {\r\n    title: 'Bachelors Degree',\r\n    instituteName: 'PIMSAT',\r\n    instituteLink:'link',\r\n    date: '2017 - 2018',\r\n    description: 'Lorem Ipsum text for now'\r\n  },\r\n  {\r\n    title: 'First Line Manager Diploma',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'https://www.stockton.ac.uk/',\r\n    date: '2017 - 2018',\r\n    description: 'Management is the best I love management'\r\n  },\r\n  {\r\n    title: 'Computer Itq Graphics',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Adobe Suits and adobe suites'\r\n  },\r\n  {\r\n    title: 'Performing Arts In Music',\r\n    instituteName: 'River Side College',\r\n    instituteLink:'link',\r\n    date: '2016- 2019',\r\n    description: 'Performing art singing, dancing, and acting.'\r\n  },\r\n]\r\n\r\ninterface SkillsInterface {\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n}\r\n\r\nexport const skills: SkillsInterface[] = [\r\n  {\r\n    title: 'React Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoReact',\r\n  },\r\n  {\r\n    title: 'Python Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'IoLogoPython',\r\n  },\r\n  {\r\n    title: 'Database Skills',\r\n    description: 'I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql and Redux. I have built site using next.js, Gatsby. I have beginners understading of Typescript. My current resume site is built using react typescript and all typescripts types are writen by me with my knowlwdege.',\r\n    icon: 'FiDatabase',\r\n  },\r\n]\r\n\r\n\r\nexport interface SkillsCapabilitiesInterface {\r\n  title: string;\r\n  description: string[];\r\n}\r\n\r\nexport const skillsCapabilities: SkillsCapabilitiesInterface[] = [\r\n  {\r\n    title: \"FrontEnd\",\r\n    description: [\r\n      \"ReactJs\",\r\n      \"JavaScript\",\r\n      \"TypeScript\",\r\n      \"Bootstrap\",\r\n      \"Material UI\"\r\n    ]\r\n      ,\r\n  },\r\n  {\r\n    title: \"Backend\",\r\n    description: [\r\n      \"Python\",\r\n      \"Flask\",\r\n      \"Django\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Database\",\r\n    description: [\r\n      \"SQL\",\r\n      \"Postgres-sql\",\r\n      \"Firebase\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"Source Control\",\r\n    description: [\r\n      \"GitHub\"\r\n    ],\r\n  },\r\n];\r\n\r\n\r\n\r\nexport type Category = \"react\" | \"nextjs\" | \"typescript\" | \"flask\" | \"django\" | \"mongo\" | \"main-projects\" ;\r\nexport interface ProjectInterface {\r\n  id:number;\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  deployed_url: string;\r\n  deployed_url_icon: string;\r\n  github_url: string;\r\n  category: Category[];\r\n  key_techs: string[];\r\n}\r\n\r\nexport interface ResumeDataInterface {\r\n  id: number;\r\n  about_me: string;\r\n  education_details: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      institute_name:string;\r\n      institute_link:string;\r\n      date: string;\r\n      description: string; \r\n      about_me: number;\r\n    }\r\n  ];\r\n  work_expereinces: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      date: string;\r\n      description: string; \r\n      deployed_url:string;\r\n      github_url:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skills: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      description: string; \r\n      icon:string;\r\n      about_me: number;\r\n    }\r\n  ];\r\n  skill_capabilities: [\r\n    {\r\n      id: number;\r\n      title: string;\r\n      category: string[]; \r\n      about_me: number;\r\n    }\r\n  ];\r\n} \r\n\r\nexport const resumeData: ResumeDataInterface[] = [\r\n  {\r\n      \"id\": 1,\r\n      \"about_me\": \"Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented Full Stack Web Developer, qualified with a Diploma in Software Development from Code Institute (CI) and a software engineering degree from Pakistan institute of management science and technology (PIMSAT). Strong understanding of object-oriented programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.d programming and more than two years experience of in web development. I am developing my skills set to be a great asset for my employer.\",\r\n      \"education_details\": [\r\n          {\r\n            \"id\": 1,\r\n            \"title\": \"Full-Stack Web developer\",\r\n            \"institute_name\": \"Code Institute\",\r\n            \"institute_link\": \"https://www.codeinstitute.net/\",\r\n            \"date\": \"Dec-2019 - -Dec-2020\",\r\n            \"description\": \"Full-Stack Web developer\",\r\n            \"about_me\": 1\r\n          }\r\n      ],\r\n      \"work_expereinces\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"Kirk Of the Holy Rood\",\r\n            \"date\": \"Jan-2021 - April-2021\",\r\n            \"description\": \"Python Django application, admin can manage all content including adding removing ministry section pages\",\r\n            \"deployed_url\": \"www.github.com\",\r\n            \"github_url\": \"www.github.com\",\r\n            \"about_me\": 1\r\n        }\r\n      ],\r\n      \"skills\": [\r\n        {\r\n            \"id\": 1,\r\n            \"title\": \"React Skills\",\r\n            \"description\": \"I am decent with React, I understand react fair enough. I have built react E-commerce site using react context, graphql, and Redux. I have built the site using next.js, Gatsby. I have beginner's understanding of Typescript. My current resume site is built using react typescript and all typescripts types are written by me with my knowledge.\",\r\n            \"icon\": \"IoLogoReact\",\r\n            \"about_me\": 1\r\n        }\r\n    ],\r\n    \"skill_capabilities\": [\r\n      {\r\n          \"id\": 1,\r\n          \"title\": \"Frontend\",\r\n          \"category\": [\r\n              \"ReactJs\",\r\n              \"JavaScript\",\r\n              \"TypeScript\",\r\n              \"Bootstrap\",\r\n              \"Material UI\"\r\n          ],\r\n          \"about_me\": 1\r\n      }\r\n  ],\r\n      \r\n      \r\n  },\r\n]\r\n\r\n","import FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolRoundedIcon from '@material-ui/icons/SchoolRounded';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { IoLogoReact, IoLogoPython, IoLogoVercel, IoLogoFirebase } from \"react-icons/io5\";\r\nimport { FiDatabase } from \"react-icons/fi\";\r\nimport { FaGit } from \"react-icons/fa\";\r\nimport { GrHeroku } from \"react-icons/gr\";\r\nimport { SiNetlify } from \"react-icons/si\";\r\n\r\n\r\nconst getIcon = (icon:string | undefined): JSX.Element => {\r\n  switch(icon) {\r\n    case 'WorkIcon':\r\n      return (<WorkIcon className=\"SVG\" />);\r\n    case 'SchoolRoundedIcon':\r\n      return (<SchoolRoundedIcon className=\"SVG\" />);\r\n    case 'FacebookIcon':\r\n      return (<FacebookIcon className=\"SVG\" />);\r\n    case 'TwitterIcon':\r\n      return (<TwitterIcon className=\"SVG\" />);\r\n    case 'LinkedInIcon':\r\n      return (<LinkedInIcon className=\"SVG\" />);\r\n    case 'GitHubIcon':\r\n      return (<GitHubIcon />);\r\n    case 'IoLogoPython':\r\n      return (<IoLogoPython />);\r\n    case 'CloseIcon':\r\n      return (<CloseIcon />);\r\n    case 'IoLogoReact':\r\n      return (<IoLogoReact />);\r\n    case 'FiDatabase':\r\n      return (<FiDatabase />);\r\n    case 'FaGit':\r\n      return (<FaGit />);\r\n    case 'GrHeroku':\r\n      return (<GrHeroku />);\r\n    case 'IoLogoVercel':\r\n      return (<IoLogoVercel />);\r\n    case 'IoLogoFirebase':\r\n      return (<IoLogoFirebase />);\r\n    case 'SiNetlify':\r\n      return (<SiNetlify />);\r\n    default:\r\n      return (<small>No Icon Found</small>);\r\n  }\r\n};\r\n\r\nexport default getIcon;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport { HomeRounded, Telegram } from '@material-ui/icons';\r\n\r\n\r\nimport CustomButton from '../Button/Button';\r\nimport './Header.css';\r\nimport { socials } from '../../utils/types';\r\n\r\nimport getIcon from '../../helperFunctions/getIcon';\r\n\r\n\r\nconst Header = (props:any) => {\r\n  \r\n  const pathName =props?.location?.pathname;\r\n\r\n  return (\r\n    \r\n    <Navbar expand=\"lg\" sticky='top' className='header'>\r\n\r\n      <Nav.Link as={NavLink} to='/' className='header_navlink'>\r\n        <Navbar.Brand className='header_home'>\r\n          <HomeRounded className=\"SVG\" />\r\n        </Navbar.Brand>\r\n      </Nav.Link>\r\n      <div className=\"mobile_social_icons\">\r\n          { \r\n            socials.map((social) => (\r\n              <a \r\n                key={social.icon}\r\n                href={social.link} \r\n                target=\"_blank\" \r\n                rel=\"noreferrer\"\r\n              >{getIcon(social.icon)}</a>\r\n           ))}          \r\n        </div>\r\n      <Navbar.Toggle />\r\n\r\n      <Navbar.Collapse className=\"navbar_collapse\">\r\n        <Nav className='header_left'>\r\n\r\n          <Nav.Link \r\n            as={NavLink} \r\n            to='/'\r\n            className={pathName === \"/\" ? \"header_link_active\" : \"header_link\"}\r\n            >\r\n            Resume\r\n          </Nav.Link>\r\n          <Nav.Link \r\n            as={NavLink} \r\n            to='/portfolio'\r\n            className={pathName === \"/portfolio\" ? \"header_link_active\" : \"header_link\"}\r\n            >\r\n            Portfolio\r\n          </Nav.Link>\r\n          <Nav.Link \r\n            as={NavLink} \r\n            to='/blog'\r\n            className={pathName === \"/blog\" ? \"header_link_active\" : \"header_link\"}\r\n            >\r\n            Blog\r\n          </Nav.Link>\r\n          <Nav.Link \r\n            as={NavLink} \r\n            to='/contact'\r\n            className={pathName === \"/contact\" ? \"header_link_active\" : \"header_link\"}\r\n            >\r\n            Contact\r\n          </Nav.Link>\r\n\r\n        </Nav>\r\n\r\n        <div className='header_right'>\r\n          { \r\n            socials.map((social) => (\r\n              <a \r\n                key={social.icon}\r\n                href={social.link} \r\n                target=\"_blank\" \r\n                rel=\"noreferrer\"\r\n                className=\"not-show-on-smaller-screen\"\r\n              >{getIcon(social.icon)}</a>\r\n           ))}\r\n\r\n          <CustomButton text={'Hire me'} icon={ <Telegram />} />             \r\n        </div>\r\n\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n    \r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","export default __webpack_public_path__ + \"static/media/ash.b620187d.jpg\";","import React from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Typography } from '@material-ui/core';\r\nimport './Timeline.css'\r\n\r\ninterface timeLineProps {\r\n  title: string;\r\n  icon:any;\r\n  children: any;\r\n}\r\n\r\n\r\nconst CustomTimeline = ({ title, icon, children }: timeLineProps ) => {\r\n  return (\r\n    <Timeline className='timeline'>\r\n      <TimelineItem className={'timeline_firstItem'}>\r\n        <TimelineSeparator>\r\n          <TimelineDot className={'timeline_dot_header'}>\r\n            {icon}\r\n          </TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography variant='h6' className={'timeline_header'}>\r\n            {title}\r\n          </Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>      \r\n      {children}\r\n    </Timeline>\r\n \r\n  )\r\n};\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n  <TimelineSeparator className={'separator_padding'}>\r\n    <TimelineDot variant={'outlined'} className={'timeline_dot'} />    \r\n    <TimelineConnector />\r\n  </TimelineSeparator>\r\n)\r\n\r\nexport default CustomTimeline\r\n","import { Typography } from '@material-ui/core'\r\n\r\nimport './profile.css';\r\nimport profileImage from '../../assets/images/ash.jpg';\r\nimport CustomTimeLine, { CustomTimelineSeparator } from '../Timeline/Timeline';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport { profile, socials } from '../../utils/types';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport CustomButton from '../Button/Button'\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\ninterface customTimelinechildren {\r\n  title: string;\r\n  text: string;\r\n  link: string | null;\r\n}\r\n\r\nconst CustomTimelineItem = ({title, text, link}: customTimelinechildren) => (\r\n  <TimelineItem>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent>\r\n      {link ? (\r\n      <Typography className=\"timelineItem_text\">\r\n        <span>{title}: </span>{\" \"}\r\n        <a href={link} target='_blank' rel='noreferrer'>\r\n          {text}\r\n        </a>        \r\n      </Typography>\r\n      ) : (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}: </span>{text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n)\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className='profile container_shadow'>\r\n      <div className='profile_name'>\r\n        <Typography className='name'>{profile.name}</Typography>\r\n        <Typography className='title'>{profile.title}</Typography>\r\n      </div>\r\n\r\n      <figure className='profile_image'>\r\n        <img src={profileImage} alt=\"\" />\r\n      </figure>\r\n\r\n      <div className=\"profile_information\">\r\n        <CustomTimeLine title={''} icon={<ImageSearchIcon className=\"SVG\"/>}  >\r\n          <CustomTimelineItem title='Mobile' text='0739-732-5523' link=\"\"/>\r\n          <CustomTimelineItem title='Email' text={profile.email} link=\"\"/>\r\n          <CustomTimelineItem title='Address' text='Falkirk Scotland' link=\"\"/>\r\n          {\r\n            socials.map((social) => (\r\n              <CustomTimelineItem \r\n                key={social.title}\r\n                title={social.title} \r\n                text={social.text} \r\n                link={social.link} \r\n              />\r\n            ))\r\n          }\r\n        </CustomTimeLine>\r\n        <div className='button-container'>\r\n          <CustomButton text={\"Download Cv\"} icon={< GetAppIcon />}/>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { Grid, Paper } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst Blog = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n  \r\n      <Grid container spacing={1}>  \r\n        <Grid container item xs={12} spacing={1}>\r\n\r\n          <Grid item xs={3} sm={6} md={4}>\r\n            <Paper className={classes.paper}>item</Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} sm={6} md={4}>\r\n            <Paper className={classes.paper}>item</Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} sm={6} md={4}>\r\n            <Paper className={classes.paper}>item</Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} sm={6} md={4}>\r\n            <Paper className={classes.paper}>item</Paper>\r\n          </Grid>\r\n\r\n        </Grid> \r\n        </Grid>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { ActionType } from '../constants/projectConstants';\r\n\r\nimport { Action } from '../interfaces/interfaces';\r\n//import { ProjectInterface } from '../../utils/resumeData';\r\n\r\nexport const listProjects = () => async (dispatch:  Dispatch<Action>) => {\r\n\r\n   try {\r\n      dispatch({ type: ActionType.PROJECT_LIST_REQUEST })\r\n\r\n      const { data } = await axios.get('/api/projects/');\r\n\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_SUCCESS,\r\n        payload: data\r\n      })\r\n\r\n   } catch (error) {\r\n      dispatch({\r\n        type: ActionType.PROJECT_LIST_FAIL,\r\n        payload: error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n      })\r\n   }\r\n }\r\n","export enum ActionType {\r\n  RESUME_LIST_REQUEST = 'RESUME_LIST_REQUEST',\r\n  RESUME_LIST_SUCCESS = 'RESUME_LIST_SUCCESS',\r\n  RESUME_LIST_FAIL = 'RESUME_LIST__FAIL',\r\n}","import { FunctionComponent } from \"react\";\r\nimport { Category } from '../../utils/types';\r\nimport './ProjectNavbarItem.css';\r\n\r\ninterface  PNIInterface{\r\n  value: Category | \"all\"; \r\n  handlerFilterCategory: Function;  \r\n  active: string;\r\n}\r\n\r\nexport const ProjectNavbarItems:FunctionComponent<PNIInterface> = (\r\n  { \r\n    value, \r\n    handlerFilterCategory, \r\n    active \r\n  }) => {\r\n      let className = \"project-navbar-item hover:text-green\";\r\n      if (active === value) {\r\n        className += \" text-green\"\r\n      };\r\n      return (\r\n        <li className={className} onClick={() => handlerFilterCategory(value)}>\r\n          {value}\r\n        </li>\r\n      );\r\n  };","import { FunctionComponent } from \"react\";\r\nimport { ProjectNavbarItems } from '../ProjectNavbarItem/ProjectNavbarItem';\r\nimport './ProjectNavbar.css';\r\n\r\nconst ProjectsNavbar: FunctionComponent<{\r\n    handlerFilterCategory: Function;\r\n    active: string;\r\n  }> = (props) => {\r\n    return (\r\n      <div className=\"Project-navbar-main\">\r\n        <ProjectNavbarItems value=\"all\" {...props} />\r\n        <ProjectNavbarItems value=\"react\" {...props} />\r\n        <ProjectNavbarItems value=\"mongo\" {...props} />\r\n        <ProjectNavbarItems value=\"django\" {...props} />\r\n        <ProjectNavbarItems value=\"nextjs\" {...props} />\r\n        <ProjectNavbarItems value=\"typescript\" {...props} />\r\n        <ProjectNavbarItems value=\"main-projects\" {...props} />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ProjectsNavbar;","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI components import\r\nimport { Grid, Icon, Typography } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Image } from 'react-bootstrap';\r\n\r\n// Typescript imports\r\nimport { ProjectInterface  } from '../../utils/types';\r\n\r\n// Custom components import\r\nimport CustomButton from '../Button/Button'\r\n// Get icon helper function\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// css imports\r\nimport './ProjectDialog.css';\r\n\r\nconst ProjectDialog:FunctionComponent<{\r\n  projectDialog: null | ProjectInterface;\r\n  open: boolean;\r\n  onClose:(val: boolean) => void;\r\n}> = ({ projectDialog, open, onClose } ) => {\r\n\r\n  return (\r\n    <Dialog \r\n      className=\"projectDialog\" \r\n      fullWidth \r\n      open={open} \r\n      onClose={() => onClose(false)}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\">\r\n      \r\n      <p className=\"dialogClose_button\"  onClick={() => onClose(false)}>\r\n        <Icon>{getIcon('CloseIcon')}</Icon>\r\n      </p>      \r\n\r\n      <DialogTitle className=\"projectDialog_title\" id=\"alert-dialog-title\">{projectDialog?.name}</DialogTitle>\r\n        \r\n        <Image src={projectDialog?.image} rounded fluid alt={projectDialog?.name} />\r\n        <DialogContent id=\"alert-dialog-description\">\r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Description:\r\n          </Typography>\r\n          <Typography variant=\"body2\" className=\"projectDialog_description\">\r\n            {projectDialog?.description}\r\n          </Typography>          \r\n          <Typography variant=\"h6\" className=\"projectDialog_description\">\r\n            Key Techs:\r\n          </Typography>\r\n            <div>\r\n              <Grid container spacing={1}>  \r\n                <Grid container item xs={12} spacing={1}>\r\n                  {\r\n                    projectDialog?.key_techs.map((item) => (\r\n                      <Grid key={item} item xs={2} >\r\n                        <Typography className=\"key-tech-items\" variant=\"body2\">{item}</Typography>\r\n                      </Grid> \r\n                  ))\r\n                  }\r\n                </Grid> \r\n              </Grid>\r\n            </div>\r\n         </DialogContent>\r\n          <DialogActions className=\"projectDialog_actions\">\r\n            <a href={projectDialog?.github_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Codes on Github\" \r\n                icon={getIcon('GitHubIcon')}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n            <a href={projectDialog?.github_url} target=\"_blank\" rel=\"noreferrer\">\r\n              <CustomButton \r\n                text=\"View Live Hosted Site\" \r\n                icon={getIcon(projectDialog?.deployed_url_icon)}\r\n              //</CustomButton>\r\n              />\r\n            </a>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\nexport default ProjectDialog\r\n","import React, { useState, useEffect } from 'react';\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { listProjects } from '../../redux/actions/projectActions';\r\n\r\n// Typescript imports\r\nimport { Category, ProjectInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport {  Card, CardActionArea, CardContent, Grid, Grow, Typography } from '@material-ui/core';\r\nimport { Image } from 'react-bootstrap';\r\n// Custom components import\r\nimport ProjectsNavbar  from '../../components/ProjectNabar/ProjectNavbar';\r\nimport ProjectDialog from '../../components/ProjectDialog/ProjectDialog';\r\n\r\n// css imports\r\nimport './Portfolio.css';\r\n\r\n\r\nconst Portfolio = () => {\r\n  const dispatch = useDispatch();\r\n   \r\n  const {error, loading, projects} =  useTypedSelector(\r\n      (state) => state.projectList\r\n    );\r\n  const [projectsData, setProjectsData] = useState<ProjectInterface[]>([]);  \r\n\r\n  const [projectDialog, setProjectDialog] = useState<null|ProjectInterface>(null);\r\n  const [active, setActive] = useState(\"all\");\r\n\r\n  // UseEffect to dispatch listProjects action\r\n  useEffect(() => {\r\n    dispatch(listProjects())\r\n  },[dispatch]);\r\n\r\n  // UseEffect to update data to ProjectsData\r\n  useEffect(() => {     \r\n    setProjectsData(projects)\r\n  },[projects]);\r\n\r\n  // Filtering sytem for Project Navbar\r\n  const handleFilterCategory = (category: Category | 'all') => {\r\n    if(category === \"all\"){\r\n      setProjectsData((projects))\r\n      setActive(category);\r\n      return;\r\n    }\r\n    const newArray = projects.filter((filteredProject)=> \r\n      filteredProject.category.includes(category)\r\n    );\r\n    setProjectsData(newArray);\r\n    setActive(category);\r\n    }\r\n  \r\n  // State to handel project dialog\r\n  const [open, setOpen] = React.useState(false);\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <Grid className=\"section pb_45 pt_45\">\r\n      <div>\r\n        {/* Title */}\r\n        <Grid item className=\"section_title mb_20\">\r\n          <span></span>\r\n          <h6 className=\"section_title_text\">Portfolio</h6>\r\n        </Grid>\r\n\r\n        {/* Project Navbar */}\r\n        <Grid item xs={12}>\r\n          <ProjectsNavbar\r\n            handlerFilterCategory={handleFilterCategory}\r\n            active={active}\r\n          />\r\n        </Grid>\r\n        <Grid container spacing={1}>  \r\n          <Grid container item xs={12} spacing={1}>            \r\n            {loading\r\n              ? (<h3>Loading...</h3>)\r\n              : error \r\n              ? (<h3>{error}</h3>)\r\n              : (\r\n                projectsData.map((project) => (     \r\n                <Grid key={project.id} item xs={12} sm={6}>           \r\n                      <div>\r\n                    <Grow in timeout={1000}>\r\n                      <Card\r\n                        className='customCard' \r\n                        onClick={() => {setProjectDialog(project); setOpen(true)}}\r\n                      >\r\n                        <CardActionArea>\r\n                          <Image src={project.image} rounded thumbnail alt={project.name} /> \r\n                          <CardContent>\r\n                            <Typography className='customCard_title'>\r\n                              {project.name}\r\n                            </Typography>\r\n                            <Typography variant='body2' className='customCard_description'>\r\n                              {project.description}\r\n                            </Typography> \r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>                                         \r\n                    </Grow>\r\n                    \r\n                    </div>                  \r\n                </Grid>\r\n              )))}              \r\n          </Grid> \r\n        </Grid>      \r\n      </div>   \r\n      <ProjectDialog projectDialog={projectDialog} open={open} onClose={closeDialog} />   \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Portfolio;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ActionType } from '../constants/resumeConstants';\r\n\r\n\r\nexport const listAboutme = () => async (dispatch: Dispatch<Action>) => {\r\n  try{\r\n    dispatch({ type: ActionType.RESUME_LIST_REQUEST})\r\n    const { data } = await axios.get('/api/about_me/');\r\n\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: ActionType.RESUME_LIST_FAIL,\r\n      payload: error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message\r\n    })\r\n  }\r\n}","import React, { FunctionComponent } from 'react';\r\n// Redux imports\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './WorkExpreience.css'\r\n\r\nconst WorkExpreience:FunctionComponent<{\r\n  work_expereinces:ResumeDataInterface[\"work_expereinces\"];\r\n}> = ({ work_expereinces }) => {\r\n  return (       \r\n      <CustomTimeline \r\n        title='Work Experience'\r\n        icon={getIcon('WorkIcon')}\r\n        >\r\n        {work_expereinces.map((experience) => (\r\n          <TimelineItem key={experience.title}>\r\n            <CustomTimelineSeparator />\r\n            <TimelineContent className='timeline_content'>\r\n              <Typography className=\"timeline_title\">{experience.title}</Typography>\r\n              <Typography variant='caption' className=\"timeline_date\">{experience.date}</Typography>\r\n              <Typography variant='body2' className=\"timeline_description\">{experience.description}</Typography>\r\n              <div className=\"timeline_links\">\r\n                <Typography variant='body2' className=\"timeline_links-typography\">\r\n                  <a href={experience.deployed_url} target=\"_black\" rel=\"noreferrer\">Live Site</a>                        \r\n                </Typography>\r\n                <Typography variant='body2' className=\"timeline_links-typography\">                \r\n                  <a href={experience.github_url} target=\"_black\" rel=\"noreferrer\"> Codes on Git</a>      \r\n                </Typography>\r\n              </div>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </CustomTimeline>\r\n    \r\n  )\r\n}\r\n\r\nexport default WorkExpreience\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Typescript imports\r\n// import { education } from '../../utils/types';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\n\r\n// Custom components import\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline';\r\n\r\n// css imports\r\nimport './Education.css'\r\nimport { ResumeDataInterface } from '../../utils/types'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\n\r\nconst Education:FunctionComponent<{\r\n  education_details:ResumeDataInterface[\"education_details\"];\r\n}> = ({education_details}) => {\r\n  return (\r\n    <CustomTimeline \r\n      title='Education'\r\n      icon={getIcon('SchoolRoundedIcon')}\r\n      >\r\n      {education_details.map((edu) => (\r\n        <TimelineItem key={edu.title}>\r\n          <CustomTimelineSeparator />\r\n          <TimelineContent className='timeline_content'>\r\n            <Typography className=\"timeline_title\">\r\n              <span>{edu.title}</span> \r\n              <span> from </span> \r\n              <span>\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 250, hide: 400 }}\r\n                overlay={<Tooltip id=\"button-tooltip-2\">Check out Institute Link</Tooltip>}\r\n              >         \r\n                <a href={edu.institute_link} className=\"education_link\" target=\"_black\" rel=\"noreferrer\">\r\n                    {edu.institute_name}                 \r\n                </a>\r\n              </OverlayTrigger>\r\n              </span>                              \r\n            </Typography>\r\n            <Typography variant='caption' className=\"timeline_date\">{edu.date}</Typography>\r\n            <Typography variant='body2' className=\"timeline_description\">{edu.description}</Typography>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      ))}\r\n    </CustomTimeline>\r\n  )\r\n}\r\n\r\nexport default Education\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Icon helper function imported\r\nimport  getIcon  from '../../helperFunctions/getIcon';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Icon, Typography } from '@material-ui/core';\r\nimport { Card, CardGroup } from 'react-bootstrap';\r\n\r\nexport const CardComponent:FunctionComponent<{\r\n  icon: string;\r\n  title: string;\r\n  description: string;\r\n}> = ({icon, title, description}) => {\r\n  return (\r\n    <CardGroup>\r\n      <Card>\r\n      <div className=\"service\">                    \r\n        <Icon className=\"service_icon\" style={{margin:'12px', paddingBottom:\"50px\"}}>\r\n          {getIcon(icon)}\r\n        </Icon>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <Typography className=\"service_title\" variant='h6'>\r\n              {title}\r\n            </Typography>\r\n          </Card.Title>\r\n          <Card.Text>\r\n          <Typography className=\"service_description\" variant='body2'>\r\n            {description}\r\n          </Typography>\r\n          </Card.Text>\r\n        </Card.Body>\r\n        </div>\r\n      </Card>\r\n    </CardGroup>  \r\n  )\r\n}\r\n\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Redux imports\r\n\r\n// Typescript imports\r\nimport { ResumeDataInterface } from '../../utils/types';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// Custom components import\r\nimport { CardComponent } from '../Card/CardComponent';\r\n\r\n// css imports\r\nimport './Skills.css'\r\n\r\n\r\nconst Skills:FunctionComponent<{\r\n  skills:ResumeDataInterface[\"skills\"];\r\n}> = ({ skills }) => {\r\n  return (\r\n    <Grid container spacing={3} justify='space-around'>\r\n      {skills.map((skill) => (\r\n        <Grid key={skill.title} item sm={12} md={4}>          \r\n            <CardComponent icon={skill.icon} title={skill.title} description={skill.description} />      \r\n        </Grid>\r\n      ))}\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { FunctionComponent }  from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Paper, Typography } from '@material-ui/core';\r\nimport {  ResumeDataInterface } from '../../utils/types';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\n\r\n// css imports\r\nimport './SkillsCapabilities.css'\r\n\r\nconst SkillsCapabilities:FunctionComponent<{\r\n  skillCapabilities:ResumeDataInterface[\"skill_capabilities\"];\r\n}> = ({ skillCapabilities }) => {\r\n  return (\r\n    <Grid \r\n      container\r\n      justify='space-between' \r\n      className=\"section graybg pb_45 p_50\"\r\n    >\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          {skillCapabilities.map((skill) => (\r\n            <Grid key={skill.title} item xs={12} sm={6} md={3} >\r\n              <Paper elevation={0} className='skill'>\r\n                <Typography variant='h6' className=\"skills_title\">\r\n                  {skill.title}\r\n                </Typography>\r\n                {skill.category.map((element) => (\r\n                  <Typography key={element} variant='body2' className='skill_description'>\r\n                    <TimelineDot variant='outlined' className='timeline_dot'/>{element}\r\n                  </Typography>\r\n                ))}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SkillsCapabilities\r\n","import React, { FunctionComponent } from 'react';\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst SiteTitle:FunctionComponent<{title: string}> = ({title}) => {\r\n  return (\r\n    <Grid item className=\"section_title mb_30\">\r\n      <span></span>\r\n      <h6 className='section_title_text'>{title}</h6>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SiteTitle\r\n","import React, { useState, useEffect} from 'react';\r\n\r\n\r\n// Redux imports\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { listAboutme } from '../../redux/actions/resumeActions';\r\n\r\n\r\n// Material UI and bootstrap Components import\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\n// Custom components import\r\nimport WorkExpreience from '../../components/WorkExpreience/WorkExpreience';\r\nimport Education from '../../components/Education/Education';\r\nimport Skills from '../../components/Skills/Skills';\r\nimport SkillsCapabilities from '../../components/SkillsCapabilities/SkillsCapabilities';\r\nimport SiteTitle from '../../components/SiteTitle/SiteTitle';\r\n\r\n// css imports\r\nimport './Resume.css';\r\n\r\nimport { ResumeDataInterface } from '../../utils/types'\r\nimport { Alert, Spinner } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Resume = () => {\r\n  const dispatch = useDispatch()\r\n  const {error, loading, aboutme} = useTypedSelector((state) => state.resumeList);\r\n  \r\n\r\n  const [aboutMeText, setAboutMeText] = useState<string>(\"\");\r\n  const [education, setEducation] = useState<ResumeDataInterface[\"education_details\"] | any>([]);\r\n  const [work, setWork] = useState<ResumeDataInterface[\"work_expereinces\"] | any>([]);\r\n  const [skills, setSkills] = useState<ResumeDataInterface[\"skills\"] | any>([]);\r\n  const [skillCapabilities, setSkillCapabilities] = useState<ResumeDataInterface[\"skill_capabilities\"] | any>([]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(listAboutme())\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    aboutme.map((me) => (\r\n      // eslint-disable-next-line no-sequences\r\n      setAboutMeText(me.about_me),\r\n      setEducation(me.education_details),\r\n      setWork(me.work_expereinces),\r\n      setSkills(me.skills),\r\n      setSkillCapabilities(me.skill_capabilities)\r\n    ))\r\n  }, [aboutme]);\r\n \r\n  return (\r\n    <div>\r\n      {\r\n        loading ? \r\n        (<Grid container className=\"section pb_45 pt_45\">\r\n          <Spinner animation=\"border\" variant=\"danger\" />\r\n        </Grid>)\r\n        : error ?\r\n        (\r\n        <Grid container className=\"section pb_45 pt_45\">\r\n          <Alert variant='danger'>\r\n            {error} \r\n          </Alert>\r\n        </Grid>)\r\n        :(\r\n        <div>\r\n\r\n       \r\n      {/* About Me */}\r\n      <Grid container className=\"section pb_45 pt_45\">\r\n        { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n        <SiteTitle title='About Me' />\r\n\r\n        <Grid item xs={12}>        \r\n          <Typography variant='body2' className=\"aboutme_text\">\r\n            {aboutMeText}\r\n          </Typography>      \r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Education and Experience */}\r\n      <Grid container className=\"section pb_45\">\r\n        <SiteTitle title='Resume' />\r\n        <Grid item xs={12}>\r\n          <Grid container className='resume_timeline'>\r\n            {/* Education  */}\r\n            <Grid item sm={12} md={6}>    \r\n              { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}        \r\n              <Education education_details={education}/>\r\n            </Grid>\r\n            {/* Experience */}\r\n            <Grid item sm={12} md={6}>\r\n              { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n              <WorkExpreience work_expereinces={work} /> \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Services */}\r\n      <Grid container className=\"section pb_45\">        \r\n        <SiteTitle title='My Skills' />\r\n        <Grid item xs={12}>\r\n        { loading &&  (<Spinner animation=\"border\" variant=\"danger\" />)}\r\n          <Skills skills={skills}/>\r\n        </Grid>\r\n      </Grid>\r\n      {/* Skills */}\r\n       \r\n      <SkillsCapabilities skillCapabilities={skillCapabilities} />          \r\n      </div>\r\n        )\r\n      } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Resume","import { Container, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport Profile from './components/Profile/Profile';\nimport Blog from './pages/Blog/Blog';\nimport Portfolio from './pages/Portfolio/Portfolio';\nimport Resume from './pages/Resume/Resume';\n\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs>\n          <Router>\n            <Header />\n            <div className=\"main-content container_shadow\">\n              <Switch>\n                <Route path=\"/portfolio\">\n                  <Portfolio />\n                </Route>\n                <Route path=\"/blog\">\n                  <Blog />\n                </Route>\n                <Route path=\"/\">\n                  <Resume />\n                </Route>\n              </Switch>\n            </div>            \n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from '../constants/projectConstants';\r\nimport { Action } from '../interfaces/interfaces';\r\n\r\nimport { ProjectInterface } from '../../utils/types'\r\n\r\n interface ProjectReducerInterface {\r\n   loading: boolean;\r\n   error: string | null;\r\n   projects: ProjectInterface[];\r\n };\r\n\r\n const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  projects: [],\r\n};\r\n\r\nexport const projectListReducer = (\r\n  state:ProjectReducerInterface = initialState, \r\n  action: Action):ProjectReducerInterface  => {\r\n  switch (action.type) {\r\n    case ActionType.PROJECT_LIST_REQUEST:\r\n      return { loading: true, error: null, projects: [] };\r\n\r\n    case ActionType.PROJECT_LIST_SUCCESS:\r\n      return { loading: false, error: null, projects: action.payload };\r\n\r\n    case ActionType.PROJECT_LIST_FAIL:\r\n      return { loading: false, error: action.payload, projects: [] };\r\n    \r\n    default:\r\n      return state\r\n}\r\n}","import { ActionType } from  '../constants/resumeConstants';\r\nimport { Action } from '../interfaces/ResumeInterfaces';\r\n\r\nimport { ResumeDataInterface } from '../../utils/types'\r\n\r\ninterface ResumeReducerInterface {\r\n  loading: boolean;\r\n  error: string | null;\r\n  aboutme: ResumeDataInterface[];\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  aboutme: [],\r\n};\r\n\r\nexport const resumeListReducer = (\r\n  state:ResumeReducerInterface = initialState, \r\n  action:Action):ResumeReducerInterface => {\r\n  switch(action.type){\r\n    case ActionType.RESUME_LIST_REQUEST:\r\n      return {loading:true, error: null, aboutme: [] }\r\n    case ActionType.RESUME_LIST_SUCCESS:\r\n      return {loading:false, error: null, aboutme: action.payload }\r\n    case ActionType.RESUME_LIST_FAIL:\r\n      return {loading:false, error: action.payload, aboutme: []}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { projectListReducer } from './redux/reducers/projectReducers';\r\nimport { resumeListReducer } from './redux/reducers/resumeReducers'\r\n\r\nconst reducers = combineReducers({\r\n  projectList: projectListReducer,\r\n  resumeList: resumeListReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof reducers>;\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducers, initialState,\r\n   composeWithDevTools(applyMiddleware(...middleware )));\r\n\r\n  \r\nexport default store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}